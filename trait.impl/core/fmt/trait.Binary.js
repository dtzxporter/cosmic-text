(function() {var implementors = {
"cosmic_text":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"cosmic_text/struct.CacheKeyFlags.html\" title=\"struct cosmic_text::CacheKeyFlags\">CacheKeyFlags</a>"]],
"read_fonts":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/head/struct.MacStyle.html\" title=\"struct read_fonts::tables::head::MacStyle\">MacStyle</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/glyf/struct.CompositeGlyphFlags.html\" title=\"struct read_fonts::tables::glyf::CompositeGlyphFlags\">CompositeGlyphFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/bitmap/struct.BitmapFlags.html\" title=\"struct read_fonts::tables::bitmap::BitmapFlags\">BitmapFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/gvar/struct.GvarFlags.html\" title=\"struct read_fonts::tables::gvar::GvarFlags\">GvarFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/stat/struct.AxisValueTableFlags.html\" title=\"struct read_fonts::tables::stat::AxisValueTableFlags\">AxisValueTableFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/os2/struct.SelectionFlags.html\" title=\"struct read_fonts::tables::os2::SelectionFlags\">SelectionFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/cpal/struct.PaletteType.html\" title=\"struct read_fonts::tables::cpal::PaletteType\">PaletteType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/gpos/struct.ValueFormat.html\" title=\"struct read_fonts::tables::gpos::ValueFormat\">ValueFormat</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/sbix/struct.HeaderFlags.html\" title=\"struct read_fonts::tables::sbix::HeaderFlags\">HeaderFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/glyf/struct.SimpleGlyphFlags.html\" title=\"struct read_fonts::tables::glyf::SimpleGlyphFlags\">SimpleGlyphFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"read_fonts/tables/variations/struct.EntryFormat.html\" title=\"struct read_fonts::tables::variations::EntryFormat\">EntryFormat</a>"]],
"rustybuzz":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"rustybuzz/struct.BufferFlags.html\" title=\"struct rustybuzz::BufferFlags\">BufferFlags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"rustybuzz/struct.SerializeFlags.html\" title=\"struct rustybuzz::SerializeFlags\">SerializeFlags</a>"]],
"tinyvec":[["impl&lt;'s, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span>"],["impl&lt;A: <a class=\"trait\" href=\"tinyvec/trait.Array.html\" title=\"trait tinyvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A::<a class=\"associatedtype\" href=\"tinyvec/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::Array::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span>"],["impl&lt;A: <a class=\"trait\" href=\"tinyvec/trait.Array.html\" title=\"trait tinyvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A::<a class=\"associatedtype\" href=\"tinyvec/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::Array::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()