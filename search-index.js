var searchIndex = JSON.parse('{\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::marker"],[106,"core::option"],[107,"core::result"],[108,"core::any"],[109,"core::fmt"],[110,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[18,0,0,11,18,11,0,0,11,11,0,11,6,6,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,6,6,0,11,11,11,11,6,6,0,11,11,11,11,11,11,11,11,6,6,6,11,11,6,0,0,7,8,7,8,7,8,7,8,7,8,7,8,8,7,8,7,8,7,8,0,0,0,12,12,12,12,12,12,0,12,12,12,19,0,12,12,12,20],"f":[0,0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],0,[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-1,[]],[[],[[3,[-1]]],[]],[[],[[3,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[4,[[3,[-1]]],[]],[4,[[3,[-1]]],[]],[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[6,[-1]]],1,[]],[[[6,[-1]]],1,[]],0,[-1,[[7,[-1]]],[]],[-1,[[7,[-1]]],[]],[-1,[[8,[-1]]],[]],[-1,[[8,[-1]]],[]],[[[6,[-1]]],4,[]],[[4,-1],[[6,[-1]]],[]],0,[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1,1],5,2],[[-1,-1,1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],5,2],[[-1,-1],5,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[[6,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],3,11],[[[8,[-1]]],3,11],[[[8,[-1]]],-1,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[[12,13],14],[[12,13],14],[-1,-1,[]],[4,[[9,[-1,12]]],11],[-1,-2,[],[]],[-1,12,15],[-1,12,15],[4,[[9,[-1,12]]],2],[[-1,-2],[[9,[5,16]]],11,17],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-2],14,[],17]],"c":[],"p":[[15,"bool"],[8,"Sized",105],[4,"Option",106],[15,"str"],[15,"tuple"],[3,"Flag",0],[3,"Iter",65],[3,"IterNames",65],[4,"Result",107],[3,"TypeId",108],[8,"Flags",0],[3,"ParseError",86],[3,"Formatter",109],[6,"Result",109],[8,"Display",109],[3,"Error",109],[8,"Write",109],[8,"Bits",0],[8,"ParseHex",86],[8,"WriteHex",86]],"b":[[92,"impl-Display-for-ParseError"],[93,"impl-Debug-for-ParseError"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":"NICIQSSINIEINNIIIALLFFFFFFFALLLFLLLFFLLLLLLOLLLLLLLLLLFFFLLFFFFFLFFLFLLLLLLLLLLLFLLDILLFFFFFFFFLLLLLFLLLLLLLLFFFFFFFFLFLFFFLLLLLFFFQIENNLLFFFFFLLLLLLLFFLLKFLLFFFFFLFFLFL","n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","allocation","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","clone_into","eq","fill_zeroes","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","write_zeroes","zeroed","zeroed","BoxBytes","TransparentWrapperAlloc","borrow","borrow_mut","box_bytes_of","cast_arc","cast_box","cast_rc","cast_slice_arc","cast_slice_box","cast_slice_rc","cast_vec","deref","deref_mut","drop","from","from","from_box_bytes","from_raw_parts","into","into_raw_parts","layout","peel_arc","peel_box","peel_rc","peel_vec","pod_collect_to_vec","try_cast_arc","try_cast_box","try_cast_rc","try_cast_slice_arc","try_cast_slice_box","try_cast_slice_rc","try_cast_vec","try_from","try_from_box_bytes","try_into","try_zeroed_box","try_zeroed_slice_box","try_zeroed_vec","type_id","wrap_arc","wrap_box","wrap_rc","wrap_vec","zeroed_box","zeroed_slice_box","zeroed_vec","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","clone_into","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":[[0,"bytemuck"],[83,"bytemuck::allocation"],[131,"bytemuck::checked"],[169,"core::fmt"],[170,"core::fmt"],[171,"core::hash"],[172,"core::marker"],[173,"alloc::string"],[174,"core::result"],[175,"core::any"],[176,"alloc::boxed"],[177,"alloc::sync"],[178,"alloc::rc"],[179,"alloc::vec"],[180,"core::ptr::non_null"],[181,"core::alloc::layout"]],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","Stuff to boost things in the <code>alloc</code> crate.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","Fill all bytes of <code>slice</code> with zeroes (see <code>Zeroable</code>).","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Fill all bytes of <code>target</code> with zeroes (see <code>Zeroable</code>).","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","As <code>Box&lt;[u8]&gt;</code>, but remembers the original alignment.","An extension trait for <code>TransparentWrapper</code> and alloc types.","","","Re-interprets <code>Box&lt;T&gt;</code> as <code>BoxBytes</code>.","As <code>try_cast_arc</code>, but unwraps for you.","As <code>try_cast_box</code>, but unwraps for you.","As <code>try_cast_rc</code>, but unwraps for you.","As <code>try_cast_slice_arc</code>, but unwraps for you.","As <code>try_cast_slice_box</code>, but unwraps for you.","As <code>try_cast_slice_rc</code>, but unwraps for you.","As <code>try_cast_vec</code>, but unwraps for you.","","","","Returns the argument unchanged.","","Re-interprets <code>BoxBytes</code> as <code>Box&lt;T&gt;</code>.","Constructs a <code>BoxBytes</code> from its raw parts.","Calls <code>U::from(self)</code>.","Deconstructs a <code>BoxBytes</code> into its raw parts.","Returns the original layout.","Convert an <code>Arc</code> to the wrapper type into an <code>Arc</code> to the …","Convert a box to the wrapper type into a box to the inner …","Convert an <code>Rc</code> to the wrapper type into an <code>Rc</code> to the inner …","Convert a vec of the wrapper type into a vec of the inner …","This “collects” a slice of pod data into a vec of a …","Attempts to cast the content type of a <code>Arc</code>.","Attempts to cast the content type of a <code>Box</code>.","Attempts to cast the content type of a <code>Rc</code>.","Attempts to cast the content type of a <code>Arc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Box&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Rc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Vec</code>.","","Re-interprets <code>BoxBytes</code> as <code>Box&lt;T&gt;</code>.","","Allocates a <code>Box&lt;T&gt;</code> with all of the contents being zeroed …","Allocates a <code>Box&lt;[T]&gt;</code> with all contents being zeroed out.","Allocates a <code>Vec&lt;T&gt;</code> of length and capacity exactly equal to …","","Convert an <code>Arc</code> to the inner type into an <code>Arc</code> to the …","Convert a box to the inner type into a box to the wrapper …","Convert an <code>Rc</code> to the inner type into an <code>Rc</code> to the wrapper …","Convert a vec of the inner type into a vec of the wrapper …","As <code>try_zeroed_box</code>, but unwraps for you.","As <code>try_zeroed_slice_box</code>, but unwraps for you.","As <code>try_zeroed_vec</code> but unwraps for you","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","Returns the argument unchanged.","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[5,0,0,0,27,27,27,0,5,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,5,5,5,0,0,27,27,5,5,27,27,0,28,28,28,28,28,28,28,28,28,28,0,0,0,5,5,0,0,0,0,0,5,0,0,5,0,5,28,28,28,28,28,28,28,28,28,28,0,8,8,0,0,18,18,0,0,0,0,0,0,0,0,18,18,18,18,18,0,18,18,18,18,29,29,29,29,0,0,0,0,0,0,0,0,18,0,18,0,0,0,18,29,29,29,29,0,0,0,25,0,0,26,26,26,26,0,0,0,0,0,26,26,26,26,26,26,26,0,0,26,26,25,0,26,26,0,0,0,0,0,26,0,0,26,0,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[1]]],3],[-1,[[2,[1]]],[3,4]],[-1,-2,3,4],[-1,-2,[3,4],[3,4]],[-1,-2,3,4],[[[2,[-1]]],[[2,[-2]]],3,4],[[[2,[-1]]],[[2,[-2]]],[3,4],[3,4]],0,[5,5],[[-1,-2],6,[],[]],[[5,5],7],[[[2,[-1]]],6,8],[[5,9],10],[[5,9],10],[-1,-1,[]],[[[2,[1]]],-1,4],[[[2,[1]]],-1,[3,4]],[[],[[11,[-1]]],[]],[[],[[11,[-1]]],[]],[[5,-1],6,12],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],0,[-1,-2,13,13],[-1,-2,13,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[6,[[2,[-1]],[2,[-2]],[2,[-1]]]]],3,4],[[[2,[-1]]],[[6,[[2,[-1]],[2,[-2]],[2,[-1]]]]],[3,4],[3,4]],[[[2,[1]]],-1,4],[-1,-2,[],[]],[-1,14,[]],[-1,[[15,[-2,5]]],3,4],[-1,[[15,[-2,5]]],[3,4],[3,4]],[-1,[[15,[-2,5]]],3,4],[[[2,[-1]]],[[15,[[2,[-2]],5]]],3,4],[[[2,[-1]]],[[15,[[2,[-2]],5]]],[3,4],[3,4]],[-1,[[15,[-2]]],[],[]],[[[2,[1]]],[[15,[-1,5]]],4],[[[2,[1]]],[[15,[-1,5]]],[3,4]],[-1,[[15,[-2]]],[],[]],[[[2,[1]]],[[15,[-1,5]]],4],[-1,16,[]],[-1,-2,13,13],[-1,-2,13,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[[[2,[-1]]],[[2,[-2]]],13,13],[-1,6,8],[[],-1,[]],[[],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],18,3],[[[19,[-1]]],[[19,[-2]]],[3,4],[3,4]],[[[17,[-1]]],[[17,[-2]]],3,4],[[[20,[-1]]],[[20,[-2]]],[3,4],[3,4]],[[[19,[[2,[-1]]]]],[[19,[[2,[-2]]]]],[3,4],[3,4]],[[[17,[[2,[-1]]]]],[[17,[[2,[-2]]]]],3,4],[[[20,[[2,[-1]]]]],[[20,[[2,[-2]]]]],[3,4],[3,4]],[[[21,[-1]]],[[21,[-2]]],3,4],[18],[18],[18,6],[-1,-1,[]],[[[17,[-1]]],18,3],[18,[[17,[-1]]],4],[[[22,[1]],23],18],[-1,-2,[],[]],[18,[[6,[[22,[1]],23]]]],[18,23],[[[19,[-1]]],[[19,[-2]]],[],[]],[[[17,[-1]]],[[17,[-2]]],[],[]],[[[20,[-1]]],[[20,[-2]]],[],[]],[[[21,[-1]]],[[21,[-2]]],13,13],[[[2,[-1]]],[[21,[-2]]],3,[3,4]],[[[19,[-1]]],[[15,[[19,[-2]],[6,[5,[19,[-1]]]]]]],[3,4],[3,4]],[[[17,[-1]]],[[15,[[17,[-2]],[6,[5,[17,[-1]]]]]]],3,4],[[[20,[-1]]],[[15,[[20,[-2]],[6,[5,[20,[-1]]]]]]],[3,4],[3,4]],[[[19,[[2,[-1]]]]],[[15,[[19,[[2,[-2]]]],[6,[5,[19,[[2,[-1]]]]]]]]],[3,4],[3,4]],[[[17,[[2,[-1]]]]],[[15,[[17,[[2,[-2]]]],[6,[5,[17,[[2,[-1]]]]]]]]],3,4],[[[20,[[2,[-1]]]]],[[15,[[20,[[2,[-2]]]],[6,[5,[20,[[2,[-1]]]]]]]]],[3,4],[3,4]],[[[21,[-1]]],[[15,[[21,[-2]],[6,[5,[21,[-1]]]]]]],3,4],[-1,[[15,[-2]]],[],[]],[18,[[15,[[17,[-1]],[6,[5,18]]]]],4],[-1,[[15,[-2]]],[],[]],[[],[[15,[[17,[-1]],6]]],8],[24,[[15,[[17,[[2,[-1]]]],6]]],8],[24,[[15,[[21,[-1]],6]]],8],[-1,16,[]],[[[19,[-1]]],[[19,[-2]]],[],[]],[[[17,[-1]]],[[17,[-2]]],[],[]],[[[20,[-1]]],[[20,[-2]]],[],[]],[[[21,[-1]]],[[21,[-2]]],13,13],[[],[[17,[-1]]],8],[24,[[17,[[2,[-1]]]]],8],[24,[[21,[-1]]],8],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,3,25],[-1,-2,[3,4],[3,25]],[-1,-2,3,25],[[[2,[-1]]],[[2,[-2]]],3,25],[[[2,[-1]]],[[2,[-2]]],[3,4],[3,25]],[26,26],[[-1,-2],6,[],[]],[[26,26],7],[[26,9],10],[[26,9],10],[-1,-1,[]],[5,26],[[[2,[1]]],-1,25],[[[2,[1]]],-1,[3,25]],[[26,-1],6,12],[-1,-2,[],[]],[[],7],[[[2,[1]]],-1,25],[-1,-2,[],[]],[-1,14,[]],[-1,[[15,[-2,26]]],3,25],[-1,[[15,[-2,26]]],[3,4],[25,3]],[-1,[[15,[-2,26]]],3,25],[[[2,[-1]]],[[15,[[2,[-2]],26]]],3,25],[[[2,[-1]]],[[15,[[2,[-2]],26]]],[3,4],[25,3]],[-1,[[15,[-2]]],[],[]],[[[2,[1]]],[[15,[-1,26]]],25],[[[2,[1]]],[[15,[-1,26]]],[25,3]],[-1,[[15,[-2]]],[],[]],[[[2,[1]]],[[15,[-1,26]]],25],[-1,16,[]]],"c":[],"p":[[15,"u8"],[15,"slice"],[8,"NoUninit",0],[8,"AnyBitPattern",0],[4,"PodCastError",0],[15,"tuple"],[15,"bool"],[8,"Zeroable",0],[3,"Formatter",169],[6,"Result",169],[4,"Option",170],[8,"Hasher",171],[8,"Sized",172],[3,"String",173],[4,"Result",174],[3,"TypeId",175],[3,"Box",176],[3,"BoxBytes",83],[3,"Arc",177],[3,"Rc",178],[3,"Vec",179],[3,"NonNull",180],[3,"Layout",181],[15,"usize"],[8,"CheckedBitPattern",131],[4,"CheckedCastError",131],[8,"Contiguous",0],[8,"TransparentWrapper",0],[8,"TransparentWrapperAlloc",83]],"b":[[32,"impl-Display-for-PodCastError"],[33,"impl-Debug-for-PodCastError"],[146,"impl-Display-for-CheckedCastError"],[147,"impl-Debug-for-CheckedCastError"]]},\
"cosmic_text":{"doc":"COSMIC Text","t":"ENENEDNDDDSSNNNDNDDNDENDDNDDNNDNENNNDNNNNNSSIDNNNNNNNSEENNDDDDNNNSNNNNSDNDDDDNNNNNSNDNNENNSNNNNNNNNNNNNNNNNDDNNNNNNSNNDNENNNNDDDDDENEEENDEDSNDNNNNNNNDNNESNLKLLLMLLLLKLLLLLLLMLKLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMKLKLLLLMLLLLLLLLLLLLLLLLLKLKLLLMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLMLLLMMLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLMMMMMMMMLLLLMMMMLLMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMCLLLLKLLLLLLKLKLLLLLLLLLLLLLKLLLKLLLLLLLKLLLLLLLLLLLMLMLLMMMKLLMMLMMLLLKLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["Action","Advanced","Affinity","After","Align","Angle","Arc","Attrs","AttrsList","AttrsOwned","BLACK","BOLD","Backspace","Basic","Before","BidiParagraphs","Borrowed","BorrowedWithFontSystem","Buffer","BufferEnd","BufferLine","BufferRef","BufferStart","CacheKey","CacheKeyFlags","Center","Change","ChangeItem","Click","Close","Color","Color","Command","Condensed","Cursive","Cursive","Cursor","CurveTo","Delete","DoubleClick","Down","Drag","EXTRA_BOLD","EXTRA_LIGHT","Edit","Editor","End","End","Enter","Escape","Expanded","ExtraCondensed","ExtraExpanded","FAKE_ITALIC","Family","FamilyOwned","Fantasy","Fantasy","Font","FontMatchAttrs","FontMatchKey","FontSystem","Glyph","GotoLine","Home","IDENTITY","Indent","Insert","Italic","Justified","LIGHT","LayoutCursor","LayoutCursor","LayoutGlyph","LayoutLine","LayoutRun","LayoutRunIter","Left","Left","LeftWord","Line","LineTo","MEDIUM","Mask","Metrics","Monospace","Monospace","Motion","Motion","MoveTo","NORMAL","Name","Name","Next","NextWord","None","None","Normal","Normal","Normal","Oblique","One","Owned","PageDown","PageUp","ParagraphEnd","ParagraphStart","PhysicalGlyph","Placement","Previous","PreviousWord","QuadTo","Right","Right","RightWord","SEMIBOLD","SansSerif","SansSerif","Scroll","Scroll","Selection","SemiCondensed","SemiExpanded","Serif","Serif","ShapeBuffer","ShapeGlyph","ShapeLine","ShapeSpan","ShapeWord","Shaping","SoftHome","Stretch","Style","SubpixelBin","SubpixelMask","SwashCache","SwashContent","SwashImage","THIN","Three","Transform","TripleClick","Two","UltraCondensed","UltraExpanded","Unindent","Up","Vertical","Weight","Word","Word","Wrap","ZERO","Zero","a","action","action","action","add_span","affinity","after","align","all","append","apply_change","apply_change","as_attrs","as_family","as_float","as_rgba","as_rgba_tuple","as_swash","ascent","attrs_list","auto_indent","auto_indent","b","before","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","blank","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_with","borrow_with","borrow_with","buffer_ref","buffer_ref","buffer_ref_mut","buffer_ref_mut","cache_key","cache_key_flags","cache_key_flags","cache_key_flags","cache_key_flags","cache_key_flags","clear","clear_spans","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color_opt","color_opt","color_opt","color_opt","compatible","complement","compute","contains","content","copy_selection","copy_selection","cursor","cursor","cursor_motion","cursor_motion","data","data","db","db_mut","default","default","default","default","default","default","default","default","default","default","default","default","default","default","defaults","delete_range","delete_range","delete_selection","delete_selection","deref","deref_mut","descent","determinant","difference","draw","draw","draw","draw","empty","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","family","family","family_owned","finish_change","finish_change","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_id","font_id","font_id","font_monospace_em_width","font_size","font_size","font_size_bits","fontdb","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after","from_before","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_degrees","from_gradians","from_iter","from_name","from_radians","from_turns","g","get_font","get_font_matches","get_image","get_image_uncached","get_outline_commands","get_span","glyph","glyph_id","glyph_id","glyph_id","glyphs","glyphs","glyphs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","highlight","hit","id","image_cache","index","insert","insert","insert_at","insert_at","insert_string","insert_string","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_locale_and_db","into_text","invert","is_all","is_empty","items","iter","iter_names","layout","layout","layout","layout","layout_cursor","layout_in_buffer","layout_opt","layout_runs","layout_to_buffer","left","level","level","line","line","line","line_height","line_i","line_layout","line_layout","line_shape","line_shape","line_top","line_w","line_y","lines","locale","matches","max_ascent","max_descent","metadata","metadata","metadata","metadata","metadata","metadata","metrics","monospace_em_width","monospace_width","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_in_buffer","new_in_buffer","new_in_buffer","new_with_affinity","new_with_fonts","new_with_locale_and_db","next","next","not","outline_command_cache","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","physical","placement","pre_rotate","pre_scale","pre_translate","r","redraw","redraw","redraw","remove","reset","reset_layout","reset_shaping","reverse","reverse","rgb","rgba","rotation","rotation_about","rtl","rtl","rustybuzz","rustybuzz","scale","scale","scroll","selection","selection","selection_bounds","selection_bounds","set","set_align","set_attrs_list","set_auto_indent","set_auto_indent","set_cursor","set_cursor","set_metadata","set_metrics","set_metrics","set_metrics_and_size","set_metrics_and_size","set_monospace_width","set_redraw","set_redraw","set_redraw","set_rich_text","set_rich_text","set_scroll","set_selection","set_selection","set_size","set_size","set_tab_width","set_tab_width","set_text","set_text","set_text","set_wrap","set_wrap","shape","shape_as_needed","shape_as_needed","shape_as_needed","shape_in_buffer","shape_opt","shape_until_cursor","shape_until_cursor","shape_until_scroll","shape_until_scroll","size","size_hint","skew","source","spans","spans","split_off","split_off","start","start","start","start_change","start_change","stretch","stretch","stretch","style","style","style","sub","sub_assign","symmetric_difference","tab_width","tab_width","text","text","text","then","then_rotate","then_scale","then_translate","to_degrees","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_radians","to_string","to_string","to_string","toggle","top","transform","transform_point","transform_vector","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_codepoints","union","verb","visible_lines","w","w","weight","weight","weight","width","with_buffer","with_buffer","with_buffer_mut","with_buffer_mut","with_buffer_mut","with_pixels","words","wrap","x","x","x","x_advance","x_advance","x_bin","x_offset","x_offset","xx","xy","y","y","y","y_advance","y_advance","y_bin","y_offset","y_offset","yx","yy","lines","x","x","x","x","y","y","y","y"],"q":[[0,"cosmic_text"],[1159,"cosmic_text::Action"],[1168,"core::ops::range"],[1169,"core::option"],[1170,"swash::font"],[1171,"core::marker"],[1172,"core::cmp"],[1173,"zeno::geometry"],[1174,"zeno::geometry"],[1175,"alloc::string"],[1176,"fontdb"],[1177,"core::ops::function"],[1178,"core::iter::traits::collect"],[1179,"core::fmt"],[1180,"core::fmt"],[1181,"core::fmt"],[1182,"fontdb"],[1183,"core::hash"],[1184,"bitflags::iter"],[1185,"bitflags::iter"],[1186,"rustybuzz::face"],[1187,"core::convert"],[1188,"zeno::command"],[1189,"core::ops::function"]],"d":["An action to perform on an <code>Editor</code>","Advanced text shaping and font fallback.","Whether to associate cursors placed at a boundary between …","","Align or justify","Represents an angle in degrees or radians.","","Text attributes","List of text attributes to apply to a line","An owned version of <code>Attrs</code>","Black weight (900), the thickest value.","Bold weight (700).","Delete text behind cursor","Basic shaping with no font fallback.","","An iterator over the paragraphs in the input text. It is …","","A value borrowed together with an <code>FontSystem</code>","A buffer of text that is shaped and laid out","Move cursor to the end of the document","A line (or paragraph) of text that is shaped and laid out","","Move cursor to the start of the document","Key for building a glyph cache","Flags that change rendering","","A set of change items grouped into one logical change","A unique change to an editor","Mouse click at specified position","Closes a subpath, connecting the final point to the …","Text color","32-bit RGBA bitmap.","Path command.","","Glyphs in cursive fonts generally use a more informal …","","Current cursor location","A cubic bezier curve from the previous point to the final …","Delete text in front of cursor","Mouse double click at specified position","Move cursor down","Mouse drag to specified position","Extra-bold weight (800).","Extra light weight (200).","A trait to allow easy replacements of <code>Editor</code>, like …","A wrapper of [<code>Buffer</code>] for easy editing","Move cursor to end of line","","Create new line","Escape, clears selection","","","","Skew by 14 degrees to synthesize italic","A font family.","An owned version of <code>Family</code>","Fantasy fonts are primarily decorative or expressive fonts …","","A font","Font-specific part of <code>Attrs</code> to be used for matching","","Access to the system fonts.","Wraps at a glyph level","Move cursor to specific line","Move cursor to start of line","Identity matrix.","","Insert character at cursor","A form that is generally cursive in nature.","","Light weight (300).","The position of a cursor within a [<code>Buffer</code>].","Apply specific <code>LayoutCursor</code>","A laid out glyph","A line of laid out glyphs","A line of visible text for rendering","An iterator of visible text lines, see <code>LayoutRun</code>","Move cursor left","","Move cursor to next word boundary to the left","Select by lines","A straight line from the previous point to the specified …","Medium weight (500, higher than normal).","8-bit alpha mask.","Metrics of text","The sole criterion of a monospace font is that all glyphs …","","A motion to perform on a <code>Cursor</code>","Move the cursor with some motion","Begins a new subpath at the specified point.","Normal (400).","The name of a font family of choice.","","Move cursor to next character (Self::Right in LTR, …","Move cursor to next word boundary","No selection","No wrapping","A face that is neither italic not obliqued.","Normal selection","","A typically-sloped version of the regular face.","","","Move cursor down one page","Move cursor up one page","Move cursor to end of paragraph","Move cursor to start of paragraph","","Describes the offset and dimensions of a rendered mask.","Move cursor to previous character (Self::Left in LTR, …","Move cursor to previous word boundary","A quadratic curve from the previous point to the final …","Move cursor right","","Move cursor to next word boundary to the right","Semibold weight (600).","Glyphs in sans-serif fonts, as the term is used in CSS, …","","Scroll position in [<code>Buffer</code>]","Scroll specified number of lines","Selection mode","","","Serif fonts represent the formal text style for a script.","","A set of buffers containing allocations for shaped text.","A shaped glyph","A shaped line (or paragraph)","A shaped span (for bidirectional processing)","A shaped word (for word wrapping)","The shaping strategy of some text.","Move cursor to start of line, skipping whitespace","A face width.","Allows italic or oblique faces to be selected.","Binning of subpixel position for cache optimization","32-bit RGBA subpixel mask.","Cache for rasterizing with the swash scaler","Content of a scaled glyph image.","Scaled glyph image.","Thin weight (100), the thinnest value.","","Two dimensional transformation matrix.","Mouse triple click at specified position","","","","","Move cursor up","Move cursor up or down by a number of pixels","Specifies the weight of glyphs in the font, their degree …","Select by words","Word Wrapping","Wrapping mode","Angle of zero degrees.","","Get the alpha component","Perform an Action on the editor","","Perform an Action on the editor","Add an attribute span, removes any previous matching parts …","Whether to associate the cursor with the run before it or …","","Get the Text alignment","Get a flags value with all known bits set.","Append line at end of this line","Apply a change","","","","","Get an array over all of the components, in <code>[r, g, b, a]</code> …","Get a tuple over all of the attributes, in <code>(r, g, b, a)</code> …","","","Get attributes list","Get the current automatic indentation setting","","Get the blue component","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows <code>self</code> together with an <code>FontSystem</code> for more …","Mutably borrows <code>self</code> together with an <code>FontSystem</code> for more …","Mutably borrows the buffer together with an <code>FontSystem</code> for …","Get the internal <code>BufferRef</code>","","Get the internal <code>BufferRef</code>","","Cache key, see CacheKey","Set <code>CacheKeyFlags</code>","","","<code>CacheKeyFlags</code>","","Resets the image to a default state.","Clear the current attribute spans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set Color","","","Optional color override","","Check if this set of attributes can be shaped with another","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Given an origin, offset and bounding box, computes the …","Whether all set bits in a source flags value are also set …","Content of the image.","Copy selection","","Get the current cursor","","Apply a <code>Motion</code> to a <code>Cursor</code>","Apply a <code>Motion</code> to a <code>Cursor</code>","","Raw image data.","Get the database.","Get a mutable reference to the database.","","","","","","","","","","","","","","","Get the default Attrs","Delete text starting at start Cursor and ending at end …","","Delete selection, adjusting cursor and returning true if …","","","","","Returns the determinant of the transform.","The intersection of a source flags value with the …","Draw the buffer","Draw the editor","","Draw the buffer","Get a flags value with all bits unset.","Cursor indicating end of change","End index of cluster in original line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Set Family","","","Get completed change","","<code>CacheKeyFlags</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Font ID","Font id of the glyph","","","Font size in pixels","Font size of the glyph","<code>f32</code> bits of font size","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Creates a new angle from degrees.","Creates a new angle from gradians.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Creates a new angle from radians.","Creates a new angle from turns.","Get the green component","Get a font by its ID.","","Create a swash Image from a cache key, caching results","Create a swash Image from a cache key, without caching …","","Get the attribute span for an index","Index of [<code>LayoutGlyph</code>] in [<code>LayoutLine::glyphs</code>]","Glyph ID","Font id of the glyph","","The array of layout glyphs to draw","Glyphs in line","","","","","","","","","","","","","","","Height in pixels.","Return the pixel span <code>Some((x_left, x_width))</code> of the …","Convert x, y position to Cursor (hit detection)","","","First-byte-index of glyph at cursor (will insert behind …","The bitwise or (<code>|</code>) of the bits in two flags values.","Insert if true, delete if false","Insert text at specified cursor with specified attrs_list","","Insert a string at the current cursor or replacing the …","Insert a string at the current cursor or replacing the …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Consume this <code>FontSystem</code> and return the locale and database.","Consume this line, returning only its text contents as a …","Returns the inverse of the transform, if any.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Change items grouped into one change","Yield a set of contained flags values.","Yield a set of contained named flags values.","Layout line, will cache results","","Index of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]","Index of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]. This will …","Convert a <code>Cursor</code> to a <code>LayoutCursor</code>","Layout a line using a pre-existing shape buffer, will …","Get line layout cache","Get the visible layout runs for rendering and other tasks","","Horizontal offset with respect to the origin specified …","Unicode BiDi embedding level, character is left-to-right …","","Index of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]","Index of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]","Index of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]. This will be …","Line height in pixels","The index of the original text line","Lay out the provided line index and return the result","Lay out the provided line index and return the result","Shape the provided line index and return the result","Shape the provided line index and return the result","Y offset to top of line","Width of line","Y offset to baseline of line","BufferLines (or paragraphs) of text in the buffer","Get the locale.","Check if font matches","Maximum ascent of the glyphs in line","Maximum descent of the glyphs in line","Set metadata","Get line metadata. This will be None if …","","","Metadata from <code>Attrs</code>","","Get the current <code>Metrics</code>","","Get the current <code>monospace_width</code>","Create a new <code>FontSystem</code>, that allows access to any …","","Create a new swash cache","","Create a new set of attributes with sane defaults","","Create a new attributes list with a set of default Attrs","Create an iterator to split the input text into paragraphs …","","","Create a new <code>Buffer</code> with the provided <code>FontSystem</code> and …","Create a new line with the given text and attributes list …","Creates a new transform.","","","Create a new cursor","Create a new <code>LayoutCursor</code>","Create a new cursor","Create a new <code>Editor</code> with the provided [<code>Buffer</code>]","","","Panics","Creates a new empty scaled image.","Create an empty <code>Buffer</code> with the provided <code>Metrics</code>. This is …","Shape a word into a set of glyphs, using a scratch buffer.","Shape a span into a set of words, using a scratch buffer.","Shape a line into a set of spans, using a scratch buffer. …","Create a new cursor, specifying the affinity","Create a new <code>FontSystem</code> with a pre-specified set of fonts.","Create a new <code>FontSystem</code> with a pre-specified locale and …","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","Offset and size of the image.","Returns a new transform that represents a rotation …","Returns a new transform that represents a scale followed …","Returns a new transform that represents a translation …","Get the red component","Get the <code>Buffer</code> redraw flag","Get the <code>Buffer</code> redraw flag","True if a redraw is needed","The intersection of a source flags value with the …","Reset shaping, layout, and metadata caches","Reset only layout cache","Reset shaping and layout caches","","","Create new color with red, green, and blue components","Create new color with red, green, blue, and alpha …","Creates a rotation transform.","Creates a rotation transform around a point.","True if the original paragraph direction is RTL","","","","","Creates a scale transform.","Get the current scroll location","Get the current selection position","","Get the bounds of the current selection","Get the bounds of the current selection","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set the text alignment","Set attributes list","Enable or disable automatic indentation","","Set the current cursor","","Set line metadata. This is stored until the next line reset","Set the current <code>Metrics</code>","Set the current <code>Metrics</code>","Set the current <code>Metrics</code> and buffer dimensions at the same …","Set the current <code>Metrics</code> and buffer dimensions at the same …","Set monospace width monospace glyphs should be resized to …","Set the <code>Buffer</code> redraw flag","Set the <code>Buffer</code> redraw flag","Set redraw needed flag","Set text of buffer, using an iterator of styled spans …","Set text of buffer, using an iterator of styled spans …","Set the current scroll location","Set the current selection position","","Set the current buffer dimensions","Set the current buffer dimensions","Set the current tab width. A <code>tab_width</code> of 0 is not …","","Set text of buffer, using provided attributes for each …","Set text and attributes list","Set text of buffer, using provided attributes for each …","Set the current <code>Wrap</code>","Set the current <code>Wrap</code>","Shape line, will cache results","Shape lines until scroll, after adjusting scroll if the …","","Shape lines until scroll, after adjusting scroll if the …","Shape a line using a pre-existing shape buffer, will cache …","Get line shaping cache","Shape lines until cursor, also scrolling to include cursor …","Shape lines until cursor, also scrolling to include cursor …","Shape lines until scroll","Shape lines until scroll","Get the current buffer dimensions (width, height)","","Creates a skew transform.","Source of the image.","Get the current attribute spans","","Split attributes list at an offset","Split off new line at index","Cursor indicating start of change","Start index of cluster in original line","","Start collecting change","","Set Stretch","","","Set Style","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Get the current tab width","","Get current text","The original text line","Text to be inserted or deleted","Returns a new transform that represents the application of …","Returns a new transform that represents this transform …","Returns a new transform that represents this transform …","Returns a new transform that represents this transform …","Returns the angle in degrees.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the angle in radians.","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Vertical offset with respect to the origin specified when …","Returns the result of a transformation matrix applied to …","Returns the result of applying this transform to a point.","Returns the result of applying this transform to a vector.","Creates a translation transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns the associated verb for the command.","Get the number of lines that can be viewed in the buffer","Width of hitbox","Width of the line","Set Weight","","","Width in pixels.","Get the internal <code>Buffer</code>","Get the internal <code>Buffer</code>","Get the internal <code>Buffer</code>, mutably","Get the internal <code>Buffer</code>, mutably","Get the internal <code>Buffer</code>, mutably","Enumerate pixels in an Image, use <code>with_image</code> for better …","","Get the current <code>Wrap</code>","","X offset of hitbox","Integer component of X offset in line","","","Binning of fractional X offset","X offset in line","","","","","Y offset of hitbox","Integer component of Y offset in line","","","Binning of fractional Y offset","Y offset in line","","","","","","","","","","","",""],"i":[0,53,0,13,0,0,31,0,0,0,33,33,4,53,13,0,31,0,0,44,0,0,44,0,0,16,0,0,4,36,0,59,0,58,22,21,0,36,4,4,44,4,33,33,0,0,44,16,4,4,58,58,58,18,0,0,22,21,0,0,0,0,52,44,44,39,4,4,34,16,33,0,44,0,0,0,0,44,16,44,47,36,33,59,0,22,21,0,4,36,33,22,21,44,44,47,52,34,47,58,34,23,31,44,44,44,44,0,0,44,44,36,44,16,44,33,22,21,0,4,0,58,58,22,21,0,0,0,0,0,0,44,0,0,0,59,0,0,0,33,23,0,4,23,58,58,4,44,44,0,47,52,0,38,23,1,8,6,7,9,42,13,15,18,15,8,6,20,21,23,1,1,26,54,15,8,6,1,13,18,18,18,18,18,18,18,18,55,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,8,8,30,8,6,8,6,50,12,12,20,49,54,32,9,22,33,34,1,21,12,35,20,36,9,37,30,38,15,18,39,40,41,23,42,13,43,44,45,4,46,19,47,48,49,50,51,52,16,53,54,55,56,57,58,59,32,22,33,34,1,21,12,35,20,36,9,37,30,38,15,18,39,40,41,23,42,13,43,44,45,4,46,19,47,48,49,50,51,52,16,53,54,55,56,57,58,59,32,33,1,18,41,23,42,13,43,45,48,58,12,12,20,49,54,12,18,40,18,32,8,6,8,6,30,7,26,32,3,3,33,34,37,38,39,40,42,13,45,19,69,58,59,32,9,8,6,8,6,7,7,54,39,18,30,6,7,7,18,46,49,54,22,33,34,1,21,12,35,20,36,9,37,38,18,41,23,42,13,43,44,45,4,47,48,52,16,53,58,59,18,12,12,20,8,6,41,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,37,30,38,15,18,18,18,18,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,52,16,16,53,69,54,55,56,57,58,59,41,49,54,54,37,49,41,0,22,33,34,3,26,70,1,21,12,35,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,31,31,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,13,13,18,18,18,18,38,38,18,18,38,38,1,3,3,70,70,70,9,43,41,49,54,78,51,55,22,33,34,1,21,12,35,20,18,41,23,53,58,40,78,30,26,70,42,18,46,8,6,8,8,18,18,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,77,79,18,3,15,39,18,18,19,18,18,15,57,43,45,30,15,15,30,57,40,49,56,42,43,45,37,78,30,7,30,7,78,78,78,30,3,12,51,51,12,15,12,20,49,54,30,26,30,3,26,70,21,12,20,9,77,79,37,30,15,39,41,23,42,43,45,6,55,56,57,32,30,55,56,57,42,3,3,77,79,18,70,33,1,18,41,23,42,13,43,45,48,58,49,32,39,39,39,1,8,8,30,18,15,15,15,46,19,1,1,39,39,78,57,0,26,37,39,30,8,6,8,8,18,15,15,8,6,8,6,15,30,7,30,7,30,8,8,30,30,7,30,8,6,30,7,8,6,30,15,7,30,7,15,8,6,7,15,15,30,7,30,7,30,79,39,32,9,57,9,15,46,49,54,8,6,12,12,20,12,12,20,18,18,18,8,6,15,78,46,39,39,39,39,38,58,22,33,34,1,21,12,35,20,36,9,37,30,38,15,18,39,40,41,23,42,13,43,44,45,4,46,19,47,48,49,50,51,52,16,53,54,55,56,57,58,59,32,38,37,52,16,18,40,36,39,39,39,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,22,33,34,3,26,70,1,21,12,35,20,36,9,77,78,79,37,30,38,15,18,39,40,41,23,42,13,43,44,45,6,4,31,46,19,47,48,7,49,50,51,52,16,53,69,54,55,56,57,58,59,32,26,18,36,30,49,51,12,12,20,40,8,8,8,8,7,70,56,30,39,49,50,54,55,41,49,54,39,39,39,49,50,54,55,41,49,54,39,39,96,97,98,99,100,97,98,99,100],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[-1,3,4],5,[]],[[6,3,4],5],[[[7,[-1]],4],5,8],[[9,[11,[10]],12],5],0,[13,14],[15,[[17,[16]]]],[[],18],[[15,15],5],[[-1,19],14,[]],[[6,19],14],[20,12],[21,22],[23,24],[1,[[25,[2]]]],[1,[[5,[2,2,2,2]]]],[26,27],0,[15,9],[-1,14,[]],[6,14],[1,2],[13,14],[[18,18],18],[[18,18],5],[[18,18],18],[[18,18],5],[18,28],[18,28],[[18,18],18],[[18,18],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,3],[[7,[-1]]],29],[[-1,3],[[7,[-1]]],29],[[30,3],[[7,[30]]]],[-1,31,[]],[6,31],[-1,31,[]],[6,31],0,[[12,18],12],0,0,0,0,[32,5],[9,5],[22,22],[33,33],[34,34],[1,1],[21,21],[12,12],[35,35],[20,20],[36,36],[9,9],[37,37],[30,30],[38,38],[15,15],[18,18],[39,39],[40,40],[41,41],[23,23],[42,42],[13,13],[43,43],[44,44],[45,45],[4,4],[46,46],[19,19],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[16,16],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[32,32],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[33,33],60],[[1,1],60],[[18,18],60],[[41,41],60],[[23,23],60],[[42,42],60],[[13,13],60],[[43,43],60],[[45,45],60],[[48,48],60],[[58,58],60],[[12,1],12],0,0,0,0,[[12,12],14],[18,18],[[61,-1,62],[[5,[63,40]]],[[64,[63]]]],[[18,18],14],0,[-1,[[17,[65]]],[]],[6,[[17,[65]]]],[-1,42,[]],[6,42],[[30,3,42,[17,[66]],44],[[17,[[5,[42,[17,[66]]]]]]]],[[[7,[30]],42,[17,[66]],44],[[17,[[5,[42,[17,[66]]]]]]]],[26,[[67,[2]]]],0,[3,68],[3,68],[[],33],[[],34],[[],37],[[],38],[[],39],[[],40],[[],42],[[],13],[[],45],[[],19],[[],69],[[],58],[[],59],[[],32],[9,12],[[-1,42,42],5,[]],[[6,42,42],5],[-1,14,[]],[6,14],[[[7,[-1]]],[],[]],[[[7,[-1]]],[],[]],0,[39,24],[[18,18],18],[[30,3,70,1,-1],5,71],[[6,3,70,1,1,1,-1],5,71],[[[7,[6]],70,1,1,1,-1],5,71],[[[7,[30]],70,1,-1],5,71],[[],18],0,0,0,[[22,22],14],[[33,33],14],[[34,34],14],[[1,1],14],[[21,21],14],[[12,12],14],[[35,35],14],[[20,20],14],[[36,36],14],[[9,9],14],[[37,37],14],[[38,38],14],[[18,18],14],[[41,41],14],[[23,23],14],[[42,42],14],[[13,13],14],[[43,43],14],[[44,44],14],[[45,45],14],[[4,4],14],[[47,47],14],[[48,48],14],[[52,52],14],[[16,16],14],[[53,53],14],[[58,58],14],[[59,59],14],[[18,-1],5,72],[[12,22],12],0,0,[-1,[[17,[19]]],[]],[6,[[17,[19]]]],0,[[22,73],[[75,[5,74]]]],[[33,73],[[75,[5,74]]]],[[34,73],[[75,[5,74]]]],[[3,73],76],[[26,73],76],[[70,73],76],[[1,73],76],[[21,73],76],[[12,73],76],[[35,73],76],[[20,73],76],[[36,73],[[75,[5,74]]]],[[9,73],76],[[77,73],76],[[78,73],76],[[79,73],76],[[37,73],76],[[37,73],76],[[30,73],76],[[38,73],[[75,[5,74]]]],[[15,73],76],[[18,73],76],[[18,73],76],[[18,73],76],[[18,73],76],[[18,73],76],[[39,73],[[75,[5,74]]]],[[40,73],[[75,[5,74]]]],[[41,73],76],[[23,73],76],[[42,73],76],[[13,73],76],[[43,73],76],[[44,73],76],[[45,73],76],[[6,73],76],[[4,73],76],[[31,73],76],[[46,73],76],[[19,73],76],[[47,73],76],[[48,73],76],[[[7,[-1]],73],76,80],[[49,73],76],[[50,73],76],[[51,73],76],[[52,73],76],[[52,73],76],[[16,73],76],[[16,73],76],[[53,73],76],[[69,73],76],[[54,73],76],[[55,73],76],[[56,73],76],[[57,73],76],[[58,73],[[75,[5,74]]]],[[59,73],[[75,[5,74]]]],0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,31],[[[81,[30]]],31],[30,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,13],[14,13],[28,[[17,[18]]]],[28,18],[28,18],[28,18],[24,38],[24,38],[-1,18,72],[82,[[17,[18]]]],[24,38],[24,38],[1,2],[[3,83],[[17,[[81,[26]]]]]],[[3,12],[[81,[[84,[48]]]]]],[[70,3,41],[[17,[32]]]],[[70,3,41],[[17,[32]]]],[[70,3,41],[[17,[[67,[36]]]]]],[[9,10],12],0,0,0,0,0,0,0,[[22,-1],5,85],[[33,-1],5,85],[[34,-1],5,85],[[1,-1],5,85],[[21,-1],5,85],[[12,-1],5,85],[[35,-1],5,85],[[20,-1],5,85],[[18,-1],5,85],[[41,-1],5,85],[[23,-1],5,85],[[53,-1],5,85],[[58,-1],5,85],0,[[78,42,42],[[17,[[5,[24,24]]]]]],[[30,24,24],[[17,[42]]]],[26,83],0,0,[[18,18],5],0,[[-1,42,82,[17,[9]]],42,[]],[[6,42,82,[17,[9]]],42],[[-1,82,[17,[9]]],5,[]],[[-1,82,[17,[9]]],5,[]],[[18,18],18],[[18,18],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18],[3,[[5,[65,68]]]],[15,65],[39,[[17,[39]]]],[18,14],[18,14],0,[18,[[86,[18]]]],[18,[[87,[18]]]],[[15,3,24,24,52,[17,[24]]],[[67,[51]]]],[[57,24,24,52,[17,[16]],[17,[24]]],[[84,[51]]]],0,0,[[30,3,42],[[17,[43]]]],[[15,69,3,24,24,52,[17,[24]]],[[67,[51]]]],[15,[[17,[[84,[51]]]]]],[30,79],[[57,69,24,24,52,[17,[16]],[84,[51]],[17,[24]]],5],0,0,0,0,0,0,0,0,[[30,3,10],[[17,[[67,[51]]]]]],[[[7,[30]],10],[[17,[[67,[51]]]]]],[[30,3,10],[[17,[57]]]],[[[7,[30]],10],[[17,[57]]]],0,0,0,0,[3,82],[[12,88],14],0,0,[[12,10],12],[15,[[17,[10]]]],0,0,0,0,[30,37],[26,[[17,[24]]]],[30,[[17,[24]]]],[[],3],[[68,83],[[17,[26]]]],[[],70],[22,21],[[],12],[12,20],[12,9],[82,77],[30,79],[[24,24],37],[[3,37],30],[[-1,9,53],15,[[64,[65]]]],[[24,24,24,24,24,24],39],[[83,89,24,[5,[24,24]],18],[[5,[41,66,66]]]],[24,[[5,[66,23]]]],[[10,10],42],[[10,10,10],43],[[10,66],45],[-1,6,[[64,[31]]]],[[3,82,9,[11,[10]],90,14,53],55],[[3,82,9,[11,[10]],14,90,53],56],[[3,82,9,53],57],[[],32],[37,30],[[69,3,82,9,[11,[10]],90,14,53],55],[[69,3,82,9,[11,[10]],14,90,53],56],[[69,3,82,9,53],57],[[10,10,13],42],[-1,3,72],[[65,68],3],[77,17],[79,17],[18,18],0,[[33,33],[[17,[60]]]],[[1,1],[[17,[60]]]],[[18,18],[[17,[60]]]],[[41,41],[[17,[60]]]],[[23,23],[[17,[60]]]],[[42,42],[[17,[60]]]],[[13,13],[[17,[60]]]],[[43,43],[[17,[60]]]],[[45,45],[[17,[60]]]],[[48,48],[[17,[60]]]],[[58,58],[[17,[60]]]],[[49,[5,[24,24]],24],50],0,[[39,38],39],[[39,24,24],39],[[39,24,24],39],[1,2],[-1,14,[]],[-1,14,[]],[30,14],[[18,18],5],[15,5],[15,5],[15,5],[46,5],[19,5],[[2,2,2],1],[[2,2,2,2],1],[38,39],[[-1,38],39,[[64,[63]]]],0,0,0,[26,91],[[37,24],37],[[24,24],39],[30,45],[-1,47,[]],[6,47],[-1,[[17,[[5,[42,42]]]]],[]],[-1,[[17,[[5,[42,42]]]]],[]],[[18,18,14],5],[[15,[17,[16]]],14],[[15,9],14],[[-1,14],5,[]],[[6,14],5],[[-1,42],5,[]],[[6,42],5],[[15,10],5],[[30,3,37],5],[[[7,[30]],37],5],[[30,3,37,24,24],5],[[[7,[30]],37,24,24],5],[[30,3,[17,[24]]],5],[[-1,14],5,[]],[[-1,14],5,[]],[[30,14],5],[[30,3,-1,12,53],5,72],[[[7,[30]],-1,12,53],5,72],[[30,45],5],[[-1,47],5,[]],[[6,47],5],[[30,3,24,24],5],[[[7,[30]],24,24],5],[[-1,89],5,[]],[[6,89],5],[[30,3,82,12,53],5],[[15,-1,9],14,[[92,[82]]]],[[[7,[30]],82,12,53],5],[[30,3,52],5],[[[7,[30]],52],5],[[15,3],57],[[-1,3,14],5,[]],[[6,3,14],5],[[[7,[-1]],14],5,8],[[15,69,3],57],[15,[[17,[57]]]],[[30,3,42,14],5],[[[7,[30]],42,14],5],[[30,3,14],5],[[[7,[30]],14],5],[30,[[5,[24,24]]]],[79,[[5,[10,[17,[10]]]]]],[[38,38],39],0,[9,[[84,[[5,[[11,[10]],20]]]]]],0,[[9,10],9],[[15,10],15],0,0,0,[-1,5,[]],[6,5],[[12,58],12],0,0,[[12,34],12],0,0,[[18,18],18],[[18,18],5],[[18,18],18],[-1,89,[]],[6,89],[15,82],0,0,[[39,39],39],[[39,38],39],[[39,24,24],39],[[39,24,24],39],[38,24],[58,89],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,24],[-1,65,[]],[-1,65,[]],[-1,65,[]],[[18,18],5],0,[[36,39],36],[[39,63],63],[[39,63],63],[[24,24],39],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[26,[[67,[28]]]],[[18,18],18],[36,94],[30,66],0,0,[[12,33],12],0,0,0,[[-1,-2],-3,[],95,[]],[[-1,-2],-3,[],95,[]],[[-1,-2],-3,[],95,[]],[[-1,-2],-3,[],95,[]],[[[7,[-1]],-2],-3,8,95,[]],[[70,3,41,1,-1],5,71],0,[30,52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Color",0],[15,"u8"],[3,"FontSystem",0],[4,"Action",0],[15,"tuple"],[3,"Editor",0],[3,"BorrowedWithFontSystem",0],[8,"Edit",0],[3,"AttrsList",0],[15,"usize"],[3,"Range",1168],[3,"Attrs",0],[4,"Affinity",0],[15,"bool"],[3,"BufferLine",0],[4,"Align",0],[4,"Option",1169],[3,"CacheKeyFlags",0],[3,"Change",0],[3,"AttrsOwned",0],[4,"FamilyOwned",0],[4,"Family",0],[4,"SubpixelBin",0],[15,"f32"],[15,"array"],[3,"Font",0],[3,"FontRef",1170],[15,"u32"],[8,"Sized",1171],[3,"Buffer",0],[4,"BufferRef",0],[3,"SwashImage",0],[3,"Weight",0],[4,"Style",0],[3,"FontMatchAttrs",0],[4,"Command",0],[3,"Metrics",0],[3,"Angle",0],[3,"Transform",0],[3,"Placement",0],[3,"CacheKey",0],[3,"Cursor",0],[3,"LayoutCursor",0],[4,"Motion",0],[3,"Scroll",0],[3,"ChangeItem",0],[4,"Selection",0],[3,"FontMatchKey",0],[3,"LayoutGlyph",0],[3,"PhysicalGlyph",0],[3,"LayoutLine",0],[4,"Wrap",0],[4,"Shaping",0],[3,"ShapeGlyph",0],[3,"ShapeWord",0],[3,"ShapeSpan",0],[3,"ShapeLine",0],[4,"Stretch",0],[4,"SwashContent",0],[4,"Ordering",1172],[4,"Origin",1173],[3,"Bounds",1173],[3,"Vector",1173],[8,"Into",1174],[3,"String",1175],[15,"i32"],[15,"slice"],[3,"Database",1176],[3,"ShapeBuffer",0],[3,"SwashCache",0],[8,"FnMut",1177],[8,"IntoIterator",1178],[3,"Formatter",1179],[3,"Error",1179],[4,"Result",1180],[6,"Result",1179],[3,"BidiParagraphs",0],[3,"LayoutRun",0],[3,"LayoutRunIter",0],[8,"Debug",1179],[3,"Arc",1181],[15,"str"],[3,"ID",1176],[3,"Vec",1182],[8,"Hasher",1183],[3,"Iter",1184],[3,"IterNames",1184],[3,"FaceInfo",1176],[15,"u16"],[3,"Level",1185],[3,"Face",1186],[8,"AsRef",1174],[3,"TypeId",1187],[4,"Verb",1188],[8,"FnOnce",1177],[13,"Scroll",1159],[13,"Click",1159],[13,"DoubleClick",1159],[13,"TripleClick",1159],[13,"Drag",1159]],"b":[[183,"impl-CacheKeyFlags"],[184,"impl-Flags-for-CacheKeyFlags"],[448,"impl-BorrowedWithFontSystem%3C\'font_system,+Editor%3C\'buffer%3E%3E"],[449,"impl-BorrowedWithFontSystem%3C\'a,+Buffer%3E"],[505,"impl-Debug-for-Metrics"],[506,"impl-Display-for-Metrics"],[510,"impl-Debug-for-CacheKeyFlags"],[511,"impl-LowerHex-for-CacheKeyFlags"],[512,"impl-UpperHex-for-CacheKeyFlags"],[513,"impl-Octal-for-CacheKeyFlags"],[514,"impl-Binary-for-CacheKeyFlags"],[535,"impl-Debug-for-Wrap"],[536,"impl-Display-for-Wrap"],[537,"impl-Display-for-Align"],[538,"impl-Debug-for-Align"],[589,"impl-From%3CBuffer%3E-for-BufferRef%3C\'buffer%3E"],[590,"impl-From%3CArc%3CBuffer%3E%3E-for-BufferRef%3C\'buffer%3E"],[591,"impl-From%3C%26mut+Buffer%3E-for-BufferRef%3C\'buffer%3E"],[614,"impl-Flags-for-CacheKeyFlags"],[615,"impl-CacheKeyFlags"]]},\
"font_types":{"doc":"Common scalar data types used in font files","t":"DDNRSSNINSSSSSSSDDSSDDIDNNESSSNDSSSSSSSSSDNSDDSSSDDDSSIEDNSQSSISRRSSDSDDSSSSSSSSSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMM","n":["BigEndian","BoundingBox","ByteAfterSpace","CFF_SFTN_VERSION","COMPATIBLE_FULL_NAME","COPYRIGHT_NOTICE","Close","Compatible","CurveTo","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","EPSILON","EPSILON","EPSILON","F26Dot6","F2Dot14","FAMILY_NAME","FULL_NAME","FWord","Fixed","FixedSize","GlyphId","InvalidByte","InvalidLength","InvalidTag","LICENSE_DESCRIPTION","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","LineTo","LongDateTime","MANUFACTURER","MAX","MAX","MAX","MAX","MIN","MIN","MIN","MIN","MajorMinor","MoveTo","NOTDEF","NameId","Nullable","ONE","ONE","ONE","Offset16","Offset24","Offset32","POSTSCRIPT_CID_NAME","POSTSCRIPT_NAME","Pen","PenCommand","Point","QuadTo","RAW_BYTE_LEN","Raw","SAMPLE_TEXT","SUBFAMILY_NAME","Scalar","TRADEMARK","TTC_HEADER_TAG","TT_SFNT_VERSION","TYPOGRAPHIC_FAMILY_NAME","TYPOGRAPHIC_SUBFAMILY_NAME","Tag","UNIQUE_ID","UfWord","Uint24","VARIATIONS_POSTSCRIPT_NAME_PREFIX","VENDOR_URL","VERSION_0_5","VERSION_1_0","VERSION_1_0","VERSION_1_1","VERSION_1_1","VERSION_1_2","VERSION_1_3","VERSION_2_0","VERSION_2_0","VERSION_2_5","VERSION_3_0","VERSION_STRING","Version16Dot16","WWS_FAMILY_NAME","WWS_SUBFAMILY_NAME","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add_assign","add_assign","add_assign","add_assign","apply_to","as_ref","as_secs","be_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","checked_new","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compatible","compatible","compatible","compatible","compatible","curve_to","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div_assign","div_assign","div_assign","div_assign","end_point","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes","from_be_bytes","from_bits","from_bits","from_bits","from_f32","from_f64","from_f64","from_i32","from_i32","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_slice","from_str","from_u32","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","is_null","is_null","is_null","is_null","line_to","major","map","minor","move_to","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_div","mul_div","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_checked","newtype_scalar","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","predefined","quad_to","read","read","round","round","round","saturating_add","saturating_add","saturating_add","saturating_sub","saturating_sub","saturating_sub","scale","set","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_bits","to_bits","to_bits","to_f26dot6","to_f2dot14","to_f32","to_f32","to_f32","to_f64","to_f64","to_fixed","to_fixed","to_fixed","to_i16","to_i32","to_i32","to_major_minor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_raw","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u16","to_u16","to_u16","to_u32","to_u32","to_u32","to_u32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","wrapping_add","wrapping_add","wrapping_add","wrapping_sub","wrapping_sub","wrapping_sub","x","x_max","x_min","y","y_max","y_min","byte","pos","pos","cx0","cx0","cx1","cy0","cy0","cy1","x","x","x","x","y","y","y","y"],"q":[[0,"font_types"],[643,"font_types::InvalidTag"],[646,"font_types::PenCommand"],[660,"core::ops::arith"],[661,"core::ops::arith"],[662,"core::option"],[663,"core::clone"],[664,"core::cmp"],[665,"core::cmp"],[666,"core::ops::arith"],[667,"core::fmt"],[668,"core::hash"],[669,"core::hash"],[670,"core::ops::arith"],[671,"core::ops::arith"],[672,"core::any"]],"d":["A wrapper around raw big-endian bytes for some type.","Minimum and maximum extents of a rectangular region.","","The SFNT version for fonts containing CFF outlines.","Compatible full (Macintosh only).","Copyright notice.","","A trait for determining whether versions are compatible.","","Dark background palette.","Description of the typeface.","Name of the designer of the typeface.","URL of typeface designer (with protocol, e.g., http://, …","This type’s smallest representable value","This type’s smallest representable value","This type’s smallest representable value","32-bit signed fixed point number with 6 bits of fraction.","16-bit signed fixed point number with 14 bits of fraction.","Font family name.","Full font name that reflects all family and relevant …","16-bit signed quantity in font design units.","32-bit signed fixed point number with 16 bits of fraction.","A trait for types that have a known, constant size.","A 16-bit glyph identifier.","","","An error representing an invalid tag.","License description.","URL where additional licensing information can be found.","Light background palette.","","A simple datetime type.","Manufacturer name.","Maximum value.","Maximum value.","Maximum value.","The largest value that can be represented by this integer …","Minimum value.","Minimum value.","Minimum value.","The smallest value that can be represented by this integer …","A type representing a major, minor version pair.","","The identifier reserved for unknown glyphs","Identifier for an informational string (or name).","An offset of a given width for which NULL (zero) is a …","Representation of 1.0.","Representation of 1.0.","Representation of 1.0.","A16-bit offset to a table.","A24-bit offset to a table.","A32-bit offset to a table.","PostScript CID findfont name.","PostScript name for the font.","Interface for accepting a sequence of path commands.","Captures commands to Pen to facilitate implementations …","Two dimensional point with a generic coordinate type.","","The raw size of this type, in bytes.","The raw byte representation of this type.","Sample text.","Font subfamily name.","A trait for font scalars.","Trademark; this is used to save any trademark …","The header tag for a font collection file.","The SFNT version for fonts containing TrueType outlines.","Typographic family name.","Typographic subfamily name.","An OpenType tag.","Unique font identifier.","16-bit unsigned quantity in font design units.","24-bit unsigned integer.","Variations PostScript name prefix.","URL of font vendor (with protocol, e.g., http://, ftp://).","Version 0.5","Version 1.0","Version 1.0","Version 1.1","Version 1.1","Version 1.2","Version 1.3","Version 2.0","Version 2.0","Version 2.5","Version 3.0","Version string.","A legacy 16/16 version encoding Packed 32-bit value with …","WWS family name.","WWS subfamily name.","Representation of 0.0.","Representation of 0.0.","Representation of 0.0.","Returns the absolute value of the number.","Returns the absolute value of the number.","Returns the absolute value of the number.","","","","","","","","","","","The number of seconds since 00:00 1904-01-01, UTC.","Get the raw big-endian bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new point from a single value assigned to both …","Create from a u32, returning <code>None</code> if the value overflows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emit a command to close the current subpath.","","","","","","","","","","","","","","","","","return <code>true</code> if this version is field-compatible with <code>other</code>.","","","","","Emit a cubic bezier segment from the current point with …","","","","","","","","","","","","","","","","","","","","","","","","","The directly stated - not implied - end point of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the largest integer less than or equal to the …","Returns the largest integer less than or equal to the …","Returns the largest integer less than or equal to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the fractional part of the number.","Returns the fractional part of the number.","Returns the fractional part of the number.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a tag from raw big-endian bytes.","","Creates a new fixed point value from the underlying bit …","Creates a new fixed point value from the underlying bit …","Creates a new fixed point value from the underlying bit …","Creates a fixed point value from af32.","Creates a fixed point value from af64.","Creates a fixed point value from af64.","Creates a 16.16 fixed point value from a 32 bit integer.","Creates a 26.6 fixed point value from a 32 bit integer.","Create an instance of this type from raw big-endian bytes","","","","","","","","","","","","","","","","Attempt to construct a new raw value from this slice.","","Construct a new <code>Tag</code> from a big-endian u32, without …","Convert this raw type to its native representation.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the raw byte array representing this tag.","","Return <code>true</code> if this offset is null.","Return <code>true</code> if this offset is null.","Return <code>true</code> if this offset is null.","Emit a line segment from the current point to (x, y).","The major version number","Maps <code>Point&lt;T&gt;</code> to <code>Point&lt;U&gt;</code> by applying a function to each …","The minor version number","Emit a command to begin a new subpath at (x, y).","","","","","","","","","Multiplies <code>self</code> by <code>a</code> and divides the product by <code>b</code>.","Multiplies <code>self</code> by <code>a</code> and divides the product by <code>b</code>.","","","","","","Construct a new <code>GlyphId</code>.","Create with a number of seconds relative to 1904-01-01 …","Create a new identifier from a raw u16 value.","Create a new offset.","Create a new offset.","Create a new offset.","Creates a new point with the given x and y coordinates.","construct a new <code>BigEndian&lt;T&gt;</code> from raw bytes","Construct a <code>Tag</code> from raw bytes.","Create from a u32. Saturates on overflow.","Create a new version with the provided major and minor …","Create a new version with major and minor parts.","Attempt to create a <code>Tag</code> from raw bytes.","An internal macro for implementing the <code>RawType</code> trait.","Return a reference to the inner offset","","","","","","","","","","","","","","","","","Returns an iterator over the set of predefined identifiers …","Emit a quadratic bezier segment from the current point …","Attempt to read a scalar from a slice.","Attempt to read a scalar from a slice.","Returns the nearest integer value.","Returns the nearest integer value.","Returns the nearest integer value.","Saturating addition.","Saturating addition.","Saturating addition.","Saturating substitution.","Saturating substitution.","Saturating substitution.","","Set the value, overwriting the bytes.","","","","","","","","","The representation of this number as a big-endian byte …","The representation of this number as a big-endian byte …","The representation of this number as a big-endian byte …","The representation of this number as a big-endian byte …","The representation of this number as a big-endian byte …","","The representation of this datetime as a big-endian byte …","Return the memory representation of this identifier as a …","Return the memory representation of this tag.","","The representation of this version as a big-endian byte …","The representation of this version as a big-endian byte …","Returns the underlying bit representation of the value.","Returns the underlying bit representation of the value.","Returns the underlying bit representation of the value.","Converts a 16.16 to 26.6 fixed point value.","Converts a 16.16 to 2.14 fixed point value.","Returns the value as an f32.","Converts a 16.16 fixed point value to a single precision …","Converts a 26.6 fixed point value to a single precision …","Returns the value as an f64.","Returns the value as an f64.","Converts a 2.14 to 16.16 fixed point value.","Converts this number to a 16.16 fixed point value.","Converts this number to a 16.16 fixed point value.","","Converts a 16.16 fixed point value to a 32 bit integer, …","Converts a 26.6 fixed point value to a 32 bit integer, …","Return the separate major &amp; minor version numbers.","","","","","","","","","","","","","","","","","","","","","","Encode this type as raw big-endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier as a u16.","Return the identifier as a u16.","","","","Returns this value as an unsigned 32-bit integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that the tag conforms with the spec.","Wrapping addition.","Wrapping addition.","Wrapping addition.","Wrapping substitution.","Wrapping substitution.","Wrapping substitution.","X coordinate.","Maximum extent in the x direction– the right side of a …","Minimum extent in the x direction– the left side of a …","Y coordinate.","Maximum extend in the y direction. In a Y-up coordinate …","Minimum extent in the y direction. In a Y-up coordinate …","","","","","","","","","","","","","","","","",""],"i":[0,0,32,0,27,27,8,0,8,27,27,27,27,1,2,3,0,0,27,27,0,0,0,0,32,32,0,27,27,27,8,0,27,1,2,3,20,1,2,3,20,0,8,26,0,0,1,2,3,0,0,0,27,27,0,0,0,8,68,16,27,27,0,27,0,0,27,27,0,27,0,0,27,27,33,33,34,33,34,34,34,33,34,33,33,27,0,27,27,1,2,3,1,2,3,1,2,3,4,1,2,3,4,8,10,13,15,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,10,32,20,33,34,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,4,20,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,9,1,2,3,24,25,26,13,27,29,30,31,15,10,20,33,34,69,33,33,34,34,9,22,1,2,3,24,25,26,13,27,28,4,15,10,20,33,34,2,3,4,4,2,3,4,4,8,22,1,2,3,24,25,26,13,27,28,28,29,29,30,30,31,31,8,4,15,15,10,10,10,10,10,32,20,33,34,1,2,3,22,1,1,2,2,3,3,24,24,25,25,26,26,13,27,27,28,29,30,31,8,4,15,15,10,10,32,32,20,20,33,33,34,34,1,2,3,22,1,2,3,24,24,25,25,26,13,27,27,28,29,30,31,8,4,15,15,15,10,32,20,33,34,10,20,1,2,3,1,2,3,2,3,16,1,2,24,25,26,13,27,28,29,30,31,10,20,33,34,15,10,10,15,1,2,3,24,25,26,13,27,15,10,20,33,34,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,10,28,29,30,31,9,34,4,34,9,2,3,4,4,2,3,4,4,2,3,2,3,4,24,25,26,13,27,29,30,31,4,15,10,20,33,34,10,0,28,1,2,3,24,25,26,13,27,29,30,31,15,10,20,33,34,27,9,16,16,1,2,3,1,2,3,1,2,3,22,15,1,2,3,4,1,2,3,4,1,2,3,24,25,26,13,27,10,20,33,34,1,2,3,2,2,1,2,3,2,3,1,24,25,24,2,3,33,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,16,1,2,24,25,26,13,27,28,29,30,31,10,20,33,34,1,2,3,24,25,26,27,15,10,32,20,33,34,25,26,27,29,30,31,20,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,22,1,2,3,24,25,26,13,27,28,29,30,31,8,4,15,10,32,20,33,34,10,1,2,3,1,2,3,4,22,22,4,22,22,70,70,71,72,73,73,72,73,73,74,75,72,73,74,75,72,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[[1,1],1],[[2,2],2],[[3,3],3],[[[4,[-1]],[4,[-1]]],[],5],[[1,1],6],[[2,2],6],[[3,3],6],[[[4,[-1]],[4,[-1]]],6,7],[[8,-1],6,9],[10,[[12,[11]]]],[13,14],[[[15,[-1]]],[[12,[11]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[17,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-1]]],18],[19,[[21,[20]]]],[[[22,[-1]]],[[22,[-1]]],23],[1,1],[2,2],[3,3],[24,24],[25,25],[26,26],[13,13],[27,27],[[[28,[-1]]],[[28,[-1]]],23],[29,29],[30,30],[31,31],[8,8],[[[4,[-1]]],[[4,[-1]]],23],[[[15,[-1]]],[[15,[-1]]],[23,16]],[10,10],[32,32],[20,20],[33,33],[34,34],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,6,[]],[[1,1],35],[[2,2],35],[[3,3],35],[[24,24],35],[[25,25],35],[[26,26],35],[[13,13],35],[[27,27],35],[[29,29],35],[[30,30],35],[[31,31],35],[[[15,[-1]],[15,[-1]]],35,[16,18,36,37]],[[10,10],35],[[20,20],35],[[33,33],35],[[34,34],35],[[-1,-2],38,[],[]],[[33,33],38],[[33,[6,[39,39]]],38],[[34,34],38],[[34,[6,[39,39]]],38],[[-1,40,40,40,40,40,40],6,[]],[[],[[22,[-1]]],41],[[],1],[[],2],[[],3],[[],24],[[],25],[[],26],[[],13],[[],27],[[],[[28,[-1]]],0],[[],[[4,[-1]]],41],[[],[[15,[-1]]],[16,41]],[[],10],[[],20],[[],33],[[],34],[[2,2]],[[3,3]],[[[4,[-1]],-1],[],[42,18]],[[[4,[-1]],[4,[-1]]],[],42],[[2,2],6],[[3,3],6],[[[4,[-1]],[4,[-1]]],6,43],[[[4,[-1]],-1],6,[43,18]],[8,[[21,[[6,[40,40]]]]]],[[[22,[-1]],[22,[-1]]],38,44],[[1,1],38],[[2,2],38],[[3,3],38],[[24,24],38],[[25,25],38],[[26,26],38],[[13,13],38],[[27,27],38],[[[28,[-1]],[28,[-1]]],38,44],[[[28,[-1]],19],38,[[44,[19]]]],[[29,19],38],[[29,29],38],[[30,30],38],[[30,19],38],[[31,31],38],[[31,19],38],[[8,8],38],[[[4,[-1]],[4,[-1]]],38,44],[[[15,[-1]],[15,[-1]]],38,[44,16]],[[[15,[-1]],-1],38,[16,18,44]],[[10,[12,[11]]],38],[[10,[17,[11]]],38],[[10,45],38],[[10,45],38],[[10,10],38],[[32,32],38],[[20,20],38],[[33,33],38],[[34,34],38],[1,1],[2,2],[3,3],[[[22,[-1]],46],47,48],[[1,46],47],[[1,46],47],[[2,46],47],[[2,46],47],[[3,46],47],[[3,46],47],[[24,46],47],[[24,46],47],[[25,46],47],[[25,46],47],[[26,46],47],[[26,46],47],[[13,46],47],[[27,46],47],[[27,46],47],[[[28,[-1]],46],47,48],[[29,46],47],[[30,46],47],[[31,46],47],[[8,46],47],[[[4,[-1]],46],47,48],[[[15,[-1]],46],47,[48,16,18]],[[[15,[-1]],46],47,[49,16,18]],[[10,46],[[51,[6,50]]]],[[10,46],[[51,[6,50]]]],[[32,46],47],[[32,46],47],[[20,46],47],[[20,46],47],[[33,46],47],[[33,46],47],[[34,46],47],[[34,46],47],[1,1],[2,2],[3,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,24],[39,25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[15,[-1]]],16],[-1,-1,[]],[53,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[17,[11]]],10],[[[17,[11]]],20],[52,1],[54,2],[54,3],[40,1],[55,2],[55,3],[54,2],[54,3],[[],-1,[]],[[[17,[11]]],1],[[[17,[11]]],2],[[[17,[11]]],24],[[[17,[11]]],25],[[[17,[11]]],26],[[[17,[11]]],13],[[[17,[11]]],27],[[],[[28,[-1]]],16],[[],29],[[],30],[[],31],[[],10],[[[17,[11]]],20],[[[17,[11]]],33],[[],34],[[[12,[11]]],[[21,[[15,[-1]]]]],16],[45,[[51,[10]]]],[19,10],[[[15,[-1]]],-1,16],[[1,-1],6,56],[[2,-1],6,56],[[3,-1],6,56],[[24,-1],6,56],[[25,-1],6,56],[[26,-1],6,56],[[13,-1],6,56],[[27,-1],6,56],[[[15,[-1]],-2],6,[57,16],56],[[10,-1],6,56],[[20,-1],6,56],[[33,-1],6,56],[[34,-1],6,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[17,[11]]]],[[[28,[-1]]],38,[[44,[19]]]],[29,38],[30,38],[31,38],[[-1,40,40],6,[]],0,[[[4,[-1]],-2],[[4,[-3]]],[],58,[]],0,[[-1,40,40],6,[]],[[2,2]],[[3,3]],[[[4,[-1]],[4,[-1]]],[],59],[[[4,[-1]],-1],[],[59,18]],[[2,2],6],[[3,3],6],[[[4,[-1]],[4,[-1]]],6,60],[[[4,[-1]],-1],6,[60,18]],[[2,2,2],2],[[3,3,3],3],[2,2],[3,3],[[[4,[-1]]],[],61],[52,24],[39,25],[39,26],[14,13],[39,27],[39,29],[20,30],[19,31],[[-1,-1],[[4,[-1]]],[]],[[],[[15,[-1]]],16],[[[17,[11]]],10],[19,20],[[39,39],33],[[39,39],34],[[[12,[11]]],[[51,[10,32]]]],0,[[[28,[-1]]],-1,[]],[[1,1],[[21,[35]]]],[[2,2],[[21,[35]]]],[[3,3],[[21,[35]]]],[[24,24],[[21,[35]]]],[[25,25],[[21,[35]]]],[[26,26],[[21,[35]]]],[[13,13],[[21,[35]]]],[[27,27],[[21,[35]]]],[[29,29],[[21,[35]]]],[[30,30],[[21,[35]]]],[[31,31],[[21,[35]]]],[[[15,[-1]],[15,[-1]]],[[21,[35]]],[16,18,62,44]],[[10,10],[[21,[35]]]],[[20,20],[[21,[35]]]],[[33,33],[[21,[35]]]],[[34,34],[[21,[35]]]],[[],[[0,[63,23]]]],[[-1,40,40,40,40],6,[]],[[[12,[11]]],[[21,[-1]]],[]],[[[12,[11]]],[[21,[-1]]],[]],[1,1],[2,2],[3,3],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],[[[22,[-1]],-1],[[22,[-1]]],[59,18]],[[[15,[-1]],-1],6,16],[[1,1],1],[[2,2],2],[[3,3],3],[[[4,[-1]],[4,[-1]]],[],64],[[1,1],6],[[2,2],6],[[3,3],6],[[[4,[-1]],[4,[-1]]],6,65],[1,[[17,[11]]]],[2,[[17,[11]]]],[3,[[17,[11]]]],[24,[[17,[11]]]],[25,[[17,[11]]]],[26,[[17,[11]]]],[13,[[17,[11]]]],[27,[[17,[11]]]],[10,[[17,[11]]]],[20,[[17,[11]]]],[33,[[17,[11]]]],[34,[[17,[11]]]],[1,52],[2,54],[3,54],[2,3],[2,1],[1,40],[2,40],[3,40],[2,55],[3,55],[1,2],[24,2],[25,2],[24,52],[2,54],[3,54],[33,[[6,[39,39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[1,[[17,[11]]]],[2,[[17,[11]]]],[24,[[17,[11]]]],[25,[[17,[11]]]],[26,[[17,[11]]]],[13,[[17,[11]]]],[27,[[17,[11]]]],[[[28,[-1]]],[],16],[29],[30],[31],[10],[20,[[17,[11]]]],[33,[[17,[11]]]],[34],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[25,39],[26,39],[27,39],[29,19],[30,19],[31,19],[20,19],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[-2]]],[],[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[-1,67,[]],[10,[[51,[6,32]]]],[[1,1],1],[[2,2],2],[[3,3],3],[[1,1],1],[[2,2],2],[[3,3],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"F2Dot14",0],[3,"Fixed",0],[3,"F26Dot6",0],[3,"Point",0],[8,"Add",660],[15,"tuple"],[8,"AddAssign",660],[4,"PenCommand",0],[8,"Pen",0],[3,"Tag",0],[15,"u8"],[15,"slice"],[3,"LongDateTime",0],[15,"i64"],[3,"BigEndian",0],[8,"Scalar",0],[15,"array"],[8,"Copy",661],[15,"u32"],[3,"Uint24",0],[4,"Option",662],[3,"BoundingBox",0],[8,"Clone",663],[3,"FWord",0],[3,"UfWord",0],[3,"GlyphId",0],[3,"NameId",0],[3,"Nullable",0],[3,"Offset16",0],[3,"Offset24",0],[3,"Offset32",0],[4,"InvalidTag",0],[3,"Version16Dot16",0],[3,"MajorMinor",0],[4,"Ordering",664],[8,"Ord",664],[8,"Eq",664],[15,"bool"],[15,"u16"],[15,"f32"],[8,"Default",665],[8,"Div",660],[8,"DivAssign",660],[8,"PartialEq",664],[15,"str"],[3,"Formatter",666],[6,"Result",666],[8,"Debug",666],[8,"Display",666],[3,"Error",666],[4,"Result",667],[15,"i16"],[15,"never"],[15,"i32"],[15,"f64"],[8,"Hasher",668],[8,"Hash",668],[8,"FnMut",669],[8,"Mul",660],[8,"MulAssign",660],[8,"Neg",660],[8,"PartialOrd",664],[8,"Iterator",670],[8,"Sub",660],[8,"SubAssign",660],[3,"String",671],[3,"TypeId",672],[8,"FixedSize",0],[8,"Compatible",0],[13,"InvalidByte",643],[13,"ByteAfterSpace",643],[13,"QuadTo",646],[13,"CurveTo",646],[13,"MoveTo",646],[13,"LineTo",646]],"b":[[212,"impl-Compatible-for-Version16Dot16"],[213,"impl-Compatible%3C(u16,+u16)%3E-for-Version16Dot16"],[214,"impl-Compatible-for-MajorMinor"],[215,"impl-Compatible%3C(u16,+u16)%3E-for-MajorMinor"],[235,"impl-Div%3CT%3E-for-Point%3CT%3E"],[236,"impl-Div-for-Point%3CT%3E"],[239,"impl-DivAssign-for-Point%3CT%3E"],[240,"impl-DivAssign%3CT%3E-for-Point%3CT%3E"],[251,"impl-PartialEq-for-Nullable%3CT%3E"],[252,"impl-PartialEq%3Cu32%3E-for-Nullable%3CT%3E"],[253,"impl-PartialEq%3Cu32%3E-for-Offset16"],[254,"impl-PartialEq-for-Offset16"],[255,"impl-PartialEq-for-Offset24"],[256,"impl-PartialEq%3Cu32%3E-for-Offset24"],[257,"impl-PartialEq-for-Offset32"],[258,"impl-PartialEq%3Cu32%3E-for-Offset32"],[261,"impl-PartialEq-for-BigEndian%3CT%3E"],[262,"impl-PartialEq%3CT%3E-for-BigEndian%3CT%3E"],[263,"impl-PartialEq%3C%26%5Bu8%5D%3E-for-Tag"],[264,"impl-PartialEq%3C%5Bu8;+4%5D%3E-for-Tag"],[265,"impl-PartialEq%3C%26str%3E-for-Tag"],[266,"impl-PartialEq%3Cstr%3E-for-Tag"],[267,"impl-PartialEq-for-Tag"],[276,"impl-Display-for-F2Dot14"],[277,"impl-Debug-for-F2Dot14"],[278,"impl-Debug-for-Fixed"],[279,"impl-Display-for-Fixed"],[280,"impl-Debug-for-F26Dot6"],[281,"impl-Display-for-F26Dot6"],[282,"impl-Display-for-FWord"],[283,"impl-Debug-for-FWord"],[284,"impl-Display-for-UfWord"],[285,"impl-Debug-for-UfWord"],[286,"impl-Display-for-GlyphId"],[287,"impl-Debug-for-GlyphId"],[289,"impl-Display-for-NameId"],[290,"impl-Debug-for-NameId"],[297,"impl-Debug-for-BigEndian%3CT%3E"],[298,"impl-Display-for-BigEndian%3CT%3E"],[299,"impl-Debug-for-Tag"],[300,"impl-Display-for-Tag"],[301,"impl-Debug-for-InvalidTag"],[302,"impl-Display-for-InvalidTag"],[303,"impl-Debug-for-Uint24"],[304,"impl-Display-for-Uint24"],[305,"impl-Debug-for-Version16Dot16"],[306,"impl-Display-for-Version16Dot16"],[307,"impl-Display-for-MajorMinor"],[308,"impl-Debug-for-MajorMinor"],[414,"impl-Mul-for-Point%3CT%3E"],[415,"impl-Mul%3CT%3E-for-Point%3CT%3E"],[418,"impl-MulAssign-for-Point%3CT%3E"],[419,"impl-MulAssign%3CT%3E-for-Point%3CT%3E"]]},\
"fontconfig_parser":{"doc":"This crate provide parsing fontconfig file but not yet …","t":"DNNNNNNNNNNNNNNNNENNNGNDNNNNGNNNNNNNDNNEENNNNNNNNNNNNNNNDNDENGNNNNNNDEENNNNNNNENENNNNNNNNNNNNNNDENNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNGNNENNNNNNNNNNNNNNNNNNEDNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNENEENNNNNNNNDNDNGNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNEDEEENNNNNNNENENNNNNNNNNSSSSSSSSNNNMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMFMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Alias","Alias","All","And","Antialias","Antialias","Any","Append","AppendLast","Aspect","Aspect","Assign","AssignReplace","AutoHint","AutoHint","Bgr","Binary","BinaryOp","Black","Bold","Book","Bool","Bool","CacheDir","CacheDir","Capability","Capability","Cecil","CharSet","CharSet","Charcell","Charset","Charset","Color","Color","Condensed","Config","Config","Config","ConfigPart","Constant","Constant","Contains","Contains","Cwd","Cwd","Decorative","Decorative","Default","Default","Default","Delete","DeleteAll","Demibold","Demilight","Description","Dir","Dir","DirData","DirPrefix","Divide","Double","Double","Dpi","Dpi","Dual","Dynamic","Dynamic","Edit","EditBinding","EditMode","Embeddedbitmap","Embeddedbitmap","Embolden","Embolden","Eq","Eq","Err","Error","Expanded","Expression","Extrabold","Extracondensed","Extraexpanded","Extralight","Family","Family","FamilyLang","FamilyLang","File","File","Floor","Font","Font","Font","FontConfig","FontMatch","Fontfeatures","Fontfeatures","Fontformat","Fontformat","Fonthashint","Fonthashint","Fontversion","Fontversion","Foundry","Foundry","FullName","FullName","FullNameLang","FullNameLang","Glob","GlobalAdvance","GlobalAdvance","Heavy","HintStyle","HintStyle","Hintfull","Hinting","Hinting","Hintmedium","Hintnone","Hintslight","If","Include","Include","Index","Index","Int","Int","Int","IntOrRange","InvalidFormat","IoError","Italic","Lang","Lang","LangSet","Lcddefault","Lcdfilter","Lcdfilter","Lcdlegacy","Lcdlight","Lcdnone","Less","Less","LessEq","LessEq","Light","List","ListOp","Match","Match","MatchTarget","Matrix","Matrix","Matrix","Medium","Minspace","Minspace","Minus","Mono","More","More","MoreEq","MoreEq","Namelang","Namelang","NoFontconfig","None","Normal","Not","NotContains","NotContains","NotEq","NotEq","Oblique","Ok","Or","Order","Order","Outline","Outline","ParseBoolError","ParseEnumError","ParseFloatError","ParseIntError","Pattern","Pattern","Pattern","Pattern","PixelSize","PixelSize","PixelSizeFixupFactor","PixelSizeFixupFactor","Plus","Postscriptname","Postscriptname","PrefixBehavior","Prepend","PrependFirst","Prgname","Prgname","Property","Property","PropertyKind","PropertyTarget","Proportional","Range","Range","Rasterizer","Rasterizer","Regular","Relative","Relative","RemapDir","RemapDir","RemapDirData","ResetDirs","Result","Rgb","Rgba","Rgba","Roman","Round","Same","Scalable","Scalable","Scale","Scale","ScalingNotNeeded","ScalingNotNeeded","Scan","Scan","SelectFont","SelectFont","Semibold","Semicondensed","Semiexpanded","Semilight","Simple","Size","Size","Slant","Slant","Spacing","Spacing","String","Strong","Style","Style","StyleLang","StyleLang","Ternary","TernaryOp","Test","TestCompare","TestQual","TestTarget","Thin","Times","Trunc","Ultracondensed","Ultraexpanded","Ultralight","Unary","UnaryOp","Unknown","Value","Vbgr","VerticalLayout","VerticalLayout","Vrgb","Weak","Weight","Weight","Width","Width","XDG_ENV","XDG_ENV","XDG_ENV","XDG_ENV","XDG_FALLBACK_PATH","XDG_FALLBACK_PATH","XDG_FALLBACK_PATH","XDG_FALLBACK_PATH","Xdg","Xdg","Xml","accept","accepts","alias","aliases","as_path","as_path","binding","blanks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_dirs","calculate_path","calculate_path","calculate_path","calculate_path","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","config","config_files","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dirs","edits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_value","ignore_missing","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kind","make_property","matches","merge_config","mode","parse_config_parts","path","path","path","path","path","path","prefer","prefix","prefix","prefix","prefix","qual","rejects","remap_dirs","rescans","salt","salt","salt","salt","select_fonts","target","target","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value"],"q":[[0,"fontconfig_parser"],[813,"std::path"],[814,"std::path"],[815,"core::marker"],[816,"core::fmt"],[817,"core::fmt"],[818,"core::num::dec2flt"],[819,"core::str::error"],[820,"std::io::error"],[821,"roxmltree::parse"],[822,"alloc::string"],[823,"core::option"],[824,"alloc::vec"],[825,"core::result"],[826,"core::any"]],"d":["Alias elements provide a shorthand notation for the set of …","","","","Whether glyphs can be antialiased","Whether glyphs can be antialiased","","","","Stretches glyphs horizontally before hinting","Stretches glyphs horizontally before hinting","","","Use autohinter instead of normal hinter","Use autohinter instead of normal hinter","","","","","","","","<code>&lt;bool&gt;false&lt;/bool&gt;</code>","","","List of layout capabilities in the font","List of layout capabilities in the font","","","This element holds at least one <code>Value::Int</code> element of an …","","Unicode chars encoded by the font","Unicode chars encoded by the font","Whether any glyphs have color","Whether any glyphs have color","","","","","","","<code>&lt;const&gt;hintslight&lt;/const&gt;</code>","","","","","Whether the style is a decorative variant","Whether the style is a decorative variant","","","","","","","","","","","Final dir data","","","","<code>&lt;double&gt;1.5&lt;/double&gt;</code>","Target dots per inch","Target dots per inch","","","","","","","Use the embedded bitmap instead of the outline","Use the embedded bitmap instead of the outline","Rasterizer should synthetically embolden the font","Rasterizer should synthetically embolden the font","","","Contains the error value","","","","","","","","Font family names","Font family names","Languages corresponding to each family","Languages corresponding to each family","The filename holding the font","The filename holding the font","","","","","","","List of the feature tags in OpenType to be enabled","List of the feature tags in OpenType to be enabled","String name of the font format","String name of the font format","Whether the font has hinting","Whether the font has hinting","Version number of the font","Version number of the font","Font foundry name","Font foundry name","Font full names (often includes style)","Font full names (often includes style)","Languages corresponding to each fullname","Languages corresponding to each fullname","","Use font global advance data (deprecated)","Use font global advance data (deprecated)","","Automatic hinting style","Automatic hinting style","","Whether the rasterizer should use hinting","Whether the rasterizer should use hinting","","","","","","","The index of the font within the file","The index of the font within the file","","<code>&lt;int&gt;0&lt;/int&gt;</code>","","","","","","List of RFC-3066-style languages this font supports","List of RFC-3066-style languages this font supports","This element holds at least one <code>Value::String</code> element of a …","","Type of LCD filter","Type of LCD filter","","","","","","","","","","","","","","","","","","Eliminate leading from line spacing","Eliminate leading from line spacing","","","","","","","Language name to be used for the default value of …","Language name to be used for the default value of …","","","","","","","","","","Contains the success value","","Order number of the font","Order number of the font","Whether the glyphs are outlines","Whether the glyphs are outlines","","","","","","","","","Pixel size","Pixel size","","","","Font family name in PostScript","Font family name in PostScript","","","","String  Name of the running program","String  Name of the running program","","<code>&lt;name target=&quot;font&quot;&gt;pixelsize&lt;/name&gt;</code>","","","","This element holds the two <code>Value::Int</code> elements of a range …","","Which rasterizer is in use (deprecated)","Which rasterizer is in use (deprecated)","","","","This element contains a directory name where will be …","","Final remap-dirs data","","","","unknown, rgb, bgr, vrgb, vbgr, none - subpixel geometry","unknown, rgb, bgr, vrgb, vbgr, none - subpixel geometry","","","","Whether glyphs can be scaled","Whether glyphs can be scaled","Scale factor for point-&gt;pixel conversions (deprecated)","Scale factor for point-&gt;pixel conversions (deprecated)","","","","","","","","","","","","Point size","Point size","Italic, oblique or roman","Italic, oblique or roman","Proportional, dual-width, monospace or charcell","Proportional, dual-width, monospace or charcell","<code>&lt;string&gt;str&lt;/string&gt;</code>","","Font style. Overrides weight and slant","Font style. Overrides weight and slant","Languages corresponding to each style","Languages corresponding to each style","","","This element contains a single value which is compared …","","","","","","","","","","","","","Runtime typed fontconfig value","","Automatic hinting style","Automatic hinting style","","","Light, medium, demibold, bold or black","Light, medium, demibold, bold or black","Condensed, normal or expanded","Condensed, normal or expanded","Environment variable name which used <code>xdg</code> prefix","Environment variable name which used <code>xdg</code> prefix","Environment variable name which used <code>xdg</code> prefix","Environment variable name which used <code>xdg</code> prefix","Fallback path when <code>XDG_ENV</code> is not exists","Fallback path when <code>XDG_ENV</code> is not exists","Fallback path when <code>XDG_ENV</code> is not exists","Fallback path when <code>XDG_ENV</code> is not exists","","","","<code>&lt;accept&gt;</code>","","alias name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate actual path","Calculate actual path","Calculate actual path","Calculate actual path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>&lt;default&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Parse as raw config parts use this when you want custom …","","","","","dir path","dir path will be mapped as the path <code>as-path</code> in cached …","<code>&lt;prefer&gt;</code>","","","","","","","","","","","‘salt’ property affects to determine cache filename. …","‘salt’ property affects to determine cache filename. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,13,23,30,26,27,23,19,19,26,27,19,19,26,27,11,34,0,11,11,11,0,36,0,13,26,27,31,0,36,11,26,27,26,27,11,0,60,13,0,0,36,22,32,60,12,26,27,12,21,35,19,19,11,11,13,0,13,0,0,30,0,36,26,27,11,26,27,0,0,0,26,27,26,27,22,32,54,0,11,0,11,11,11,11,26,27,26,27,26,27,31,21,25,35,0,0,26,27,26,27,26,27,26,27,26,27,26,27,26,27,29,26,27,11,26,27,11,26,27,11,11,11,33,0,13,26,27,0,36,37,0,40,40,11,26,27,36,11,26,27,11,11,11,22,32,22,32,11,34,0,0,13,0,26,27,34,11,26,27,30,11,22,32,22,32,26,27,40,11,11,31,22,32,22,32,11,54,30,26,27,26,27,40,40,40,40,21,25,29,35,26,27,26,27,30,26,27,0,19,19,26,27,0,36,0,0,11,36,37,26,27,11,60,12,0,13,0,13,0,11,26,27,11,31,18,26,27,26,27,26,27,21,25,0,13,11,11,11,11,34,26,27,26,27,26,27,36,18,26,27,26,27,34,0,0,0,0,0,11,30,31,11,11,11,34,0,11,0,11,26,27,11,18,26,27,26,27,1,6,7,8,1,6,7,8,60,12,40,9,28,9,14,8,16,17,10,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,1,6,7,8,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,14,14,9,10,1,6,7,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,35,9,14,24,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,60,40,40,40,40,40,40,9,10,11,1,6,7,8,12,13,13,13,13,13,13,13,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,34,35,36,36,36,36,36,36,36,36,36,37,11,12,18,19,21,22,23,25,27,30,31,32,33,35,11,7,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,26,27,14,14,17,0,1,6,7,8,15,16,9,1,6,7,8,20,28,14,10,1,8,15,16,14,20,24,24,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,60,40,9,10,11,1,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,17,20],"fc":[],"p":[[3,"Dir",0],[3,"PathBuf",813],[3,"Path",813],[8,"AsRef",814],[8,"Sized",815],[3,"CacheDir",0],[3,"Include",0],[3,"RemapDir",0],[3,"Alias",0],[3,"Config",0],[4,"Constant",0],[4,"DirPrefix",0],[4,"ConfigPart",0],[3,"FontConfig",0],[3,"DirData",0],[3,"RemapDirData",0],[3,"Edit",0],[4,"EditBinding",0],[4,"EditMode",0],[3,"Test",0],[4,"TestTarget",0],[4,"TestCompare",0],[4,"TestQual",0],[3,"Match",0],[4,"MatchTarget",0],[4,"Property",0],[4,"PropertyKind",0],[3,"SelectFont",0],[4,"FontMatch",0],[4,"ListOp",0],[4,"UnaryOp",0],[4,"BinaryOp",0],[4,"TernaryOp",0],[4,"Expression",0],[4,"PropertyTarget",0],[4,"Value",0],[4,"IntOrRange",0],[15,"tuple"],[15,"bool"],[4,"Error",0],[3,"Formatter",816],[6,"Result",816],[3,"ParseIntError",817],[3,"ParseFloatError",818],[3,"ParseBoolError",819],[3,"Error",820],[4,"Error",821],[15,"str"],[6,"Double",0],[6,"Bool",0],[6,"Int",0],[3,"String",822],[6,"CharSet",0],[6,"Result",0],[15,"u32"],[4,"Option",823],[3,"Vec",824],[4,"Result",825],[3,"TypeId",826],[4,"PrefixBehavior",0]],"b":[[500,"impl-Display-for-Error"],[501,"impl-Debug-for-Error"],[536,"impl-From%3CParseIntError%3E-for-Error"],[537,"impl-From%3CParseFloatError%3E-for-Error"],[538,"impl-From%3CParseBoolError%3E-for-Error"],[539,"impl-From%3CError%3E-for-Error"],[541,"impl-From%3CError%3E-for-Error"],[550,"impl-From%3CAlias%3E-for-ConfigPart"],[551,"impl-From%3CConfig%3E-for-ConfigPart"],[552,"impl-From%3CDir%3E-for-ConfigPart"],[553,"impl-From%3CCacheDir%3E-for-ConfigPart"],[554,"impl-From%3CMatch%3E-for-ConfigPart"],[556,"impl-From%3CInclude%3E-for-ConfigPart"],[557,"impl-From%3CRemapDir%3E-for-ConfigPart"],[558,"impl-From%3CSelectFont%3E-for-ConfigPart"],[582,"impl-From%3C%26str%3E-for-Value"],[583,"impl-From%3Cf64%3E-for-Value"],[585,"impl-From%3Cbool%3E-for-Value"],[586,"impl-From%3C(PropertyTarget,+PropertyKind)%3E-for-Value"],[587,"impl-From%3CConstant%3E-for-Value"],[588,"impl-From%3Cu32%3E-for-Value"],[589,"impl-From%3CString%3E-for-Value"],[590,"impl-From%3CVec%3CIntOrRange%3E%3E-for-Value"]]},\
"fontdb":{"doc":"<code>fontdb</code> is a simple, in-memory font database with CSS-like …","t":"NNNNNNNNNNNNNNNNNNNNNNNNSSNNNNNNNNNNNNNNNNNNNNNNNNDNNNSSNNNNNNNNNNNNNNNNNNNNDENNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNSENNNNNSNNNNNNNNNNNNSNNNNNNNNNNNNNNNNNDNNNSNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNEENNNSNNNNNNNNNNNNNNNNNNNDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLNNLLLLLLLLMLLLLMLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMML","n":["Afrikaans_SouthAfrica","Albanian_Albania","Alsatian_France","Amharic_Ethiopia","Arabic_Algeria","Arabic_Bahrain","Arabic_Egypt","Arabic_Iraq","Arabic_Jordan","Arabic_Kuwait","Arabic_Lebanon","Arabic_Libya","Arabic_Morocco","Arabic_Oman","Arabic_Qatar","Arabic_SaudiArabia","Arabic_Syria","Arabic_Tunisia","Arabic_UAE","Arabic_Yemen","Armenian_Armenia","Assamese_India","Azeri_Cyrillic_Azerbaijan","Azeri_Latin_Azerbaijan","BLACK","BOLD","Bashkir_Russia","Basque_Basque","Belarusian_Belarus","Bengali_Bangladesh","Bengali_India","Binary","Bosnian_Cyrillic_BosniaAndHerzegovina","Bosnian_Latin_BosniaAndHerzegovina","Breton_France","Bulgarian_Bulgaria","Catalan_Catalan","Chinese_HongKongSAR","Chinese_MacaoSAR","Chinese_PeoplesRepublicOfChina","Chinese_Singapore","Chinese_Taiwan","Condensed","Corsican_France","Croatian_Croatia","Croatian_Latin_BosniaAndHerzegovina","Cursive","Czech_CzechRepublic","Danish_Denmark","Dari_Afghanistan","Database","Divehi_Maldives","Dutch_Belgium","Dutch_Netherlands","EXTRA_BOLD","EXTRA_LIGHT","English_Australia","English_Belize","English_Canada","English_Caribbean","English_India","English_Ireland","English_Jamaica","English_Malaysia","English_NewZealand","English_RepublicOfThePhilippines","English_Singapore","English_SouthAfrica","English_TrinidadAndTobago","English_UnitedKingdom","English_UnitedStates","English_Zimbabwe","Estonian_Estonia","Expanded","ExtraCondensed","ExtraExpanded","FaceInfo","Family","Fantasy","Faroese_FaroeIslands","File","Filipino_Philippines","Finnish_Finland","French_Belgium","French_Canada","French_France","French_Luxembourg","French_PrincipalityOfMonaco","French_Switzerland","Frisian_Netherlands","Galician_Galician","Georgian_Georgia","German_Austria","German_Germany","German_Liechtenstein","German_Luxembourg","German_Switzerland","Greek_Greece","Greenlandic_Greenland","Gujarati_India","Hausa_Latin_Nigeria","Hebrew_Israel","Hindi_India","Hungarian_Hungary","ID","Icelandic_Iceland","Igbo_Nigeria","Indonesian_Indonesia","Inuktitut_Canada","Inuktitut_Latin_Canada","Irish_Ireland","Italian_Italy","Italian_Switzerland","Italic","Japanese_Japan","Kannada_India","Kazakh_Kazakhstan","Khmer_Cambodia","Kiche_Guatemala","Kinyarwanda_Rwanda","Kiswahili_Kenya","Konkani_India","Korean_Korea","Kyrgyz_Kyrgyzstan","LIGHT","Language","Lao_LaoPDR","Latvian_Latvia","Lithuanian_Lithuania","LowerSorbian_Germany","Luxembourgish_Luxembourg","MEDIUM","Macedonian_NorthMacedonia","Malay_BruneiDarussalam","Malay_Malaysia","Malayalam_India","Maltese_Malta","Maori_NewZealand","Mapudungun_Chile","Marathi_India","Mohawk_Mohawk","Mongolian_Cyrillic_Mongolia","Mongolian_Traditional_PeoplesRepublicOfChina","Monospace","NORMAL","Name","Nepali_Nepal","Normal","Normal","Norwegian_Bokmal_Norway","Norwegian_Nynorsk_Norway","Oblique","Occitan_France","Odia_India","Pashto_Afghanistan","Polish_Poland","Portuguese_Brazil","Portuguese_Portugal","Punjabi_India","Quechua_Bolivia","Quechua_Ecuador","Quechua_Peru","Query","Romanian_Romania","Romansh_Switzerland","Russian_Russia","SEMIBOLD","Sami_Inari_Finland","Sami_Lule_Norway","Sami_Lule_Sweden","Sami_Northern_Finland","Sami_Northern_Norway","Sami_Northern_Sweden","Sami_Skolt_Finland","Sami_Southern_Norway","Sami_Southern_Sweden","SansSerif","Sanskrit_India","SemiCondensed","SemiExpanded","Serbian_Cyrillic_BosniaAndHerzegovina","Serbian_Cyrillic_Serbia","Serbian_Latin_BosniaAndHerzegovina","Serbian_Latin_Serbia","Serif","SesothoSaLeboa_SouthAfrica","Setswana_SouthAfrica","SharedFile","Sinhala_SriLanka","Slovak_Slovakia","Slovenian_Slovenia","Source","Spanish_Argentina","Spanish_Bolivia","Spanish_Chile","Spanish_Colombia","Spanish_CostaRica","Spanish_DominicanRepublic","Spanish_Ecuador","Spanish_ElSalvador","Spanish_Guatemala","Spanish_Honduras","Spanish_Mexico","Spanish_ModernSort_Spain","Spanish_Nicaragua","Spanish_Panama","Spanish_Paraguay","Spanish_Peru","Spanish_PuertoRico","Spanish_TraditionalSort_Spain","Spanish_UnitedStates","Spanish_Uruguay","Spanish_Venezuela","Stretch","Style","Swedish_Finland","Swedish_Sweden","Syriac_Syria","THIN","Tajik_Cyrillic_Tajikistan","Tamazight_Latin_Algeria","Tamil_India","Tatar_Russia","Telugu_India","Thai_Thailand","Tibetan_PRC","Turkish_Turkey","Turkmen_Turkmenistan","Uighur_PRC","Ukrainian_Ukraine","UltraCondensed","UltraExpanded","Unknown","UpperSorbian_Germany","Urdu_IslamicRepublicOfPakistan","Uzbek_Cyrillic_Uzbekistan","Uzbek_Latin_Uzbekistan","Vietnamese_Vietnam","Weight","Welsh_UnitedKingdom","Wolof_Senegal","Yakut_Russia","Yi_PRC","Yoruba_Nigeria","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","default","default","dummy","eq","eq","eq","eq","eq","eq","eq","face","face_source","faces","families","families","family_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into","into","into","into","into","into","is_empty","isiXhosa_SouthAfrica","isiZulu_SouthAfrica","len","load_font_data","load_font_file","load_font_source","load_fonts_dir","load_system_fonts","make_face_data_unshared","make_shared_face_data","monospaced","new","partial_cmp","partial_cmp","partial_cmp","post_script_name","primary_language","push_face_info","query","region","remove_face","set_cursive_family","set_fantasy_family","set_monospace_family","set_sans_serif_family","set_serif_family","source","stretch","stretch","style","style","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weight","weight","with_face_data"],"q":[[0,"fontdb"],[425,"core::cmp"],[426,"core::option"],[427,"core::iter::traits::iterator"],[428,"core::fmt"],[429,"core::fmt"],[430,"core::hash"],[431,"alloc::vec"],[432,"std::io::error"],[433,"std::path"],[434,"core::convert"],[435,"tinyvec::tinyvec"],[436,"alloc::sync"],[437,"alloc::string"],[438,"core::convert"],[439,"core::ops::function"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Black weight (900), the thickest value.","Bold weight (700).","","","","","","A font’s raw data, typically backed by a Vec.","","","","","","","","","","","","","","","Glyphs in cursive fonts generally use a more informal …","","","","A font database.","","","","Extra-bold weight (800).","Extra light weight (200).","","","","","","","","","","","","","","","","","","","","","A single font face info.","A font family.","Fantasy fonts are primarily decorative or expressive fonts …","","A font’s path.","","","","","","","","","","","","","","","","","","","","","","","","A unique per database face ID.","","","","","","","","","A form that is generally cursive in nature.","","","","","","","","","","","Light weight (300).","A <code>Name</code> language.","","","","","","Medium weight (500, higher than normal).","","","","","","","","","","","","The sole criterion of a monospace font is that all glyphs …","Normal (400).","The name of a font family of choice.","","A face that is neither italic not obliqued.","","","","A typically-sloped version of the regular face.","","","","","","","","","","","A database query.","","","","Semibold weight (600).","","","","","","","","","","Glyphs in sans-serif fonts, as the term is used in CSS, …","","","","","","","","Serif fonts represent the formal text style for a script.","","","A font’s raw data originating from a shared file mapping.","","","","A font source.","","","","","","","","","","","","","","","","","","","","","","A face width.","Allows italic or oblique faces to be selected.","","","","Thin weight (100), the thinnest value.","","","","","","","","","","","","","","","","","","","","Specifies the weight of glyphs in the font, their degree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a dummy ID.","","","","","","","","Selects a <code>FaceInfo</code> by <code>id</code>.","Returns font face storage and the face index by <code>ID</code>.","Returns an iterator over the internal storage.","A list of family names.","A prioritized list of font family names or generic family …","Returns the generic family name or the <code>Family::Name</code> itself.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","An unique ID.","A face index in the <code>source</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the <code>Database</code> contains no font faces.","","","Returns the number of font faces in the <code>Database</code>.","Loads a font data into the <code>Database</code>.","Loads a font file into the <code>Database</code>.","Loads a font from the given source into the <code>Database</code> and …","Loads font files from the selected directory into the …","Attempts to load system fonts.","Transfers ownership of shared font data back to the font …","Makes the font data that backs the specified face id …","Indicates that the font face is monospaced.","Create a new, empty <code>Database</code>.","","","","A PostScript name.","Returns the primary language.","Pushes a user-provided <code>FaceInfo</code> to the database.","Performs a CSS-like query and returns the best matched …","Returns a language region.","Removes a font face by <code>id</code> from the database.","Sets the family that will be used by <code>Family::Cursive</code>.","Sets the family that will be used by <code>Family::Fantasy</code>.","Sets the family that will be used by <code>Family::Monospace</code>.","Sets the family that will be used by <code>Family::SansSerif</code>.","Sets the family that will be used by <code>Family::Serif</code>.","A font source.","A font face stretch.","Selects a normal, condensed, or expanded face from a font …","A font face style.","Allows italic or oblique faces to be selected.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A font face weight.","Specifies the weight of glyphs in the font, their degree …","Executes a closure with a font’s data."],"i":[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,9,9,9,9,9,4,9,9,9,9,9,9,9,9,9,9,10,9,9,9,6,9,9,9,0,9,9,9,7,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,0,0,6,9,4,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,7,0,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,6,7,6,9,8,10,9,9,8,9,9,9,9,9,9,9,9,9,9,0,9,9,9,7,9,9,9,9,9,9,9,9,9,6,9,10,10,9,9,9,9,6,9,9,4,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,10,10,9,9,9,9,9,9,0,9,9,9,9,9,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,7,10,1,2,5,7,8,10,1,1,5,6,7,8,9,10,2,2,2,3,5,2,1,1,2,3,4,5,6,7,8,9,9,10,1,2,3,4,5,6,7,8,9,10,1,5,6,7,8,10,3,3,1,2,3,4,5,6,7,8,9,10,2,9,9,2,2,2,2,2,2,2,2,3,2,1,7,10,3,9,2,2,9,2,2,2,2,2,2,3,3,5,3,5,10,1,2,3,4,5,6,7,8,9,10,1,9,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,3,5,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[1,1],12],[[7,7],12],[[10,10],12],[[],1],[[],2],[[],5],[[],7],[[],8],[[],10],[[],1],[[1,1],13],[[5,5],13],[[6,6],13],[[7,7],13],[[8,8],13],[[9,9],13],[[10,10],13],[[2,1],[[14,[3]]]],[[2,1],[[14,[[11,[4,15]]]]]],[2,[[0,[16]]]],0,0,[[2,6],17],[[1,18],19],[[1,18],19],[[2,18],19],[[3,18],19],[[4,18],19],[[5,18],19],[[6,18],19],[[7,18],19],[[8,18],19],[[9,18],[[21,[11,20]]]],[[9,18],[[21,[11,20]]]],[[10,18],[[21,[11,20]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,-1],11,22],[[5,-1],11,22],[[6,-1],11,22],[[7,-1],11,22],[[8,-1],11,22],[[10,-1],11,22],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,13],0,0,[2,23],[[2,[25,[24]]],11],[[2,-1],[[21,[11,26]]],[[28,[27]]]],[[2,4],[[30,[[29,[1]]]]]],[[2,-1],11,[[28,[27]]]],[2,11],[[2,1],11],[[2,1],[[14,[[11,[[31,[28]],15]]]]]],0,[[],2],[[1,1],[[14,[12]]]],[[7,7],[[14,[12]]]],[[10,10],[[14,[12]]]],0,[9,17],[[2,3],11],[[2,5],[[14,[1]]]],[9,17],[[2,1],11],[[2,-1],11,[[33,[32]]]],[[2,-1],11,[[33,[32]]]],[[2,-1],11,[[33,[32]]]],[[2,-1],11,[[33,[32]]]],[[2,-1],11,[[33,[32]]]],0,0,0,0,0,[10,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],0,0,[[2,1,-1],[[14,[-2]]],36,[]]],"c":[],"p":[[3,"ID",0],[3,"Database",0],[3,"FaceInfo",0],[4,"Source",0],[3,"Query",0],[4,"Family",0],[3,"Weight",0],[4,"Style",0],[4,"Language",0],[4,"Stretch",0],[15,"tuple"],[4,"Ordering",425],[15,"bool"],[4,"Option",426],[15,"u32"],[8,"Iterator",427],[15,"str"],[3,"Formatter",428],[6,"Result",428],[3,"Error",428],[4,"Result",429],[8,"Hasher",430],[15,"usize"],[15,"u8"],[3,"Vec",431],[3,"Error",432],[3,"Path",433],[8,"AsRef",434],[15,"array"],[4,"TinyVec",435],[3,"Arc",436],[3,"String",437],[8,"Into",434],[15,"u16"],[3,"TypeId",438],[8,"FnOnce",439]],"b":[[307,"impl-Display-for-ID"],[308,"impl-Debug-for-ID"],[316,"impl-Display-for-Language"],[317,"impl-Debug-for-Language"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_DRBG_ENTROPY","ALG_SET_IV","ALG_SET_KEY","ALG_SET_KEY_BY_KEY_SERIAL","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CANXL_HDR_SIZE","CANXL_MAX_DLC","CANXL_MAX_DLC_MASK","CANXL_MAX_DLEN","CANXL_MAX_MTU","CANXL_MIN_DLC","CANXL_MIN_DLEN","CANXL_MIN_MTU","CANXL_MTU","CANXL_PRIO_BITS","CANXL_PRIO_MASK","CANXL_SEC","CANXL_XLF","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RAW_XL_FRAMES","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIGNAL","CSIZE","CSTOPB","CTL_ABI","CTL_BUS","CTL_BUS_ISA","CTL_CPU","CTL_DEBUG","CTL_DEV","CTL_FS","CTL_KERN","CTL_NET","CTL_VM","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_ATTRIB","FAN_AUDIT","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_CREATE","FAN_DELETE","FAN_DELETE_SELF","FAN_DENY","FAN_ENABLE_AUDIT","FAN_EPIDFD","FAN_EVENT_INFO_TYPE_DFID","FAN_EVENT_INFO_TYPE_DFID_NAME","FAN_EVENT_INFO_TYPE_ERROR","FAN_EVENT_INFO_TYPE_FID","FAN_EVENT_INFO_TYPE_NEW_DFID_NAME","FAN_EVENT_INFO_TYPE_OLD_DFID_NAME","FAN_EVENT_INFO_TYPE_PIDFD","FAN_EVENT_ON_CHILD","FAN_FS_ERROR","FAN_INFO","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_EVICTABLE","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORE","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_IGNORE_SURV","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_MOVE","FAN_MOVED_FROM","FAN_MOVED_TO","FAN_MOVE_SELF","FAN_NOFD","FAN_NONBLOCK","FAN_NOPIDFD","FAN_ONDIR","FAN_OPEN","FAN_OPEN_EXEC","FAN_OPEN_EXEC_PERM","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_RENAME","FAN_REPORT_DFID_NAME","FAN_REPORT_DFID_NAME_TARGET","FAN_REPORT_DIR_FID","FAN_REPORT_FID","FAN_REPORT_NAME","FAN_REPORT_PIDFD","FAN_REPORT_TARGET_FID","FAN_REPORT_TID","FAN_RESPONSE_INFO_AUDIT_RULE","FAN_RESPONSE_INFO_NONE","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FS_IOC32_GETFLAGS","FS_IOC32_GETVERSION","FS_IOC32_SETFLAGS","FS_IOC32_SETVERSION","FS_IOC_GETFLAGS","FS_IOC_GETVERSION","FS_IOC_SETFLAGS","FS_IOC_SETVERSION","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_OP","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_ALTDIRFUNC","GLOB_APPEND","GLOB_BRACE","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMAGIC","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GLOB_ONLYDIR","GLOB_PERIOD","GLOB_TILDE","GLOB_TILDE_CHECK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","HWTSTAMP_FILTER_ALL","HWTSTAMP_FILTER_NONE","HWTSTAMP_FILTER_NTP_ALL","HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V1_L4_EVENT","HWTSTAMP_FILTER_PTP_V1_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_SYNC","HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L4_EVENT","HWTSTAMP_FILTER_PTP_V2_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_SYNC","HWTSTAMP_FILTER_SOME","HWTSTAMP_TX_OFF","HWTSTAMP_TX_ON","HWTSTAMP_TX_ONESTEP_P2P","HWTSTAMP_TX_ONESTEP_SYNC","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NAPI","IFF_NAPI_FRAGS","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_CARRIER","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GRO_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_NAMESIZE","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INOTIFY_MAX_QUEUED_EVENTS","INOTIFY_MAX_USER_INSTANCES","INOTIFY_MAX_USER_WATCHES","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IWEVASSOCREQIE","IWEVASSOCRESPIE","IWEVCUSTOM","IWEVEXPIRED","IWEVFIRST","IWEVGENIE","IWEVMICHAELMICFAILURE","IWEVPMKIDCAND","IWEVQUAL","IWEVREGISTERED","IWEVTXDROP","IW_AUTH_80211_AUTH_ALG","IW_AUTH_ALG_LEAP","IW_AUTH_ALG_OPEN_SYSTEM","IW_AUTH_ALG_SHARED_KEY","IW_AUTH_CIPHER_AES_CMAC","IW_AUTH_CIPHER_CCMP","IW_AUTH_CIPHER_GROUP","IW_AUTH_CIPHER_GROUP_MGMT","IW_AUTH_CIPHER_NONE","IW_AUTH_CIPHER_PAIRWISE","IW_AUTH_CIPHER_TKIP","IW_AUTH_CIPHER_WEP104","IW_AUTH_CIPHER_WEP40","IW_AUTH_DROP_UNENCRYPTED","IW_AUTH_FLAGS","IW_AUTH_INDEX","IW_AUTH_KEY_MGMT","IW_AUTH_KEY_MGMT_802_1X","IW_AUTH_KEY_MGMT_PSK","IW_AUTH_MFP","IW_AUTH_MFP_DISABLED","IW_AUTH_MFP_OPTIONAL","IW_AUTH_MFP_REQUIRED","IW_AUTH_PRIVACY_INVOKED","IW_AUTH_ROAMING_CONTROL","IW_AUTH_ROAMING_DISABLE","IW_AUTH_ROAMING_ENABLE","IW_AUTH_RX_UNENCRYPTED_EAPOL","IW_AUTH_TKIP_COUNTERMEASURES","IW_AUTH_WPA_ENABLED","IW_AUTH_WPA_VERSION","IW_AUTH_WPA_VERSION_DISABLED","IW_AUTH_WPA_VERSION_WPA","IW_AUTH_WPA_VERSION_WPA2","IW_CUSTOM_MAX","IW_ENCODE_ALG_AES_CMAC","IW_ENCODE_ALG_CCMP","IW_ENCODE_ALG_NONE","IW_ENCODE_ALG_PMK","IW_ENCODE_ALG_TKIP","IW_ENCODE_ALG_WEP","IW_ENCODE_DISABLED","IW_ENCODE_ENABLED","IW_ENCODE_EXT_GROUP_KEY","IW_ENCODE_EXT_RX_SEQ_VALID","IW_ENCODE_EXT_SET_TX_KEY","IW_ENCODE_EXT_TX_SEQ_VALID","IW_ENCODE_FLAGS","IW_ENCODE_INDEX","IW_ENCODE_MODE","IW_ENCODE_NOKEY","IW_ENCODE_OPEN","IW_ENCODE_RESTRICTED","IW_ENCODE_SEQ_MAX_SIZE","IW_ENCODE_TEMP","IW_ENCODING_TOKEN_MAX","IW_ENC_CAPA_4WAY_HANDSHAKE","IW_ENC_CAPA_CIPHER_CCMP","IW_ENC_CAPA_CIPHER_TKIP","IW_ENC_CAPA_WPA","IW_ENC_CAPA_WPA2","IW_ESSID_MAX_SIZE","IW_EV_CHAR_PK_LEN","IW_EV_LCP_PK_LEN","IW_EV_POINT_PK_LEN","IW_FREQ_AUTO","IW_FREQ_FIXED","IW_GENERIC_IE_MAX","IW_MAX_AP","IW_MAX_BITRATES","IW_MAX_ENCODING_SIZES","IW_MAX_FREQUENCIES","IW_MAX_SPY","IW_MAX_TXPOWER","IW_MICFAILURE_COUNT","IW_MICFAILURE_GROUP","IW_MICFAILURE_KEY_ID","IW_MICFAILURE_PAIRWISE","IW_MICFAILURE_STAKEY","IW_MLME_ASSOC","IW_MLME_AUTH","IW_MLME_DEAUTH","IW_MLME_DISASSOC","IW_MODE_ADHOC","IW_MODE_AUTO","IW_MODE_INFRA","IW_MODE_MASTER","IW_MODE_MESH","IW_MODE_MONITOR","IW_MODE_REPEAT","IW_MODE_SECOND","IW_PMKID_CAND_PREAUTH","IW_PMKID_LEN","IW_PMKSA_ADD","IW_PMKSA_FLUSH","IW_PMKSA_REMOVE","IW_POWER_ALL_R","IW_POWER_FORCE_S","IW_POWER_MAX","IW_POWER_MIN","IW_POWER_MODE","IW_POWER_MODIFIER","IW_POWER_MULTICAST_R","IW_POWER_ON","IW_POWER_PERIOD","IW_POWER_RELATIVE","IW_POWER_REPEATER","IW_POWER_TIMEOUT","IW_POWER_TYPE","IW_POWER_UNICAST_R","IW_PRIV_SIZE_FIXED","IW_PRIV_SIZE_MASK","IW_PRIV_TYPE_ADDR","IW_PRIV_TYPE_BYTE","IW_PRIV_TYPE_CHAR","IW_PRIV_TYPE_FLOAT","IW_PRIV_TYPE_INT","IW_PRIV_TYPE_MASK","IW_PRIV_TYPE_NONE","IW_QUAL_ALL_INVALID","IW_QUAL_ALL_UPDATED","IW_QUAL_DBM","IW_QUAL_LEVEL_INVALID","IW_QUAL_LEVEL_UPDATED","IW_QUAL_NOISE_INVALID","IW_QUAL_NOISE_UPDATED","IW_QUAL_QUAL_INVALID","IW_QUAL_QUAL_UPDATED","IW_QUAL_RCPI","IW_RETRY_LIFETIME","IW_RETRY_LIMIT","IW_RETRY_LONG","IW_RETRY_MAX","IW_RETRY_MIN","IW_RETRY_MODIFIER","IW_RETRY_ON","IW_RETRY_RELATIVE","IW_RETRY_SHORT","IW_RETRY_TYPE","IW_SCAN_ALL_ESSID","IW_SCAN_ALL_FREQ","IW_SCAN_ALL_MODE","IW_SCAN_ALL_RATE","IW_SCAN_CAPA_BSSID","IW_SCAN_CAPA_CHANNEL","IW_SCAN_CAPA_ESSID","IW_SCAN_CAPA_MODE","IW_SCAN_CAPA_NONE","IW_SCAN_CAPA_RATE","IW_SCAN_CAPA_TIME","IW_SCAN_CAPA_TYPE","IW_SCAN_DEFAULT","IW_SCAN_MAX_DATA","IW_SCAN_THIS_ESSID","IW_SCAN_THIS_FREQ","IW_SCAN_THIS_MODE","IW_SCAN_THIS_RATE","IW_SCAN_TYPE_ACTIVE","IW_SCAN_TYPE_PASSIVE","IW_TXPOW_DBM","IW_TXPOW_MWATT","IW_TXPOW_RANGE","IW_TXPOW_RELATIVE","IW_TXPOW_TYPE","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KERN_ACCT","KERN_ACPI_VIDEO_FLAGS","KERN_BOOTLOADER_TYPE","KERN_CADPID","KERN_COMPAT_LOG","KERN_CORE_PATTERN","KERN_CORE_USES_PID","KERN_CTLALTDEL","KERN_DOMAINNAME","KERN_HOTPLUG","KERN_HPPA_PWRSW","KERN_HPPA_UNALIGNED","KERN_HZ_TIMER","KERN_IA64_UNALIGNED","KERN_IEEE_EMULATION_WARNINGS","KERN_MAX_LOCK_DEPTH","KERN_MAX_THREADS","KERN_MODPROBE","KERN_MSGMAX","KERN_MSGMNB","KERN_MSGMNI","KERN_MSGPOOL","KERN_NAMETRANS","KERN_NGROUPS_MAX","KERN_NMI_WATCHDOG","KERN_NODENAME","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OVERFLOWGID","KERN_OVERFLOWUID","KERN_PANIC","KERN_PANIC_ON_NMI","KERN_PANIC_ON_OOPS","KERN_PIDMAX","KERN_PPC_HTABRECLAIM","KERN_PPC_L2CR","KERN_PPC_POWERSAVE_NAP","KERN_PPC_ZEROPAGED","KERN_PRINTK","KERN_PRINTK_RATELIMIT","KERN_PRINTK_RATELIMIT_BURST","KERN_PROF","KERN_PTY","KERN_RANDOM","KERN_RANDOMIZE","KERN_REALROOTDEV","KERN_RTSIGMAX","KERN_RTSIGNR","KERN_S390_USER_DEBUG_LOGGING","KERN_SECUREMASK","KERN_SEM","KERN_SETUID_DUMPABLE","KERN_SG_BIG_BUFF","KERN_SHMALL","KERN_SHMMAX","KERN_SHMMNI","KERN_SHMPATH","KERN_SPARC_REBOOT","KERN_SPARC_SCONS_PWROFF","KERN_SPARC_STOP_A","KERN_SPIN_RETRY","KERN_SYSRQ","KERN_TAINTED","KERN_UNKNOWN_NMI_PANIC","KERN_VERSION","KEXEC_ARCH_MASK","KEXEC_FILE_NO_INITRAMFS","KEXEC_FILE_ON_CRASH","KEXEC_FILE_UNLOAD","KEXEC_ON_CRASH","KEXEC_PRESERVE_CONTEXT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_EXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MFD_NOEXEC_SEAL","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MOVE_MOUNT_BENEATH","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_NOTIFICATION","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NET_802","NET_ATALK","NET_AX25","NET_BRIDGE","NET_CORE","NET_DCCP","NET_DECNET","NET_ECONET","NET_ETHER","NET_IPV4","NET_IPV6","NET_IPX","NET_IRDA","NET_LLC","NET_NETFILTER","NET_NETROM","NET_ROSE","NET_SCTP","NET_TR","NET_UNIX","NET_X25","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_IDN","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_DUMPCORE","PF_ECONET","PF_EXITING","PF_FORKNOEXEC","PF_IB","PF_IDLE","PF_IEEE802154","PF_INET","PF_INET6","PF_IO_WORKER","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_KSWAPD","PF_KTHREAD","PF_LLC","PF_LOCAL","PF_LOCAL_THROTTLE","PF_MASKOS","PF_MASKPROC","PF_MCE_EARLY","PF_MCE_PROCESS","PF_MEMALLOC","PF_MEMALLOC_NOFS","PF_MEMALLOC_NOIO","PF_MEMALLOC_PIN","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_NOFREEZE","PF_NO_SETAFFINITY","PF_NPROC_EXCEEDED","PF_PACKET","PF_PHONET","PF_POSTCOREDUMP","PF_PPPOX","PF_R","PF_RANDOMIZE","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SIGNALED","PF_SNA","PF_SUPERPRIV","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_USED_MATH","PF_USER_WORKER","PF_VCPU","PF_VSOCK","PF_W","PF_WANPIPE","PF_WQ_WORKER","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_PTRACER_ANY","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_EXPLICIT_SCHED","PTHREAD_INHERIT_SCHED","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_ONCE_INIT","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GETSIGMASK","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SETSIGMASK","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSCALL_INFO_ENTRY","PTRACE_SYSCALL_INFO_EXIT","PTRACE_SYSCALL_INFO_NONE","PTRACE_SYSCALL_INFO_SECCOMP","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_FLAG_ALL","SCHED_FLAG_DL_OVERRUN","SCHED_FLAG_KEEP_ALL","SCHED_FLAG_KEEP_PARAMS","SCHED_FLAG_KEEP_POLICY","SCHED_FLAG_RECLAIM","SCHED_FLAG_RESET_ON_FORK","SCHED_FLAG_UTIL_CLAMP","SCHED_FLAG_UTIL_CLAMP_MAX","SCHED_FLAG_UTIL_CLAMP_MIN","SCHED_IDLE","SCHED_NORMAL","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SCTP_ABORT","SCTP_ADAPTATION_LAYER","SCTP_ADDR_OVER","SCTP_ALL_ASSOC","SCTP_ASSOCINFO","SCTP_AUTHINFO","SCTP_AUTH_ACTIVE_KEY","SCTP_AUTH_CHUNK","SCTP_AUTH_DEACTIVATE_KEY","SCTP_AUTH_DELETE_KEY","SCTP_AUTH_KEY","SCTP_AUTOCLOSE","SCTP_AUTO_ASCONF","SCTP_CONTEXT","SCTP_CURRENT_ASSOC","SCTP_DEFAULT_SEND_PARAM","SCTP_DEFAULT_SNDINFO","SCTP_DELAYED_ACK","SCTP_DELAYED_ACK_TIME","SCTP_DELAYED_SACK","SCTP_DISABLE_FRAGMENTS","SCTP_DSTADDRV4","SCTP_DSTADDRV6","SCTP_ENABLE_CHANGE_ASSOC_REQ","SCTP_ENABLE_RESET_ASSOC_REQ","SCTP_ENABLE_RESET_STREAM_REQ","SCTP_ENABLE_STRRESET_MASK","SCTP_EOF","SCTP_EVENTS","SCTP_FRAGMENT_INTERLEAVE","SCTP_FUTURE_ASSOC","SCTP_GET_ASSOC_ID_LIST","SCTP_GET_ASSOC_NUMBER","SCTP_GET_PEER_ADDR_INFO","SCTP_HMAC_IDENT","SCTP_INIT","SCTP_INITMSG","SCTP_I_WANT_MAPPED_V4_ADDR","SCTP_LOCAL_AUTH_CHUNKS","SCTP_MAXSEG","SCTP_MAX_BURST","SCTP_NODELAY","SCTP_NOTIFICATION","SCTP_NXTINFO","SCTP_PARTIAL_DELIVERY_POINT","SCTP_PEER_ADDR_PARAMS","SCTP_PEER_ADDR_THLDS","SCTP_PEER_ADDR_THLDS_V2","SCTP_PEER_AUTH_CHUNKS","SCTP_PRIMARY_ADDR","SCTP_PRINFO","SCTP_PR_INDEX","SCTP_PR_POLICY","SCTP_PR_PRIO_ENABLED","SCTP_PR_RTX_ENABLED","SCTP_PR_SCTP_ALL","SCTP_PR_SCTP_MASK","SCTP_PR_SCTP_MAX","SCTP_PR_SCTP_NONE","SCTP_PR_SCTP_PRIO","SCTP_PR_SCTP_RTX","SCTP_PR_SCTP_TTL","SCTP_PR_SET_POLICY","SCTP_PR_TTL_ENABLED","SCTP_RCVINFO","SCTP_RECVNXTINFO","SCTP_RECVRCVINFO","SCTP_REUSE_PORT","SCTP_RTOINFO","SCTP_SACK_IMMEDIATELY","SCTP_SENDALL","SCTP_SET_PEER_PRIMARY_ADDR","SCTP_SNDINFO","SCTP_SNDRCV","SCTP_STATUS","SCTP_STREAM_RESET_INCOMING","SCTP_STREAM_RESET_OUTGOING","SCTP_UNORDERED","SECCOMP_ADDFD_FLAG_SEND","SECCOMP_ADDFD_FLAG_SETFD","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_NEW_LISTENER","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_FILTER_FLAG_TSYNC_ESRCH","SECCOMP_FILTER_FLAG_WAIT_KILLABLE_RECV","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECCOMP_USER_NOTIF_FLAG_CONTINUE","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGIWAP","SIOCGIWAPLIST","SIOCGIWAUTH","SIOCGIWENCODE","SIOCGIWENCODEEXT","SIOCGIWESSID","SIOCGIWFRAG","SIOCGIWFREQ","SIOCGIWGENIE","SIOCGIWMODE","SIOCGIWNAME","SIOCGIWNICKN","SIOCGIWNWID","SIOCGIWPOWER","SIOCGIWPRIV","SIOCGIWRANGE","SIOCGIWRATE","SIOCGIWRETRY","SIOCGIWRTS","SIOCGIWSCAN","SIOCGIWSENS","SIOCGIWSPY","SIOCGIWSTATS","SIOCGIWTHRSPY","SIOCGIWTXPOW","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCIWFIRST","SIOCIWFIRSTPRIV","SIOCIWLAST","SIOCIWLASTPRIV","SIOCOUTQNSD","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSIWAP","SIOCSIWAUTH","SIOCSIWCOMMIT","SIOCSIWENCODE","SIOCSIWENCODEEXT","SIOCSIWESSID","SIOCSIWFRAG","SIOCSIWFREQ","SIOCSIWGENIE","SIOCSIWMLME","SIOCSIWMODE","SIOCSIWNICKN","SIOCSIWNWID","SIOCSIWPMKSA","SIOCSIWPOWER","SIOCSIWPRIV","SIOCSIWRANGE","SIOCSIWRATE","SIOCSIWRETRY","SIOCSIWRTS","SIOCSIWSCAN","SIOCSIWSENS","SIOCSIWSPY","SIOCSIWSTATS","SIOCSIWTHRSPY","SIOCSIWTXPOW","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_TLS","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_MAXKEYLEN","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TLS_1_2_VERSION","TLS_1_2_VERSION_MAJOR","TLS_1_2_VERSION_MINOR","TLS_1_3_VERSION","TLS_1_3_VERSION_MAJOR","TLS_1_3_VERSION_MINOR","TLS_CIPHER_AES_GCM_128","TLS_CIPHER_AES_GCM_128_IV_SIZE","TLS_CIPHER_AES_GCM_128_KEY_SIZE","TLS_CIPHER_AES_GCM_128_REC_SEQ_SIZE","TLS_CIPHER_AES_GCM_128_SALT_SIZE","TLS_CIPHER_AES_GCM_128_TAG_SIZE","TLS_CIPHER_AES_GCM_256","TLS_CIPHER_AES_GCM_256_IV_SIZE","TLS_CIPHER_AES_GCM_256_KEY_SIZE","TLS_CIPHER_AES_GCM_256_REC_SEQ_SIZE","TLS_CIPHER_AES_GCM_256_SALT_SIZE","TLS_CIPHER_AES_GCM_256_TAG_SIZE","TLS_CIPHER_CHACHA20_POLY1305","TLS_CIPHER_CHACHA20_POLY1305_IV_SIZE","TLS_CIPHER_CHACHA20_POLY1305_KEY_SIZE","TLS_CIPHER_CHACHA20_POLY1305_REC_SEQ_SIZE","TLS_CIPHER_CHACHA20_POLY1305_SALT_SIZE","TLS_CIPHER_CHACHA20_POLY1305_TAG_SIZE","TLS_GET_RECORD_TYPE","TLS_RX","TLS_SET_RECORD_TYPE","TLS_TX","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_FLT_ALLMULTI","TUN_F_CSUM","TUN_F_TSO4","TUN_F_TSO6","TUN_F_TSO_ECN","TUN_F_UFO","TUN_F_USO4","TUN_F_USO6","TUN_PKT_STRIP","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TX_TIMESTAMP","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VM_BLOCK_DUMP","VM_DIRTY_BACKGROUND","VM_DIRTY_EXPIRE_CS","VM_DIRTY_RATIO","VM_DIRTY_WB_CS","VM_DROP_PAGECACHE","VM_HUGETLB_GROUP","VM_HUGETLB_PAGES","VM_LAPTOP_MODE","VM_LEGACY_VA_LAYOUT","VM_LOWMEM_RESERVE_RATIO","VM_MAX_MAP_COUNT","VM_MIN_FREE_KBYTES","VM_MIN_SLAB","VM_MIN_UNMAPPED","VM_NR_PDFLUSH_THREADS","VM_OVERCOMMIT_MEMORY","VM_OVERCOMMIT_RATIO","VM_PAGEBUF","VM_PAGE_CLUSTER","VM_PANIC_ON_OOM","VM_PERCPU_PAGELIST_FRACTION","VM_SWAPPINESS","VM_SWAP_TOKEN_TIMEOUT","VM_VDSO_ENABLED","VM_VFS_CACHE_PRESSURE","VM_ZONE_RECLAIM_MODE","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WIRELESS_EXT","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XDP_COPY","XDP_MMAP_OFFSETS","XDP_OPTIONS","XDP_OPTIONS_ZEROCOPY","XDP_PGOFF_RX_RING","XDP_PGOFF_TX_RING","XDP_PKT_CONTD","XDP_RING_NEED_WAKEUP","XDP_RX_RING","XDP_SHARED_UMEM","XDP_STATISTICS","XDP_TX_RING","XDP_UMEM_COMPLETION_RING","XDP_UMEM_FILL_RING","XDP_UMEM_PGOFF_COMPLETION_RING","XDP_UMEM_PGOFF_FILL_RING","XDP_UMEM_REG","XDP_UMEM_UNALIGNED_CHUNK_FLAG","XDP_USE_NEED_WAKEUP","XDP_USE_SG","XDP_ZEROCOPY","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XSK_UNALIGNED_BUF_ADDR_MASK","XSK_UNALIGNED_BUF_OFFSET_SHIFT","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifc_ifcu","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__kernel_rwf_t","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_buf","aio_cancel","aio_data","aio_error","aio_fildes","aio_fildes","aio_flags","aio_fsync","aio_key","aio_lio_opcode","aio_lio_opcode","aio_nbytes","aio_nbytes","aio_offset","aio_offset","aio_read","aio_reqprio","aio_reqprio","aio_resfd","aio_return","aio_rw_flags","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","auth_keynumber","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","canxl_frame","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","chunk_size","chunk_size","cipher_type","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","close_range","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","consumer","consumer","cookie","copy_file_range","cpu_set_t","cr","cr","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","data","data","deadband","decimal_point","delay","desc","desc","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","erand48","errcnt","error","error","es","esterror","esterror","euidaccess","event_len","eventfd","eventfd_read","eventfd_t","eventfd_write","events","events","execl","execle","execlp","execv","execve","execveat","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","fr","fr","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getmntent_r","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hasmntopt","hblkhd","hblkhd","hblks","hblks","headroom","headroom","hostent","hstrerror","hwtstamp_config","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifc_ifcu","ifc_len","ifconf","ifcu_buf","ifcu_req","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","info","info","info","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","iocb","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","iv","iv","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key","key","key","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newfd","newfd_flags","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","nxt_assoc_id","nxt_flags","nxt_length","nxt_ppid","nxt_sid","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","options","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addchdir_np","posix_spawn_file_actions_addclose","posix_spawn_file_actions_addclosefrom_np","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addfchdir_np","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addtcsetpgrp_np","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","pr_policy","pr_value","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prio","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","producer","producer","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getinheritsched","pthread_attr_getschedparam","pthread_attr_getschedpolicy","pthread_attr_getstack","pthread_attr_getstacksize","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setguardsize","pthread_attr_setinheritsched","pthread_attr_setschedparam","pthread_attr_setschedpolicy","pthread_attr_setstacksize","pthread_attr_t","pthread_barrier_destroy","pthread_barrier_init","pthread_barrier_t","pthread_barrier_wait","pthread_barrierattr_destroy","pthread_barrierattr_getpshared","pthread_barrierattr_init","pthread_barrierattr_setpshared","pthread_barrierattr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_once","pthread_once_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","putgrent","putpwent","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcv_assoc_id","rcv_context","rcv_cumtsn","rcv_flags","rcv_ppid","rcv_sid","rcv_ssn","rcv_tsn","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","rec_seq","rec_seq","rec_seq","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx","rx","rx_dropped","rx_dropped","rx_fill_ring_empty_descs","rx_filter","rx_id","rx_invalid_descs","rx_invalid_descs","rx_ring_full","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","salt","salt","salt","sbrk","scancode","scanf","sched_attr","sched_deadline","sched_flags","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_nice","sched_param","sched_period","sched_policy","sched_priority","sched_priority","sched_rr_get_interval","sched_runtime","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","sctp_assoc_t","sctp_authinfo","sctp_initmsg","sctp_nxtinfo","sctp_prinfo","sctp_rcvinfo","sctp_sndinfo","sctp_sndrcvinfo","sdt","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif","seccomp_notif_addfd","seccomp_notif_resp","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sinfo_assoc_id","sinfo_context","sinfo_cumtsn","sinfo_flags","sinfo_ppid","sinfo_ssn","sinfo_stream","sinfo_timetolive","sinfo_tsn","sinit_max_attempts","sinit_max_init_timeo","sinit_max_instreams","sinit_num_ostreams","sival_ptr","size","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snd_assoc_id","snd_context","snd_flags","snd_ppid","snd_sid","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","sockaddr_xdp","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","srcfd","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strchrnul","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strftime_l","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","sxdp_family","sxdp_flags","sxdp_ifindex","sxdp_queue_id","sxdp_shared_umem_fd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tls12_crypto_info_aes_gcm_128","tls12_crypto_info_aes_gcm_256","tls12_crypto_info_chacha20_poly1305","tls_crypto_info","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx","tx","tx_id","tx_invalid_descs","tx_invalid_descs","tx_ring_empty_descs","tx_type","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","val","value","value","vendor","vers","version","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xdp_desc","xdp_mmap_offsets","xdp_mmap_offsets_v1","xdp_options","xdp_ring_offset","xdp_ring_offset_v1","xdp_statistics","xdp_statistics_v1","xdp_umem_reg","xdp_umem_reg_v1","xmm_space"],"q":[[0,"libc"],[9187,"core::fmt"],[9188,"core::fmt"],[9189,"core::any"]],"dmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","Ethernet-within-IPv6 encapsulation.","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeversion of <code>basename(3)</code>, defined in <code>libgen.h</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12],13],[12,9],[[11,12],9],[[12,12],14],[[11,12],14],[[11,12],13],0,[12,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,15],13],[[9,15],14],[[9,15],13],0,[15,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,[16,16],0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,0,0,[16,16],0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,17,17],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,17],0,0,0,0,0,[17,14],0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[9,9],[9,14],[9,14],0,0,0,0,0,0,0,[[9,9],13],[9,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,14],0,[9,9],0,[9,14],[9,14],[9,14],[9,14],0,0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[19,19],[41,41],[42,42],[43,43],[44,44],[15,15],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[12,12],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[18,18],[109,109],[110,110],[111,111],[112,112],[4,4],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[7,7],[5,5],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[238,239],[[241,[13,240]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[242,8],0,[[8,8],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[242,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[201,238],0,0,[201,243],0,[201,9],[201,244],[201,245],[201,244],[201,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],[-1,[[241,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],[-1,246,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[731,1443,3276,3285,3744,4741,5161,6826,6827,6828,6829,7116,7117,9099,9100,9101,9102,9155],"p":[[6,"__u16",0],[6,"__u32",0],[6,"__u8",0],[3,"sock_filter",0],[3,"cmsghdr",0],[6,"c_uchar",0],[3,"msghdr",0],[6,"c_uint",0],[6,"c_int",0],[6,"size_t",0],[15,"usize"],[3,"cpu_set_t",0],[15,"tuple"],[15,"bool"],[3,"fd_set",0],[15,"u8"],[15,"u32"],[3,"sock_extended_err",0],[3,"sockaddr",0],[3,"group",0],[3,"utimbuf",0],[3,"timeval",0],[3,"timespec",0],[3,"rlimit",0],[3,"rusage",0],[3,"ipv6_mreq",0],[3,"hostent",0],[3,"iovec",0],[3,"pollfd",0],[3,"winsize",0],[3,"linger",0],[3,"sigval",0],[3,"itimerval",0],[3,"tms",0],[3,"servent",0],[3,"protoent",0],[3,"in_addr",0],[3,"ip_mreq",0],[3,"ip_mreqn",0],[3,"ip_mreq_source",0],[3,"sockaddr_in",0],[3,"sockaddr_in6",0],[3,"addrinfo",0],[3,"sockaddr_ll",0],[3,"tm",0],[3,"sched_param",0],[3,"Dl_info",0],[3,"lconv",0],[3,"in_pktinfo",0],[3,"ifaddrs",0],[3,"in6_rtmsg",0],[3,"arpreq",0],[3,"arpreq_old",0],[3,"arphdr",0],[3,"mmsghdr",0],[3,"epoll_event",0],[3,"sockaddr_un",0],[3,"sockaddr_storage",0],[3,"utsname",0],[3,"sigevent",0],[3,"glob_t",0],[3,"passwd",0],[3,"spwd",0],[3,"dqblk",0],[3,"signalfd_siginfo",0],[3,"itimerspec",0],[3,"fsid_t",0],[3,"packet_mreq",0],[3,"if_nameindex",0],[3,"msginfo",0],[3,"sembuf",0],[3,"input_event",0],[3,"input_id",0],[3,"input_absinfo",0],[3,"input_keymap_entry",0],[3,"input_mask",0],[3,"ff_replay",0],[3,"ff_trigger",0],[3,"ff_envelope",0],[3,"ff_constant_effect",0],[3,"ff_ramp_effect",0],[3,"ff_condition_effect",0],[3,"ff_periodic_effect",0],[3,"ff_rumble_effect",0],[3,"ff_effect",0],[3,"uinput_ff_upload",0],[3,"uinput_ff_erase",0],[3,"uinput_abs_setup",0],[3,"dl_phdr_info",0],[3,"Elf32_Ehdr",0],[3,"Elf64_Ehdr",0],[3,"Elf32_Sym",0],[3,"Elf64_Sym",0],[3,"Elf32_Phdr",0],[3,"Elf64_Phdr",0],[3,"Elf32_Shdr",0],[3,"Elf64_Shdr",0],[3,"ucred",0],[3,"mntent",0],[3,"posix_spawn_file_actions_t",0],[3,"posix_spawnattr_t",0],[3,"genlmsghdr",0],[3,"in6_pktinfo",0],[3,"arpd_request",0],[3,"inotify_event",0],[3,"fanotify_response",0],[3,"sockaddr_vm",0],[3,"regmatch_t",0],[3,"__c_anonymous_sockaddr_can_tp",0],[3,"__c_anonymous_sockaddr_can_j1939",0],[3,"can_filter",0],[3,"j1939_filter",0],[3,"sock_fprog",0],[3,"seccomp_data",0],[3,"seccomp_notif_sizes",0],[3,"seccomp_notif",0],[3,"seccomp_notif_resp",0],[3,"seccomp_notif_addfd",0],[3,"nlmsghdr",0],[3,"nlmsgerr",0],[3,"nlattr",0],[3,"file_clone_range",0],[3,"__c_anonymous_ifru_map",0],[3,"in6_ifreq",0],[3,"option",0],[3,"sctp_initmsg",0],[3,"sctp_sndrcvinfo",0],[3,"sctp_sndinfo",0],[3,"sctp_rcvinfo",0],[3,"sctp_nxtinfo",0],[3,"sctp_prinfo",0],[3,"sctp_authinfo",0],[3,"rlimit64",0],[3,"tls_crypto_info",0],[3,"tls12_crypto_info_aes_gcm_128",0],[3,"tls12_crypto_info_aes_gcm_256",0],[3,"tls12_crypto_info_chacha20_poly1305",0],[3,"sockaddr_nl",0],[3,"dirent",0],[3,"sockaddr_alg",0],[3,"uinput_setup",0],[3,"uinput_user_dev",0],[3,"af_alg_iv",0],[3,"mq_attr",0],[19,"__c_anonymous_ifr_ifru",0],[3,"ifreq",0],[19,"__c_anonymous_ifc_ifcu",0],[3,"ifconf",0],[3,"hwtstamp_config",0],[3,"dirent64",0],[3,"sched_attr",0],[3,"sock_txtime",0],[19,"__c_anonymous_sockaddr_can_can_addr",0],[3,"sockaddr_can",0],[3,"statx",0],[3,"statx_timestamp",0],[3,"aiocb",0],[3,"__exit_status",0],[3,"__timeval",0],[3,"glob64_t",0],[3,"termios",0],[3,"mallinfo",0],[3,"mallinfo2",0],[3,"nl_pktinfo",0],[3,"nl_mmap_req",0],[3,"nl_mmap_hdr",0],[3,"rtentry",0],[3,"timex",0],[3,"ntptimeval",0],[3,"regex_t",0],[3,"Elf64_Chdr",0],[3,"Elf32_Chdr",0],[3,"seminfo",0],[3,"ptrace_peeksiginfo_args",0],[3,"__c_anonymous_ptrace_syscall_info_entry",0],[3,"__c_anonymous_ptrace_syscall_info_exit",0],[3,"__c_anonymous_ptrace_syscall_info_seccomp",0],[3,"ptrace_syscall_info",0],[3,"sockaddr_xdp",0],[3,"xdp_ring_offset",0],[3,"xdp_mmap_offsets",0],[3,"xdp_ring_offset_v1",0],[3,"xdp_mmap_offsets_v1",0],[3,"xdp_umem_reg",0],[3,"xdp_umem_reg_v1",0],[3,"xdp_statistics",0],[3,"xdp_statistics_v1",0],[3,"xdp_options",0],[3,"xdp_desc",0],[3,"iocb",0],[19,"__c_anonymous_ptrace_syscall_info_data",0],[3,"utmpx",0],[3,"sigset_t",0],[3,"sysinfo",0],[3,"msqid_ds",0],[3,"semid_ds",0],[3,"sigaction",0],[3,"statfs",0],[3,"flock",0],[3,"flock64",0],[3,"siginfo_t",0],[3,"stack_t",0],[3,"stat",0],[3,"stat64",0],[3,"statfs64",0],[3,"statvfs64",0],[3,"pthread_attr_t",0],[3,"_libc_fpxreg",0],[3,"_libc_xmmreg",0],[3,"_libc_fpstate",0],[3,"user_regs_struct",0],[3,"user",0],[3,"mcontext_t",0],[3,"ipc_perm",0],[3,"shmid_ds",0],[3,"ptrace_rseq_configuration",0],[3,"user_fpregs_struct",0],[3,"ucontext_t",0],[3,"statvfs",0],[3,"max_align_t",0],[3,"clone_args",0],[3,"sem_t",0],[3,"termios2",0],[3,"pthread_mutexattr_t",0],[3,"pthread_rwlockattr_t",0],[3,"pthread_condattr_t",0],[3,"pthread_barrierattr_t",0],[3,"fanotify_event_metadata",0],[3,"pthread_cond_t",0],[3,"pthread_mutex_t",0],[3,"pthread_rwlock_t",0],[3,"pthread_barrier_t",0],[3,"can_frame",0],[3,"canfd_frame",0],[3,"canxl_frame",0],[3,"open_how",0],[3,"in6_addr",0],[4,"c_void",0],[3,"Formatter",9187],[3,"Error",9187],[4,"Result",9188],[6,"dev_t",0],[6,"pid_t",0],[6,"c_long",0],[6,"uid_t",0],[3,"TypeId",9189],[4,"DIR",0],[4,"FILE",0],[4,"fpos_t",0],[4,"timezone",0],[4,"fpos64_t",0]],"b":[]},\
"libm":{"doc":"libm in pure Rust","t":"DFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLFLLFFLLFLFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFFLLFFLLFFLLFFLLFFLLFLLLFLLFFLLFFLLF","n":["Libm","acos","acos","acos","acosf","acosh","acosh","acosh","acoshf","asin","asin","asin","asinf","asinh","asinh","asinh","asinhf","atan","atan","atan","atan2","atan2","atan2","atan2f","atanf","atanh","atanh","atanh","atanhf","borrow","borrow_mut","cbrt","cbrt","cbrt","cbrtf","ceil","ceil","ceil","ceilf","copysign","copysign","copysign","copysignf","cos","cos","cos","cosf","cosh","cosh","cosh","coshf","erf","erf","erf","erfc","erfc","erfc","erfcf","erff","exp","exp","exp","exp10","exp10","exp10","exp10f","exp2","exp2","exp2","exp2f","expf","expm1","expm1","expm1","expm1f","fabs","fabs","fabs","fabsf","fdim","fdim","fdim","fdimf","floor","floor","floor","floorf","fma","fma","fma","fmaf","fmax","fmax","fmax","fmaxf","fmin","fmin","fmin","fminf","fmod","fmod","fmod","fmodf","frexp","frexp","frexp","frexpf","from","hypot","hypot","hypot","hypotf","ilogb","ilogb","ilogb","ilogbf","into","j0","j0","j0","j0f","j1","j1","j1","j1f","jn","jn","jn","jnf","ldexp","ldexp","ldexp","ldexpf","lgamma","lgamma","lgamma","lgamma_r","lgamma_r","lgamma_r","lgammaf","lgammaf_r","log","log","log","log10","log10","log10","log10f","log1p","log1p","log1p","log1pf","log2","log2","log2","log2f","logf","modf","modf","modf","modff","nextafter","nextafter","nextafter","nextafterf","pow","pow","pow","powf","remainder","remainder","remainder","remainderf","remquo","remquo","remquo","remquof","rint","rint","rint","rintf","round","round","round","roundf","scalbn","scalbn","scalbn","scalbnf","sin","sin","sin","sincos","sincos","sincos","sincosf","sinf","sinh","sinh","sinh","sinhf","sqrt","sqrt","sqrt","sqrtf","tan","tan","tan","tanf","tanh","tanh","tanh","tanhf","tgamma","tgamma","tgamma","tgammaf","trunc","trunc","trunc","truncf","try_from","try_into","type_id","y0","y0","y0","y0f","y1","y1","y1","y1f","yn","yn","yn","ynf"],"q":[[0,"libm"],[236,"core::result"],[237,"core::any"]],"d":["Generic helper for libm functions, abstracting over f32 …","Arccosine (f64)","","","Arccosine (f32)","Inverse hyperbolic cosine (f64)","","","Inverse hyperbolic cosine (f32)","Arcsine (f64)","","","Arcsine (f32)","Inverse hyperbolic sine (f64)","","","Inverse hyperbolic sine (f32)","Arctangent (f64)","","","Arctangent of y/x (f64)","","","Arctangent of y/x (f32)","Arctangent (f32)","Inverse hyperbolic tangent (f64)","","","Inverse hyperbolic tangent (f32)","","","Computes the cube root of the argument.","","","Cube root (f32)","Ceil (f64)","","","Ceil (f32)","Sign of Y, magnitude of X (f64)","","","Sign of Y, magnitude of X (f32)","","","","","Hyperbolic cosine (f64)","","","Hyperbolic cosine (f64)","Error function (f64)","","","Complementary error function (f64)","","","Complementary error function (f32)","Error function (f32)","Exponential, base <em>e</em> (f64)","","","","","","","Exponential, base 2 (f64)","","","Exponential, base 2 (f32)","Exponential, base <em>e</em> (f32)","Exponential, base <em>e</em>, of x-1 (f64)","","","Exponential, base <em>e</em>, of x-1 (f32)","Absolute value (magnitude) (f64) Calculates the absolute …","","","Absolute value (magnitude) (f32) Calculates the absolute …","Positive difference (f64)","","","Positive difference (f32)","Floor (f64)","","","Floor (f32)","Floating multiply add (f64)","","","Floating multiply add (f32)","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,0,7,7,0,0,7,7,0,7,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,0,7,7,0,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,7,0,7,7,0,0,7,7,0,0,7,7,0],"f":[0,[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[2,2],[1,1],[1,1],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[2,2],[1,1],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[1,1],[2,2],[2,2],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[1,1],[2,2],[2,2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[1,1],[1,1],[2,2],[2,2],[[1,1,1],1],[[1,1,1],1],[[2,2,2],2],[[2,2,2],2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[-1,-1,[]],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,3],[2,3],[1,3],[2,3],[-1,-2,[],[]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2],[[1,3],1],[[2,3],2],[[1,3],1],[[2,3],2],[1,1],[2,2],[1,1],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[1,[[4,[1,3]]]],[2,2],[2,[[4,[2,3]]]],[1,1],[2,2],[1,1],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[2,2],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],[[4,[1,3]]]],[[2,2],[[4,[2,3]]]],[[1,1],[[4,[1,3]]]],[[2,2],[[4,[2,3]]]],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[[1,3],1],[[2,3],2],[[1,3],1],[[2,3],2],[1,1],[2,2],[1,1],[1,[[4,[1,1]]]],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[2,[[4,[2,2]]]],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2]],"c":[],"p":[[15,"f64"],[15,"f32"],[15,"i32"],[15,"tuple"],[4,"Result",236],[3,"TypeId",237],[3,"Libm",0]],"b":[[2,"impl-Libm%3Cf64%3E"],[3,"impl-Libm%3Cf32%3E"],[6,"impl-Libm%3Cf32%3E"],[7,"impl-Libm%3Cf64%3E"],[10,"impl-Libm%3Cf64%3E"],[11,"impl-Libm%3Cf32%3E"],[14,"impl-Libm%3Cf64%3E"],[15,"impl-Libm%3Cf32%3E"],[18,"impl-Libm%3Cf64%3E"],[19,"impl-Libm%3Cf32%3E"],[21,"impl-Libm%3Cf32%3E"],[22,"impl-Libm%3Cf64%3E"],[26,"impl-Libm%3Cf64%3E"],[27,"impl-Libm%3Cf32%3E"],[32,"impl-Libm%3Cf64%3E"],[33,"impl-Libm%3Cf32%3E"],[36,"impl-Libm%3Cf32%3E"],[37,"impl-Libm%3Cf64%3E"],[40,"impl-Libm%3Cf32%3E"],[41,"impl-Libm%3Cf64%3E"],[44,"impl-Libm%3Cf32%3E"],[45,"impl-Libm%3Cf64%3E"],[48,"impl-Libm%3Cf32%3E"],[49,"impl-Libm%3Cf64%3E"],[52,"impl-Libm%3Cf64%3E"],[53,"impl-Libm%3Cf32%3E"],[55,"impl-Libm%3Cf64%3E"],[56,"impl-Libm%3Cf32%3E"],[60,"impl-Libm%3Cf64%3E"],[61,"impl-Libm%3Cf32%3E"],[63,"impl-Libm%3Cf64%3E"],[64,"impl-Libm%3Cf32%3E"],[67,"impl-Libm%3Cf64%3E"],[68,"impl-Libm%3Cf32%3E"],[72,"impl-Libm%3Cf64%3E"],[73,"impl-Libm%3Cf32%3E"],[76,"impl-Libm%3Cf64%3E"],[77,"impl-Libm%3Cf32%3E"],[80,"impl-Libm%3Cf64%3E"],[81,"impl-Libm%3Cf32%3E"],[84,"impl-Libm%3Cf64%3E"],[85,"impl-Libm%3Cf32%3E"],[88,"impl-Libm%3Cf64%3E"],[89,"impl-Libm%3Cf32%3E"],[92,"impl-Libm%3Cf64%3E"],[93,"impl-Libm%3Cf32%3E"],[96,"impl-Libm%3Cf32%3E"],[97,"impl-Libm%3Cf64%3E"],[100,"impl-Libm%3Cf32%3E"],[101,"impl-Libm%3Cf64%3E"],[104,"impl-Libm%3Cf32%3E"],[105,"impl-Libm%3Cf64%3E"],[109,"impl-Libm%3Cf32%3E"],[110,"impl-Libm%3Cf64%3E"],[113,"impl-Libm%3Cf32%3E"],[114,"impl-Libm%3Cf64%3E"],[118,"impl-Libm%3Cf32%3E"],[119,"impl-Libm%3Cf64%3E"],[122,"impl-Libm%3Cf32%3E"],[123,"impl-Libm%3Cf64%3E"],[126,"impl-Libm%3Cf32%3E"],[127,"impl-Libm%3Cf64%3E"],[130,"impl-Libm%3Cf32%3E"],[131,"impl-Libm%3Cf64%3E"],[134,"impl-Libm%3Cf32%3E"],[135,"impl-Libm%3Cf64%3E"],[137,"impl-Libm%3Cf32%3E"],[138,"impl-Libm%3Cf64%3E"],[142,"impl-Libm%3Cf32%3E"],[143,"impl-Libm%3Cf64%3E"],[145,"impl-Libm%3Cf32%3E"],[146,"impl-Libm%3Cf64%3E"],[149,"impl-Libm%3Cf32%3E"],[150,"impl-Libm%3Cf64%3E"],[153,"impl-Libm%3Cf32%3E"],[154,"impl-Libm%3Cf64%3E"],[158,"impl-Libm%3Cf32%3E"],[159,"impl-Libm%3Cf64%3E"],[162,"impl-Libm%3Cf32%3E"],[163,"impl-Libm%3Cf64%3E"],[166,"impl-Libm%3Cf32%3E"],[167,"impl-Libm%3Cf64%3E"],[170,"impl-Libm%3Cf32%3E"],[171,"impl-Libm%3Cf64%3E"],[174,"impl-Libm%3Cf32%3E"],[175,"impl-Libm%3Cf64%3E"],[178,"impl-Libm%3Cf32%3E"],[179,"impl-Libm%3Cf64%3E"],[182,"impl-Libm%3Cf64%3E"],[183,"impl-Libm%3Cf32%3E"],[186,"impl-Libm%3Cf32%3E"],[187,"impl-Libm%3Cf64%3E"],[190,"impl-Libm%3Cf32%3E"],[191,"impl-Libm%3Cf64%3E"],[193,"impl-Libm%3Cf64%3E"],[194,"impl-Libm%3Cf32%3E"],[198,"impl-Libm%3Cf64%3E"],[199,"impl-Libm%3Cf32%3E"],[202,"impl-Libm%3Cf32%3E"],[203,"impl-Libm%3Cf64%3E"],[206,"impl-Libm%3Cf32%3E"],[207,"impl-Libm%3Cf64%3E"],[210,"impl-Libm%3Cf32%3E"],[211,"impl-Libm%3Cf64%3E"],[214,"impl-Libm%3Cf32%3E"],[215,"impl-Libm%3Cf64%3E"],[218,"impl-Libm%3Cf64%3E"],[219,"impl-Libm%3Cf32%3E"],[225,"impl-Libm%3Cf32%3E"],[226,"impl-Libm%3Cf64%3E"],[229,"impl-Libm%3Cf32%3E"],[230,"impl-Libm%3Cf64%3E"],[233,"impl-Libm%3Cf32%3E"],[234,"impl-Libm%3Cf64%3E"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,21,4,4,6,6,8,7,11,0,1,3,1,3,21,4,4,6,6,1,3,8,7,16,16,11,11,4,6,1,3,8,7,16,11,4,6,4,6,8,7,0,4,6,1,3,8,7,16,11,4,6,1,3,8,7,1,3,21,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[[-1,8],10,[]],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[-1,13,[]],[[4,14],15],[[4,14],15],[[6,14],15],[[6,14],15],[[1,14],15],[[3,14],15],[[8,14],15],[[7,14],15],[[16,14],15],[[16,14],15],[[11,14],15],[[11,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[17,[4]]]],[5,[[17,[6]]]],[[4,-1],13,18],[[6,-1],13,18],[[8,-1],13,18],[[7,-1],13,18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[19]]]],[[],[[0,[19]]]],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[20]]]],[[3,[12,[20]]],3],[[-1,1],13,[]],0,0,[[],21],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,4],[[12,[9]]]],[[4,6],[[12,[9]]]],[[6,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[21,[[17,[13,16]]]],[21,[[17,[13,16]]]],[6,13],[6,13],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0],"c":[],"p":[[3,"Record",0],[3,"Arguments",170],[3,"RecordBuilder",0],[4,"Level",0],[15,"str"],[4,"LevelFilter",0],[3,"MetadataBuilder",0],[3,"Metadata",0],[4,"Ordering",171],[15,"bool"],[3,"ParseLevelError",0],[4,"Option",172],[15,"tuple"],[3,"Formatter",170],[6,"Result",170],[3,"SetLoggerError",0],[4,"Result",173],[8,"Hasher",174],[8,"Iterator",175],[15,"u32"],[8,"Log",0],[3,"TypeId",176]],"b":[[57,"impl-PartialEq-for-Level"],[58,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[59,"impl-PartialEq-for-LevelFilter"],[60,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[70,"impl-Debug-for-Level"],[71,"impl-Display-for-Level"],[72,"impl-Display-for-LevelFilter"],[73,"impl-Debug-for-LevelFilter"],[78,"impl-Debug-for-SetLoggerError"],[79,"impl-Display-for-SetLoggerError"],[80,"impl-Display-for-ParseLevelError"],[81,"impl-Debug-for-ParseLevelError"],[128,"impl-PartialOrd-for-Level"],[129,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[130,"impl-PartialOrd-for-LevelFilter"],[131,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"]]},\
"memmap2":{"doc":"A cross-platform Rust API for memory mapped buffers.","t":"ENNNNNNNNNDIDDDDNNNNNDNNENNLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Advice","DoDump","DoFork","DontDump","DontFork","DontNeed","Free","HugePage","HwPoison","Mergeable","Mmap","MmapAsRawDesc","MmapMut","MmapOptions","MmapRaw","MmapRawDescriptor","NoHugePage","Normal","PopulateRead","PopulateWrite","Random","RemapOptions","Remove","Sequential","UncheckedAdvice","Unmergeable","WillNeed","advise","advise","advise","advise_range","advise_range","advise_range","as_mut","as_mut_ptr","as_ptr","as_raw_desc","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref_mut","eq","eq","flush","flush","flush_async","flush_async","flush_async_range","flush_async_range","flush_range","flush_range","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","huge","into","into","into","into","into","into","into","into","len","len","lock","lock","lock","make_exec","make_mut","make_read_only","map","map","map_anon","map_anon","map_copy","map_copy_read_only","map_exec","map_mut","map_mut","map_raw","map_raw","map_raw_read_only","may_move","new","new","offset","populate","remap","remap","remap","stack","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_advise","unchecked_advise","unchecked_advise","unchecked_advise_range","unchecked_advise_range","unchecked_advise_range","unlock","unlock","unlock"],"q":[[0,"memmap2"],[172,"std::io::error"],[173,"core::fmt"],[174,"core::fmt"],[175,"core::option"],[176,"core::result"],[177,"core::any"]],"d":["Values supported by <code>Mmap::advise</code> and <code>MmapMut::advise</code> …","<strong>MADV_DODUMP</strong> - Linux only (since Linux 3.4)","<strong>MADV_DOFORK</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_DONTDUMP</strong> - Linux only (since Linux 3.4)","<strong>MADV_DONTFORK</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_DONTNEED</strong>","<strong>MADV_FREE</strong> - Linux (since Linux 4.5) and Darwin","<strong>MADV_HUGEPAGE</strong> - Linux only (since Linux 2.6.38)","<strong>MADV_HWPOISON</strong> - Linux only (since Linux 2.6.32)","<strong>MADV_MERGEABLE</strong> - Linux only (since Linux 2.6.32)","A handle to an immutable memory mapped buffer.","","A handle to a mutable memory mapped buffer.","A memory map builder, providing advanced options and flags …","A handle to a raw memory mapped buffer.","","<strong>MADV_NOHUGEPAGE</strong> - Linux only (since Linux 2.6.38)","<strong>MADV_NORMAL</strong>","<strong>MADV_POPULATE_READ</strong> - Linux only (since Linux 5.14)","<strong>MADV_POPULATE_WRITE</strong> - Linux only (since Linux 5.14)","<strong>MADV_RANDOM</strong>","Options for <code>Mmap::remap</code> and <code>MmapMut::remap</code>.","<strong>MADV_REMOVE</strong> - Linux only (since Linux 2.6.16)","<strong>MADV_SEQUENTIAL</strong>","Values supported by [<code>Mmap::unsafe_advise</code>][…","<strong>MADV_UNMERGEABLE</strong> - Linux only (since Linux 2.6.32)","<strong>MADV_WILLNEED</strong>","Advise OS how this memory map will be accessed.","Advise OS how this memory map will be accessed.","Advise OS how this memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","","Returns an unsafe mutable pointer to the memory mapped …","Returns a raw pointer to the memory mapped file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flushes outstanding memory map modifications to disk.","Flushes outstanding memory map modifications to disk.","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Asynchronously flushes outstanding memory map …","Flushes outstanding memory map modifications in the range …","Flushes outstanding memory map modifications in the range …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Configures the anonymous memory map to be allocated using …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length in bytes of the memory map.","Configures the created memory mapped buffer to be <code>len</code> …","Lock the whole memory map into RAM. Only supported on Unix.","Lock the whole memory map into RAM. Only supported on Unix.","Lock the whole memory map into RAM. Only supported on Unix.","Transition the memory map to be readable and executable.","Transition the memory map to be writable.","Returns an immutable version of this memory mapped buffer.","Creates a read-only memory map backed by a file.","Creates a read-only memory map backed by a file.","Creates an anonymous memory map.","Creates an anonymous memory map.","Creates a copy-on-write memory map backed by a file.","Creates a copy-on-write read-only memory map backed by a …","Creates a readable and executable memory map backed by a …","Creates a writeable memory map backed by a file.","Creates a writeable memory map backed by a file.","Creates a writeable memory map backed by a file.","Creates a raw memory map.","Creates a read-only raw memory map","Controls whether the memory map can be moved if it is not …","Creates a new set of options for configuring and creating …","Creates a mew set of options for resizing a memory map.","Configures the memory map to start at byte <code>offset</code> from the …","Populate (prefault) page tables for a mapping.","Adjust the size of the memory mapping.","Adjust the size of the memory mapping.","Adjust the size of the memory mapping.","Configures the anonymous memory map to be suitable for a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Advise OS how this memory map will be accessed.","Advise OS how this memory map will be accessed.","Advise OS how this memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Advise OS how this range of memory map will be accessed.","Unlock the whole memory map. Only supported on Unix.","Unlock the whole memory map. Only supported on Unix.","Unlock the whole memory map. Only supported on Unix."],"i":[0,2,2,2,2,11,11,2,2,2,0,0,0,0,0,0,2,2,2,2,2,0,11,2,0,2,2,1,5,6,1,5,6,6,5,5,19,1,6,10,1,5,6,2,11,12,13,10,1,5,6,2,11,12,13,2,11,12,13,2,11,12,13,12,13,1,6,6,2,11,5,6,5,6,5,6,5,6,1,5,6,2,11,12,13,10,1,5,5,5,6,2,11,12,13,2,11,12,10,1,5,6,2,11,12,13,5,12,1,5,6,6,1,6,1,12,6,12,12,12,12,6,12,5,12,12,13,12,13,12,12,1,5,6,12,2,11,12,13,10,1,5,6,2,11,12,13,10,1,5,6,2,11,12,13,10,1,5,6,2,11,12,13,1,5,6,1,5,6,1,5,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[5,2],[[4,[3]]]],[[6,2],[[4,[3]]]],[[1,2,7,7],[[4,[3]]]],[[5,2,7,7],[[4,[3]]]],[[6,2,7,7],[[4,[3]]]],[6,[[9,[8]]]],[5,8],[5,8],[-1,10,[]],[1,[[9,[8]]]],[6,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[11,11],[12,12],[13,13],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],12],[[],13],[1,[[9,[8]]]],[6,[[9,[8]]]],[6,[[9,[8]]]],[[2,2],14],[[11,11],14],[5,[[4,[3]]]],[6,[[4,[3]]]],[5,[[4,[3]]]],[6,[[4,[3]]]],[[5,7,7],[[4,[3]]]],[[6,7,7],[[4,[3]]]],[[5,7,7],[[4,[3]]]],[[6,7,7],[[4,[3]]]],[[1,15],16],[[5,15],16],[[6,15],16],[[2,15],16],[[11,15],16],[[12,15],16],[[13,15],16],[-1,-1,[]],[-1,-1,[]],[6,5],[-1,-1,[]],[1,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,-1],3,17],[[11,-1],3,17],[[12,[18,[8]]],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,7],[[12,7],12],[1,[[4,[3]]]],[5,[[4,[3]]]],[6,[[4,[3]]]],[6,[[4,[1]]]],[1,[[4,[6]]]],[6,[[4,[1]]]],[-1,[[4,[1]]],19],[[12,-1],[[4,[1]]],19],[7,[[4,[6]]]],[12,[[4,[6]]]],[[12,-1],[[4,[6]]],19],[[12,-1],[[4,[1]]],19],[[12,-1],[[4,[1]]],19],[-1,[[4,[6]]],19],[[12,-1],[[4,[6]]],19],[-1,[[4,[5]]],19],[[12,-1],[[4,[5]]],19],[[12,-1],[[4,[5]]],19],[[13,14],13],[[],12],[[],13],[[12,20],12],[12,12],[[1,7,13],[[4,[3]]]],[[5,7,13],[[4,[3]]]],[[6,7,13],[[4,[3]]]],[12,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[1,11],[[4,[3]]]],[[5,11],[[4,[3]]]],[[6,11],[[4,[3]]]],[[1,11,7,7],[[4,[3]]]],[[5,11,7,7],[[4,[3]]]],[[6,11,7,7],[[4,[3]]]],[1,[[4,[3]]]],[5,[[4,[3]]]],[6,[[4,[3]]]]],"c":[],"p":[[3,"Mmap",0],[4,"Advice",0],[15,"tuple"],[6,"Result",172],[3,"MmapRaw",0],[3,"MmapMut",0],[15,"usize"],[15,"u8"],[15,"slice"],[3,"MmapRawDescriptor",0],[4,"UncheckedAdvice",0],[3,"MmapOptions",0],[3,"RemapOptions",0],[15,"bool"],[3,"Formatter",173],[6,"Result",173],[8,"Hasher",174],[4,"Option",175],[8,"MmapAsRawDesc",0],[15,"u64"],[4,"Result",176],[3,"TypeId",177]],"b":[[87,"impl-From%3CMmapMut%3E-for-MmapRaw"],[89,"impl-From%3CMmap%3E-for-MmapRaw"]]},\
"rangemap":{"doc":"<code>RangeMap</code> and <code>RangeInclusiveMap</code> are map data structures …","t":"CCCCIIKKAAAAKKDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["RangeInclusiveMap","RangeInclusiveSet","RangeMap","RangeSet","StepFns","StepLite","add_one","add_one","inclusive_map","inclusive_set","map","set","sub_one","sub_one","Gaps","IntoIter","Iter","Overlapping","RangeInclusiveMap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains_key","default","eq","extend","fmt","from","from","from","from","from","from_iter","gaps","get","get_key_value","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","new","new_with_step_fns","next","next","next","next","overlapping","overlaps","partial_cmp","remove","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Gaps","IntoIter","Iter","Overlapping","RangeInclusiveSet","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains","default","eq","extend","fmt","from","from","from","from","from","from_iter","gaps","get","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","new","new_with_step_fns","next","next","next","next","overlapping","overlaps","partial_cmp","remove","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Gaps","IntoIter","Iter","Overlapping","RangeMap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains_key","default","eq","extend","fmt","from","from","from","from","from","from_iter","gaps","get","get_key_value","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","new","next","next","next","next","overlapping","overlaps","partial_cmp","remove","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Gaps","IntoIter","Iter","Overlapping","RangeSet","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains","default","eq","extend","fmt","from","from","from","from","from","from_iter","gaps","get","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","new","next","next","next","next","overlapping","overlaps","partial_cmp","remove","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"rangemap"],[14,"rangemap::inclusive_map"],[89,"rangemap::inclusive_set"],[163,"rangemap::map"],[237,"rangemap::set"],[310,"core::cmp"],[311,"core::clone"],[312,"core::cmp"],[313,"core::fmt"],[314,"core::fmt"],[315,"core::option"],[316,"core::cmp"],[317,"core::any"],[318,"core::ops::range"]],"d":["","","","","Successor and predecessor functions defined for <code>T</code>, but as …","Minimal version of unstable <code>Step</code> trait from the Rust …","Returns the <em>successor</em> of <code>self</code>.","Returns the <em>successor</em> of value <code>start</code>.","","","","","Returns the <em>predecessor</em> of <code>self</code>.","Returns the <em>predecessor</em> of value <code>start</code>.","An iterator over all ranges not covered by a …","An owning iterator over the entries of a <code>RangeInclusiveMap</code>…","An iterator over the entries of a <code>RangeInclusiveMap</code>, …","An iterator over all stored ranges partially or completely …","A map whose keys are stored as ranges bounded inclusively …","","","","","","","","","","","Clears the map, removing all elements.","","","","Returns <code>true</code> if any range in the map covers the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets an iterator over all the maximally-sized ranges …","Returns a reference to the value corresponding to the …","Returns the range-value pair (as a pair of references) …","Insert a pair of key range and value into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if the map contains no elements.","Gets an iterator over all pairs of key range and value, …","Returns the number of elements in the map.","Makes a new empty <code>RangeInclusiveMap</code>.","Makes a new empty <code>RangeInclusiveMap</code>, specifying successor …","","","","","Gets an iterator over all the stored ranges that are …","Returns <code>true</code> if any range in the map completely or …","","Removes a range from the map, if all or any of it was …","","","","","","","","","","","","","","","","","","","An iterator over all ranges not covered by a …","An owning iterator over the ranges of a <code>RangeInclusiveSet</code>.","An iterator over the ranges of a <code>RangeInclusiveSet</code>.","An iterator over all stored ranges partially or completely …","A set whose items are stored as ranges bounded inclusively …","","","","","","","","","","","Clears the set, removing all elements.","","","","Returns <code>true</code> if any range in the set covers the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets an iterator over all the maximally-sized ranges …","Returns a reference to the range covering the given key, …","Insert a range into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if the set contains no elements.","Gets an ordered iterator over all ranges, ordered by range.","Returns the number of elements in the set.","Makes a new empty <code>RangeInclusiveSet</code>.","Makes a new empty <code>RangeInclusiveSet</code>, specifying successor …","","","","","Gets an iterator over all the stored ranges that are …","Returns <code>true</code> if any range in the set completely or …","","Removes a range from the set, if all or any of it was …","","","","","","","","","","","","","","","","","","","An iterator over all ranges not covered by a <code>RangeMap</code>.","An owning iterator over the entries of a <code>RangeMap</code>, ordered …","An iterator over the entries of a <code>RangeMap</code>, ordered by key …","An iterator over all stored ranges partially or completely …","A map whose keys are stored as (half-open) ranges bounded …","","","","","","","","","","","Clears the map, removing all elements.","","","","Returns <code>true</code> if any range in the map covers the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets an iterator over all the maximally-sized ranges …","Returns a reference to the value corresponding to the …","Returns the range-value pair (as a pair of references) …","Insert a pair of key range and value into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if the map contains no elements.","Gets an iterator over all pairs of key range and value, …","Returns the number of elements in the map.","Makes a new empty <code>RangeMap</code>.","","","","","Gets an iterator over all the stored ranges that are …","Returns <code>true</code> if any range in the map completely or …","","Removes a range from the map, if all or any of it was …","","","","","","","","","","","","","","","","","","","An iterator over all ranges not covered by a <code>RangeSet</code>.","An owning iterator over the ranges of a <code>RangeSet</code>.","An iterator over the ranges of a <code>RangeSet</code>.","An iterator over all stored ranges partially or completely …","A set whose items are stored as (half-open) ranges bounded …","","","","","","","","","","","Clears the set, removing all elements.","","","","Returns <code>true</code> if any range in the set covers the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets an iterator over all the maximally-sized ranges …","Returns a reference to the range covering the given key, …","Insert a range into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if the set contains no elements.","Gets an ordered iterator over all ranges, ordered by range.","Returns the number of elements in the set.","Makes a new empty <code>RangeSet</code>.","","","","","Gets an iterator over all the stored ranges that are …","Returns <code>true</code> if any range in the set completely or …","","Removes a range from the set, if all or any of it was …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,9,6,0,0,0,0,9,6,0,0,0,0,0,18,20,16,21,1,18,20,16,21,1,1,1,1,1,1,1,1,1,1,18,20,16,21,1,1,1,1,1,1,18,20,16,21,1,18,20,16,21,1,1,1,1,1,1,18,20,16,21,1,1,1,1,18,20,1,18,20,16,21,1,18,20,16,21,1,18,20,16,21,1,0,0,0,0,0,27,28,26,29,25,27,28,26,29,25,25,25,25,25,25,25,25,25,25,27,28,26,29,25,25,25,25,25,27,28,26,29,25,27,28,26,29,25,25,25,25,25,25,27,28,26,29,25,25,25,25,27,28,25,27,28,26,29,25,27,28,26,29,25,27,28,26,29,25,0,0,0,0,0,33,34,32,35,30,33,34,32,35,30,30,30,30,30,30,30,30,30,30,33,34,32,35,30,30,30,30,30,30,33,34,32,35,30,33,34,32,35,30,30,30,30,30,33,34,32,35,30,30,30,30,33,34,30,33,34,32,35,30,33,34,32,35,30,33,34,32,35,30,0,0,0,0,0,38,39,37,40,36,38,39,37,40,36,36,36,36,36,36,36,36,36,36,38,39,37,40,36,36,36,36,36,38,39,37,40,36,38,39,37,40,36,36,36,36,36,38,39,37,40,36,36,36,36,38,39,36,38,39,37,40,36,38,39,37,40,36,38,39,37,40,36],"f":[0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],2,[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]]],[[1,[-1,-2,-3]]],4,4,4],[[-1,-2],2,[],[]],[[[1,[-1,-2,-3]],[1,[-1,-2,-3]]],7,3,3,[]],[[[1,[-1,-2,-3]],-1],8,[3,4],[5,4],[[6,[-1]]]],[[],[[1,[-1,-2,-1]]],[3,4,9],[5,4]],[[[1,[-1,-2,-3]],[1,[-1,-2,-3]]],8,10,10,[]],[[[1,[-1,-2]],-3],2,[3,4,9],[5,4],11],[[[1,[-1,-2]],12],13,[3,4,9,14],[5,4,14]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[1,[-2,-3]]],11,[3,4,9],[5,4]],[[[1,[-1,-2,-3]],[15,[-1]]],[[16,[-1,-2,-3]]],[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]],-1],[[17,[-2]]],[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]],-1],[[17,[[2,[[15,[-1]],-2]]]]],[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]],[15,[-1]],-2],2,[3,4],[5,4],[[6,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],8,[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]]],[[18,[-1,-2]]],[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]]],19,[3,4],[5,4],[[6,[-1]]]],[[],[[1,[-1,-2,-1]]],[3,4,9],[5,4]],[[],[[1,[-1,-2,-3]]],[3,4],[5,4],[[6,[-1]]]],[[[18,[-1,-2]]],[[17,[[2,[[15,[-1]],-2]]]]],[],[]],[[[20,[-1,-2]]],[[17,[[2,[[15,[-1]],-2]]]]],[],[]],[[[16,[-1,-2,-3]]],17,[3,4],[],[[6,[-1]]]],[[[21,[-1,-2]]],17,[3,4],[]],[[[1,[-1,-2,-3]],[15,[-1]]],[[21,[-1,-2]]],[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]],[15,[-1]]],8,[3,4],[5,4],[[6,[-1]]]],[[[1,[-1,-2,-3]],[1,[-1,-2,-3]]],[[17,[7]]],22,22,[]],[[[1,[-1,-2,-3]],[15,[-1]]],2,[3,4],[5,4],[[6,[-1]]]],[[[18,[-1,-2]]],[[2,[19,[17,[19]]]]],[],[]],[[[20,[-1,-2]]],[[2,[19,[17,[19]]]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,-2]]],2,[3,4],[[6,[-1]]]],[[[25,[-1,-2]]],[[25,[-1,-2]]],4,4],[[-1,-2],2,[],[]],[[[25,[-1,-1]],[25,[-1,-1]]],7,3],[[[25,[-1,-2]],-1],8,[3,4],[[6,[-1]]]],[[],[[25,[-1,-1]]],[3,4,9]],[[[25,[-1,-1]],[25,[-1,-1]]],8,10],[[[25,[-1]],-2],2,[3,4,9],11],[[[25,[-1]],12],13,[3,4,9,14]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[25,[-2]]],11,[3,4,9]],[[[25,[-1,-2]],[15,[-1]]],[[26,[-1,-2]]],[3,4],[[6,[-1]]]],[[[25,[-1,-2]],-1],[[17,[[15,[-1]]]]],[3,4],[[6,[-1]]]],[[[25,[-1,-2]],[15,[-1]]],2,[3,4],[[6,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],[],[]],[[[25,[-1,-2]]],8,[3,4],[[6,[-1]]]],[[[25,[-1,-2]]],[[27,[-1]]],[3,4],[[6,[-1]]]],[[[25,[-1,-2]]],19,[3,4],[[6,[-1]]]],[[],[[25,[-1,-1]]],[3,4,9]],[[],[[25,[-1,-2]]],[3,4],[[6,[-1]]]],[[[27,[-1]]],[[17,[[15,[-1]]]]],[]],[[[28,[-1]]],[[17,[[15,[-1]]]]],[]],[[[26,[-1,-2]]],17,[3,4],[[6,[-1]]]],[[[29,[-1]]],17,[3,4]],[[[25,[-1,-2]],[15,[-1]]],[[29,[-1]]],[3,4],[[6,[-1]]]],[[[25,[-1,-2]],[15,[-1]]],8,[3,4],[[6,[-1]]]],[[[25,[-1,-1]],[25,[-1,-1]]],[[17,[7]]],22],[[[25,[-1,-2]],[15,[-1]]],2,[3,4],[[6,[-1]]]],[[[27,[-1]]],[[2,[19,[17,[19]]]]],[]],[[[28,[-1]]],[[2,[19,[17,[19]]]]],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1,-2]]],2,[],[]],[[[30,[-1,-2]]],[[30,[-1,-2]]],4,4],[[-1,-2],2,[],[]],[[[30,[-1,-2]],[30,[-1,-2]]],7,3,3],[[[30,[-1,-2]],-1],8,[3,4],[]],[[],[[30,[-1,-2]]],[],[]],[[[30,[-1,-2]],[30,[-1,-2]]],8,10,10],[[[30,[-1,-2]],-3],2,[3,4],[5,4],11],[[[30,[-1,-2]],12],13,14,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[30,[-2,-3]]],11,[3,4],[5,4]],[[[30,[-1,-2]],[31,[-1]]],[[32,[-1,-2]]],[3,4],[]],[[[30,[-1,-2]],-1],[[17,[-2]]],[3,4],[]],[[[30,[-1,-2]],-1],[[17,[[2,[[31,[-1]],-2]]]]],[3,4],[]],[[[30,[-1,-2]],[31,[-1]],-2],2,[3,4],[5,4]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1,-2]]],[],[],[]],[[[30,[-1,-2]]],8,[],[]],[[[30,[-1,-2]]],[[33,[-1,-2]]],[],[]],[[[30,[-1,-2]]],19,[],[]],[[],[[30,[-1,-2]]],[],[]],[[[33,[-1,-2]]],[[17,[[2,[[31,[-1]],-2]]]]],[],[]],[[[34,[-1,-2]]],[[17,[[2,[[31,[-1]],-2]]]]],[],[]],[[[32,[-1,-2]]],17,[3,4],[]],[[[35,[-1,-2]]],17,3,[]],[[[30,[-1,-2]],[31,[-1]]],[[35,[-1,-2]]],[3,4],[]],[[[30,[-1,-2]],[31,[-1]]],8,[3,4],[]],[[[30,[-1,-2]],[30,[-1,-2]]],[[17,[7]]],22,22],[[[30,[-1,-2]],[31,[-1]]],2,[3,4],[5,4]],[[[33,[-1,-2]]],[[2,[19,[17,[19]]]]],[],[]],[[[34,[-1,-2]]],[[2,[19,[17,[19]]]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],2,[3,4]],[[[36,[-1]]],[[36,[-1]]],4],[[-1,-2],2,[],[]],[[[36,[-1]],[36,[-1]]],7,3],[[[36,[-1]],-1],8,[3,4]],[[],[[36,[-1]]],[3,4]],[[[36,[-1]],[36,[-1]]],8,10],[[[36,[-1]],-2],2,[3,4],11],[[[36,[-1]],12],13,[3,4,14]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[36,[-2]]],11,[3,4]],[[[36,[-1]],[31,[-1]]],[[37,[-1]]],[3,4]],[[[36,[-1]],-1],[[17,[[31,[-1]]]]],[3,4]],[[[36,[-1]],[31,[-1]]],2,[3,4]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[],[]],[[[36,[-1]]],8,[3,4]],[[[36,[-1]]],[[38,[-1]]],[3,4]],[[[36,[-1]]],19,[3,4]],[[],[[36,[-1]]],[3,4]],[[[38,[-1]]],[[17,[[31,[-1]]]]],[]],[[[39,[-1]]],[[17,[[31,[-1]]]]],[]],[[[37,[-1]]],17,[3,4]],[[[40,[-1]]],17,[3,4]],[[[36,[-1]],[31,[-1]]],[[40,[-1]]],[3,4]],[[[36,[-1]],[31,[-1]]],8,[3,4]],[[[36,[-1]],[36,[-1]]],[[17,[7]]],22],[[[36,[-1]],[31,[-1]]],2,[3,4]],[[[38,[-1]]],[[2,[19,[17,[19]]]]],[]],[[[39,[-1]]],[[2,[19,[17,[19]]]]],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[3,"RangeInclusiveMap",14],[15,"tuple"],[8,"Ord",310],[8,"Clone",311],[8,"Eq",310],[8,"StepFns",0],[4,"Ordering",310],[15,"bool"],[8,"StepLite",0],[8,"PartialEq",310],[8,"IntoIterator",312],[3,"Formatter",313],[6,"Result",313],[8,"Debug",313],[3,"RangeInclusive",314],[3,"Gaps",14],[4,"Option",315],[3,"Iter",14],[15,"usize"],[3,"IntoIter",14],[3,"Overlapping",14],[8,"PartialOrd",310],[4,"Result",316],[3,"TypeId",317],[3,"RangeInclusiveSet",89],[3,"Gaps",89],[3,"Iter",89],[3,"IntoIter",89],[3,"Overlapping",89],[3,"RangeMap",163],[3,"Range",314],[3,"Gaps",163],[3,"Iter",163],[3,"IntoIter",163],[3,"Overlapping",163],[3,"RangeSet",237],[3,"Gaps",237],[3,"Iter",237],[3,"IntoIter",237],[3,"Overlapping",237]],"b":[]},\
"read_fonts":{"doc":"Reading OpenType tables","t":"QDDNDIENDIIDINNNNNNNNINIEIIQSGGNIDDINILLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLALMLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLMLLLLLLLLLGGEGGGDGGDGGDNNNGLLLLLLLLLLMLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDNEDEDDEDNNNNNNNNDSEGGGGGGNDNDSLLMLLMLMLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLMLLLMLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLMLMLMLMLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLMMMLMLMLMLLLLMLMLMLLLLLLLLMLMLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLMMLMLMLMGLLLLGLLLLLDGLLLLLLLLLLLLLLLLLLLLLLLLLLLDGLLLLLLLLLLLLLLLLLLLLLLLLGGGGDGGDGGDGGEDNGDNNNNNNNNNNNEGEDDNDNDNDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMMLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLMLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLGDGDNDEGGGNNDGDGNNNENNNNNNNNENNNNNNNNDGNNNNNEGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGNNNNNNNNNNNNNNNNNNNNNNNGDGDNNNNNNNNNNNNNNNLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGDSSLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLGLLLLGLLLLLGGDDLLLLLLMLLMLLLLLLLLLLMLMLLMMLLLLLLLLLLLLMLMLLMLLLLLMLLLLLLLLLGGNEGGGCCNCCCCCNNNGEGGNCCNGCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSEDNGDNDNNNGESSSSSNNDDSSSNGDSSSEDSSSSSSSSSSLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLMMMMMMSGGGEGDNNDDCDNNCNNGCCDNGECCNNNNNNNNNNNNNGGGCGDGGGGDNNNNNNNNEGGGDGEGGCNNEGGDDSSSSSSSSLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLMLMLLLLLLLLMLMLMLMLLLLLLLLMLMNNGGNNCCNNCCNGECCNNNNNNNNGGNNGGCCNNGNNGCGCNNEGGGEGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDGGDSGDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMSSSGSDSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLGDLMLLLLLLLLLLLLLLLLMLLLLGLLLLLLLLLLLLLGGEGGGGGNGEGGDGGGGGGEEGNEGGEDGDDGNNNNNNNNNNGDNNNGDGDGGDEGGGDGGNGNGGNNLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLGDLLLLLLMLMLLLLLLLLLLALLLLLLLLMLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRSSDSSSSESSSSSDSNDGDDDSSSSSSSSNNSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMMLMLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSGSSDSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNENEGGGDDNNNNNNNEGGNNNNNNDNNNNENRDNNDNLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIRDLLKLLKLFLLLLKLKLLLLLLNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNDNNNNNNENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMMMSSGDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEGGGGGDDSNNNNSGLLLLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLSDDEGGSDDINNSSGGSSDDDDSSDDDGDDGSLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLGLLLLLLLLLLLLLLCGLLLLGLLLLLLLLLLLLLLLL","n":["Args","ArrayOfNullableOffsets","ArrayOfOffsets","Collection","CollectionRef","ComputeSize","FileRef","Font","FontData","FontRead","FontReadWithArgs","FontRef","FromBytes","InvalidArrayLen","InvalidCollectionIndex","InvalidFormat","InvalidSfnt","InvalidTtc","MalformedData","MetricIsMissing","NullOffset","Offset","OutOfBounds","ReadArgs","ReadError","ResolveNullableOffset","ResolveOffset","Size","TAG","TTCHeader","TableDirectory","TableIsMissing","TableProvider","TableRecord","TableRef","TopLevelTable","ValidationError","VarSize","_padding","_padding","ach_vend_id","additional_offset_to_index_subtable","advance_height_delta","advance_height_mapping","advance_height_mapping_offset","advance_height_max","advance_width_delta","advance_width_mapping","advance_width_mapping_offset","advance_width_max","alpha","alpha","alternate_glyph_ids","alternate_set_count","alternate_set_offsets","alternate_sets","anchor_format","anchor_format","anchor_format","anchor_point","angle","angle","angle","angle","array","as_bytes","as_ref","ascender","ascender","attach_list","attach_list_offset","attach_point_offsets","attach_points","avar","avar","axes","axes","axis_count","axis_count","axis_count","axis_count","axis_count","axis_index","axis_index","axis_index","axis_index","axis_instance_arrays","axis_instance_arrays_offset","axis_segment_maps","axis_size","axis_value_count","axis_value_offsets","axis_values","axis_values","backdrop_paint","backdrop_paint_offset","backtrack_class_def","backtrack_class_def_offset","backtrack_coverage_offsets","backtrack_coverage_offsets","backtrack_coverages","backtrack_coverages","backtrack_glyph_count","backtrack_glyph_count","backtrack_glyph_count","backtrack_glyph_count","backtrack_sequence","backtrack_sequence","base_array","base_array_offset","base_coord_count","base_coord_format","base_coord_format","base_coord_format","base_coord_offsets","base_coord_point","base_coords","base_count","base_coverage","base_coverage_offset","base_glyph_list","base_glyph_list_offset","base_glyph_paint_records","base_glyph_records","base_glyph_records_offset","base_lang_sys_count","base_lang_sys_records","base_records","base_script_count","base_script_list","base_script_list_offset","base_script_records","base_tag_count","base_tag_list","base_tag_list_offset","base_values","base_values_offset","baseline_tags","big_metrics","big_metrics","bitmap_sizes","bitmap_sizes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsb_delta","bsb_mapping","bsb_mapping_offset","caret_count","caret_offset","caret_offset","caret_slope_rise","caret_slope_rise","caret_slope_run","caret_slope_run","caret_value_format","caret_value_format","caret_value_format","caret_value_offsets","caret_value_point_index","caret_values","cbdt","cbdt","cblc","cblc","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","cff","cff","cff2","cff2","chained_class_seq_rule_count","chained_class_seq_rule_offsets","chained_class_seq_rule_set_count","chained_class_seq_rule_set_offsets","chained_class_seq_rule_sets","chained_class_seq_rules","chained_seq_rule_count","chained_seq_rule_offsets","chained_seq_rule_set_count","chained_seq_rule_set_offsets","chained_seq_rule_sets","chained_seq_rules","char_count","character","checksum","checksum","checksum_adjustment","class1_count","class1_records","class2_count","class_def","class_def1","class_def1_offset","class_def2","class_def2_offset","class_def_offset","class_format","class_format","class_range_count","class_range_records","class_seq_rule_count","class_seq_rule_offsets","class_seq_rule_set_count","class_seq_rule_set_offsets","class_seq_rule_sets","class_seq_rules","class_value_array","clip_list","clip_list_offset","clips","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmap","cmap","cmp","color_line","color_line","color_line","color_line","color_line","color_line","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_record_indices","color_records_array","color_records_array_offset","color_stops","color_stops","colr","colr","component_count","component_count","component_data","component_glyph_ids","component_glyphs_and_flags","component_records","components","composite_mode","compute_delta","compute_float_delta","compute_size","condition_count","condition_offsets","conditions","coordinate","coordinate","coordinate","coordinate","coordinate","count","count","count","count_and_instructions","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage","coverage_format","coverage_format","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offsets","coverage_offsets","coverages","coverages","cpal","cpal","created","data","data","data","data","data","data_for_tag","data_for_tag","default","default_baseline_index","default_lang_sys","default_lang_sys_offset","default_min_max","default_min_max_offset","delta_format","delta_format","delta_glyph_id","delta_set","delta_set_inner_index","delta_set_outer_index","delta_sets","delta_value","descender","descender","design_axes","design_axes_offset","design_axis_count","design_axis_size","design_size","device","device","device_offset","device_offset","dsig_length","dsig_length","dsig_offset","dsig_offset","dsig_tag","dsig_tag","dx","dx","dx","dx","dy","dy","dy","dy","ebdt","ebdt","eblc","eblc","elided_fallback_name_id","encoding_records","end_angle","end_angle","end_code","end_pts_of_contours","end_size","entry_count","entry_exit_count","entry_exit_record","entry_format","entry_format","entry_selector","entry_selector","entry_selector","eq","expect_data_for_tag","expect_data_for_tag","expect_table","expect_table","extend","extend","extension","extension","extension_lookup_type","extension_lookup_type","extension_offset","extension_offset","fds","feat_min_max_count","feat_min_max_records","feat_ui_label_name_id","feat_ui_tooltip_text_name_id","feature_count","feature_index_count","feature_indices","feature_list","feature_list","feature_list_offset","feature_list_offset","feature_params","feature_params_offset","feature_records","feature_variation_record_count","feature_variation_records","feature_variations","feature_variations","feature_variations_offset","feature_variations_offset","filter_range_max_value","filter_range_min_value","first_code","first_glyph_index","first_layer_index","first_param_ui_label_name_id","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","font_direction_hint","font_revision","fonts","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from_index","fs_selection","fs_type","fvar","fvar","gdef","gdef","get","get","get","get","get","get","get","get","get","get_offset","get_offset","get_subtable","glyf","glyf","glyph_array","glyph_array","glyph_array","glyph_class_def","glyph_class_def_offset","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","glyph_data","glyph_data","glyph_data_format","glyph_data_offsets","glyph_id","glyph_id","glyph_id_array","glyph_id_array","glyph_id_array","glyph_id_array","glyph_name","glyph_name_index","glyph_variation_data","glyph_variation_data_array_offset","glyph_variation_data_offsets","gpos","gpos","graphic_type","groups","groups","groups","gsub","gsub","gvar","gvar","h_metrics","has_overlapping_contours","hash","hdr_size","head","head","header_size","hhea","hhea","hmtx","hmtx","horiz_axis","horiz_axis_offset","hvar","hvar","id_delta","id_range_offsets","identifier","image_data_offset","image_data_offset","image_data_offset","image_data_offset","image_data_offset","image_format","image_format","image_format","image_format","image_format","image_size","image_size","index_format","index_format","index_format","index_format","index_format","index_to_loc_format","input_class_def","input_class_def_offset","input_coverage_offsets","input_coverages","input_glyph_count","input_glyph_count","input_glyph_count","input_sequence","input_sequence","input_sequence","input_sequence","instance_count","instance_size","instances","instances","instruction_length","instructions","instructions","intermediate_end_tuple","intermediate_start_tuple","into","into","into","into","into","into","into","into","into","is32","is_empty","is_empty","is_empty","is_empty","is_fixed_pitch","italic_angle","item_count","item_var_store","item_var_store","item_var_store_offset","item_var_store_offset","item_variation_data","item_variation_data_count","item_variation_data_offsets","item_variation_store","item_variation_store","item_variation_store","item_variation_store","item_variation_store_offset","item_variation_store_offset","item_variation_store_offset","item_variation_store_offset","iter","iter","iter","iter","iter","iter","iter","iter","iter","lang_sys_count","lang_sys_records","lang_tag_count","lang_tag_record","language","language","language","language","language","language","language","language","last_glyph_index","layer_list","layer_list_offset","layer_records","layer_records_offset","left_side_bearings","len","len","len","len","length","length","length","length","length","length","length","length","length","length","length","lig_caret_list","lig_caret_list_offset","lig_glyph_count","lig_glyph_offsets","lig_glyphs","ligature_array","ligature_array_offset","ligature_attach_offsets","ligature_attaches","ligature_count","ligature_count","ligature_coverage","ligature_coverage_offset","ligature_glyph","ligature_offsets","ligature_set_count","ligature_set_offsets","ligature_sets","ligatures","line_gap","line_gap","linked_value","loca","loca","lookahead_class_def","lookahead_class_def_offset","lookahead_coverage_offsets","lookahead_coverage_offsets","lookahead_coverages","lookahead_coverages","lookahead_glyph_count","lookahead_glyph_count","lookahead_glyph_count","lookahead_glyph_count","lookahead_sequence","lookahead_sequence","lookup_count","lookup_flag","lookup_index_count","lookup_list","lookup_list","lookup_list_indices","lookup_list_offset","lookup_list_offset","lookup_offsets","lookup_type","lookups","lowest_rec_ppem","lsb_delta","lsb_mapping","lsb_mapping_offset","mac_style","magic_number","major","major_version","major_version","major_version","major_version","major_version","map_codepoint","map_codepoint","map_codepoint","map_count","map_count","map_data","map_data","map_variant","mark1_array","mark1_array_offset","mark1_coverage","mark1_coverage_offset","mark2_array","mark2_array_offset","mark2_count","mark2_coverage","mark2_coverage_offset","mark2_records","mark_array","mark_array","mark_array_offset","mark_array_offset","mark_attach_class_def","mark_attach_class_def_offset","mark_class_count","mark_class_count","mark_class_count","mark_count","mark_coverage","mark_coverage","mark_coverage_offset","mark_coverage_offset","mark_filtering_set","mark_glyph_set_count","mark_glyph_sets_def","mark_glyph_sets_def_offset","mark_records","max_component_depth","max_component_elements","max_composite_contours","max_composite_points","max_contours","max_coord","max_coord_offset","max_function_defs","max_instruction_defs","max_mem_type1","max_mem_type42","max_points","max_size_of_instructions","max_stack_elements","max_storage","max_twilight_points","max_zones","maxp","maxp","metric_data_format","metric_data_format","metric_delta","min_bottom_side_bearing","min_coord","min_coord_offset","min_left_side_bearing","min_mem_type1","min_mem_type42","min_right_side_bearing","min_top_side_bearing","minor","minor_version","minor_version","minor_version","minor_version","minor_version","modified","mvar","mvar","n_ranges","n_ranges","name","name","name_entry","name_record","new","new","new","new","nominal_value","non_null","non_null","num_base_glyph_paint_records","num_base_glyph_records","num_chars","num_clips","num_color_records","num_fonts","num_fonts","num_glyphs","num_glyphs","num_glyphs","num_glyphs","num_groups","num_groups","num_groups","num_layer_records","num_layers","num_layers","num_named_parameters","num_names","num_palette_entries","num_palettes","num_points","num_sizes","num_sizes","num_stops","num_stops","num_strikes","num_tables","num_tables","num_tables","num_unicode_value_ranges","num_uvs_mappings","num_var_selector_records","number_of_contours","number_of_contours","number_of_long_metrics","number_of_long_ver_metrics","off_size","off_size","off_size","offset","offset","offset_data","offset_to_axis_value_offsets","offset_to_axis_values","offsets","offsets","origin_offset_x","origin_offset_y","os2","os2","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offsets","paints","pair_set_count","pair_set_offsets","pair_sets","pair_value_count","pair_value_records","palette_entry_labels_array","palette_entry_labels_array_offset","palette_index","palette_index","palette_labels_array","palette_labels_array_offset","palette_types_array","palette_types_array_offset","panose_10","partial_cmp","peak_tuple","point_count","point_indices","points","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","post","post","ppem","ppi","radius0","radius0","radius1","radius1","range_count","range_end","range_max_value","range_min_value","range_records","range_shift","range_shift","range_shift","range_start","ranges","ranges","ranges","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_array","read_at","read_be_at","read_points_fast","read_ref_at","read_with_args","read_with_args","read_with_args","read_with_args","reference_glyph","region_count","region_index_count","region_indexes","required_feature_index","resolve","resolve","resolve_offset","resolve_with_args","resolve_with_args","rsb_delta","rsb_mapping","rsb_mapping_offset","s_cap_height","s_family_class","s_typo_ascender","s_typo_descender","s_typo_line_gap","sample_text_name_id","sbit_offsets","sbit_offsets","sbix","sbix","scale","scale","scale","scale","scale_x","scale_x","scale_x","scale_x","scale_y","scale_y","scale_y","scale_y","script_count","script_list","script_list","script_list_offset","script_list_offset","script_records","search_range","search_range","search_range","seg_count_x2","sentinel","sentinel","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_rule_count","seq_rule_offsets","seq_rule_set_count","seq_rule_set_offsets","seq_rule_sets","seq_rules","sequence_count","sequence_offsets","sequences","serialized_data","serialized_data_offset","sfnt_version","sfnt_version","shared_tuple_count","shared_tuples","shared_tuples_offset","size_in_bytes","size_in_bytes","slice","source_paint","source_paint_offset","split_off","start_angle","start_angle","start_char_code","start_code","start_glyph_id","start_size","stat","stat","storage_offset","strike_offsets","strikes","string_data","string_data","sub_header_keys","sub_table_count","subst_format","subst_format","subst_format","subst_format","subst_format","subst_format","subst_format","substitute_glyph_ids","substitute_glyph_ids","substitute_glyph_ids","substitution_count","substitutions","subtable_offsets","subtables","sx_height","table_data","table_directory","table_directory_offsets","table_directory_offsets","table_records","table_records","tables","tag","tag","take_up_to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","top_dict_data","top_dict_length","top_side_bearings","trailing_data","trailing_data","transform","transform","transform_offset","transform_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsb_delta","tsb_mapping","tsb_mapping_offset","ttc_tag","ttc_tag","tuple_index","tuple_variation_count","tuple_variation_headers","tuples","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","ui_name_id","ul_code_page_range_1","ul_code_page_range_2","ul_unicode_range_1","ul_unicode_range_2","ul_unicode_range_3","ul_unicode_range_4","underline_position","underline_thickness","units_per_em","us_break_char","us_default_char","us_first_char_index","us_last_char_index","us_lower_optical_point_size","us_max_context","us_upper_optical_point_size","us_weight_class","us_width_class","us_win_ascent","us_win_descent","uvs_mapping","v0_base_glyph","v0_layer","v1_base_glyph","v1_clip_box","v1_layer","v_metrics","v_org_delta","v_org_mapping","v_org_mapping_offset","value","value","value_count","value_format","value_format","value_format1","value_format1","value_format2","value_format2","value_name_id","value_name_id","value_name_id","value_name_id","value_record","value_record_count","value_record_size","value_records","value_records","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_map","var_index_map_offset","var_selector","variation_data_size","variation_region_list","variation_region_list_offset","variation_regions","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","vert_axis","vert_axis_offset","vhea","vhea","vmtx","vmtx","vvar","vvar","word_delta_count","x0","x0","x0","x0","x1","x1","x1","x1","x2","x2","x_avg_char_width","x_coordinate","x_coordinate","x_coordinate","x_device","x_device_offset","x_max","x_max","x_max","x_max","x_max","x_max_extent","x_min","x_min","x_min","x_min","x_min","x_skew_angle","x_skew_angle","x_skew_angle","x_skew_angle","xx","xx","xy","xy","y0","y0","y0","y0","y1","y1","y1","y1","y2","y2","y_coordinate","y_coordinate","y_coordinate","y_device","y_device_offset","y_max","y_max","y_max","y_max","y_max","y_max_extent","y_min","y_min","y_min","y_min","y_min","y_skew_angle","y_skew_angle","y_skew_angle","y_skew_angle","y_strikeout_position","y_strikeout_size","y_subscript_x_offset","y_subscript_x_size","y_subscript_y_offset","y_subscript_y_size","y_superscript_x_offset","y_superscript_x_size","y_superscript_y_offset","y_superscript_y_size","yx","yx","yy","yy","ComputedArray","VarLenArray","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","get","get","into","into","is_empty","iter","iter","len","new","read","read_with_args","read_with_args","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","avar","base","bitmap","cbdt","cblc","cff","cff2","cmap","colr","cpal","ebdt","eblc","fvar","gdef","glyf","gpos","gsub","gvar","head","hhea","hmtx","hvar","layout","loca","maxp","mvar","name","os2","post","postscript","sbix","stat","variations","vhea","vmtx","vvar","Avar","AxisValueMap","SegmentMaps","apply","axis_count","axis_segment_maps","axis_value_maps","axis_value_maps","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from_coordinate","from_coordinate","hash","hash","into","into","partial_cmp","partial_cmp","position_map_count","position_map_count","read","read","read_with_args","to_coordinate","to_coordinate","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","Axis","Base","BaseCoord","BaseCoordFormat1","BaseCoordFormat2","BaseCoordFormat3","BaseLangSysRecord","BaseScript","BaseScriptList","BaseScriptRecord","BaseTagList","BaseValues","FeatMinMaxRecord","Format1","Format2","Format3","MinMax","base_coord_count","base_coord_format","base_coord_format","base_coord_format","base_coord_offsets","base_coord_point","base_coords","base_lang_sys_count","base_lang_sys_records","base_lang_sys_tag","base_lang_sys_tag","base_script","base_script_count","base_script_list","base_script_list_offset","base_script_offset","base_script_offset","base_script_records","base_script_tag","base_script_tag","base_tag_count","base_tag_list","base_tag_list_offset","base_values","base_values_offset","baseline_tags","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coordinate","coordinate","coordinate","default_baseline_index","default_min_max","default_min_max_offset","device","device_offset","feat_min_max_count","feat_min_max_records","feature_table_tag","feature_table_tag","fmt","fmt","fmt","from","from","from","from","horiz_axis","horiz_axis_offset","into","into","into","into","item_var_store","item_var_store_offset","max_coord","max_coord","max_coord_offset","max_coord_offset","max_coord_offset","min_coord","min_coord","min_coord_offset","min_coord_offset","min_coord_offset","min_max","min_max_offset","min_max_offset","read","read","read","read","read","read","read","read","read","read","read","read_with_args","reference_glyph","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vert_axis","vert_axis_offset","BdtComponent","Big","BigGlyphMetrics","BitAligned","BitmapContent","BitmapData","BitmapDataFormat","BitmapFlags","BitmapLocation","BitmapMetrics","BitmapSize","ByteAligned","Composite","Data","Format1","Format2","Format3","Format4","Format5","GlyphIdOffsetPair","HORIZONTAL_METRICS","IndexSubtable","IndexSubtable1","IndexSubtable2","IndexSubtable3","IndexSubtable4","IndexSubtable5","IndexSubtableArray","Png","SbitLineMetrics","Small","SmallGlyphMetrics","VERTICAL_METRICS","additional_offset_to_index_subtable","advance","advance","all","ascender","ascender","bearing_x","bearing_x","bearing_y","bearing_y","big_metrics","big_metrics","bit_depth","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caret_offset","caret_offset","caret_slope_denominator","caret_slope_denominator","caret_slope_numerator","caret_slope_numerator","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color_ref","color_ref","contains","content","data_offset","data_size","default","default","descender","descender","difference","empty","end_glyph_index","end_glyph_index","eq","eq","eq","eq","eq","eq","eq","eq","first_glyph_index","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_raw","glyph_array","glyph_array","glyph_id","glyph_id","glyph_id","glyph_id","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","hori","hori","hori_advance","hori_advance","hori_bearing_x","hori_bearing_x","hori_bearing_y","hori_bearing_y","image_data_offset","image_data_offset","image_data_offset","image_data_offset","image_data_offset","image_format","image_format","image_format","image_format","image_format","image_size","image_size","index_format","index_format","index_format","index_format","index_format","index_subtable_array_offset","index_subtable_array_offset","index_tables_size","index_tables_size","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","last_glyph_index","location","max_before_bl","max_before_bl","metrics","metrics","min_advance_sb","min_advance_sb","min_after_bl","min_after_bl","min_origin_sb","min_origin_sb","not","num_glyphs","num_glyphs","number_of_index_subtables","number_of_index_subtables","pad1","pad1","pad2","pad2","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ppem_x","ppem_x","ppem_y","ppem_y","read","read","read","read","read","read","read","read_with_args","remove","sbit_offset","sbit_offset","sbit_offsets","sbit_offsets","start_glyph_index","start_glyph_index","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vert","vert","vert_advance","vert_advance","vert_bearing_x","vert_bearing_x","vert_bearing_y","vert_bearing_y","width","width","width","width","width_max","width_max","x_offset","x_offset","y_offset","y_offset","Cbdt","data","major_version","minor_version","read","Cblc","bitmap_sizes","major_version","minor_version","num_sizes","read","Cff","CffHeader","_padding","borrow","borrow_mut","clone","clone_into","from","global_subrs","hdr_size","header","into","major","minor","name","names","off_size","offset_data","read","read","read_with_args","string","strings","to_owned","top_dicts","trailing_data","try_from","try_into","type_id","Cff2","Cff2Header","_padding","borrow","borrow_mut","clone","clone_into","from","global_subrs","header","header_size","into","major_version","minor_version","offset_data","read","read","read_with_args","to_owned","top_dict_data","top_dict_data","top_dict_length","trailing_data","try_from","try_into","type_id","Cmap","Cmap0","Cmap10","Cmap12","Cmap12Iter","Cmap13","Cmap14","Cmap14Iter","Cmap2","Cmap4","Cmap4Iter","Cmap6","Cmap8","CmapSubtable","ConstantMapGroup","Custom","DefaultUvs","EncodingRecord","Format0","Format10","Format12","Format13","Format14","Format2","Format4","Format6","Format8","ISO","Macintosh","MapVariant","NonDefaultUvs","PlatformId","SequentialMapGroup","SubHeader","Unicode","UnicodeRange","UseDefault","UvsMapping","Variant","VariationSelector","Windows","additional_count","additional_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","default_uvs","default_uvs_offset","default_uvs_offset","encoding_id","encoding_id","encoding_records","end_char_code","end_char_code","end_char_code","end_char_code","end_code","entry_count","entry_count","entry_count","entry_selector","eq","eq","eq","eq","eq","eq","eq","first_code","first_code","first_code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","glyph_id","glyph_id","glyph_id","glyph_id","glyph_id_array","glyph_id_array","glyph_id_array","glyph_id_array","groups","groups","groups","hash","hash","hash","hash","hash","hash","id_delta","id_delta","id_delta","id_range_offset","id_range_offset","id_range_offsets","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is32","iter","iter","iter","language","language","language","language","language","language","language","language","length","length","length","length","length","length","length","length","length","map_codepoint","map_codepoint","map_codepoint","map_variant","new","next","next","next","non_default_uvs","non_default_uvs_offset","non_default_uvs_offset","num_chars","num_groups","num_groups","num_groups","num_tables","num_unicode_value_ranges","num_uvs_mappings","num_var_selector_records","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","platform_id","platform_id","range_shift","ranges","read","read","read","read","read","read","read","read","read","read","read","read","read","read_with_args","search_range","seg_count_x2","start_char_code","start_char_code","start_char_code","start_char_code","start_char_code","start_code","start_glyph_id","start_glyph_id","start_unicode_value","start_unicode_value","sub_header_keys","subtable","subtable_offset","subtable_offset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_value","unicode_value","uvs_mapping","var_selector","var_selector","var_selector","version","Affine2x3","BaseGlyph","BaseGlyphList","BaseGlyphPaint","Clear","Clip","ClipBox","ClipBoxFormat1","ClipBoxFormat2","ClipList","ColorBurn","ColorDodge","ColorIndex","ColorLine","ColorStop","Colr","ColrGlyph","ColrLayers","Composite","CompositeMode","Darken","Dest","DestAtop","DestIn","DestOut","DestOver","Difference","Exclusion","Extend","Format1","Format2","Glyph","HardLight","HslColor","HslHue","HslLuminosity","HslSaturation","Layer","LayerList","Lighten","LinearGradient","Multiply","Overlay","Pad","Paint","PaintColrGlyph","PaintColrLayers","PaintComposite","PaintGlyph","PaintId","PaintLinearGradient","PaintRadialGradient","PaintRotate","PaintRotateAroundCenter","PaintScale","PaintScaleAroundCenter","PaintScaleUniform","PaintScaleUniformAroundCenter","PaintSkew","PaintSkewAroundCenter","PaintSolid","PaintSweepGradient","PaintTransform","PaintTranslate","PaintVarLinearGradient","PaintVarRadialGradient","PaintVarRotate","PaintVarRotateAroundCenter","PaintVarScale","PaintVarScaleAroundCenter","PaintVarScaleUniform","PaintVarScaleUniformAroundCenter","PaintVarSkew","PaintVarSkewAroundCenter","PaintVarSolid","PaintVarSweepGradient","PaintVarTransform","PaintVarTranslate","Plus","RadialGradient","Reflect","Repeat","Rotate","RotateAroundCenter","Scale","ScaleAroundCenter","ScaleUniform","ScaleUniformAroundCenter","Screen","Skew","SkewAroundCenter","SoftLight","Solid","Src","SrcAtop","SrcIn","SrcOut","SrcOver","SweepGradient","Transform","Translate","VarAffine2x3","VarColorIndex","VarColorLine","VarColorStop","VarLinearGradient","VarRadialGradient","VarRotate","VarRotateAroundCenter","VarScale","VarScaleAroundCenter","VarScaleUniform","VarScaleUniformAroundCenter","VarSkew","VarSkewAroundCenter","VarSolid","VarSweepGradient","VarTransform","VarTranslate","Xor","alpha","alpha","alpha","alpha","alpha","alpha","alpha","alpha","alpha","alpha","angle","angle","angle","angle","backdrop_paint","backdrop_paint_offset","base_glyph_list","base_glyph_list_offset","base_glyph_paint_records","base_glyph_records","base_glyph_records_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_x","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","center_y","clip_box","clip_box_offset","clip_box_offset","clip_list","clip_list_offset","clips","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color_line","color_line","color_line","color_line","color_line","color_line","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_line_offset","color_stops","color_stops","composite_mode","default","default","dx","dx","dx","dx","dy","dy","dy","dy","end_angle","end_angle","end_glyph_id","end_glyph_id","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","first_layer_index","first_layer_index","first_layer_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_raw","glyph_id","glyph_id","glyph_id","glyph_id","glyph_id","glyph_id","glyph_id","glyph_id","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","item_variation_store","item_variation_store_offset","layer_list","layer_list_offset","layer_records","layer_records_offset","new","new","num_base_glyph_paint_records","num_base_glyph_records","num_clips","num_layer_records","num_layers","num_layers","num_layers","num_layers","num_stops","num_stops","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offset","paint_offsets","paints","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","palette_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","radius0","radius0","radius1","radius1","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_with_args","read_with_args","scale","scale","scale","scale","scale_x","scale_x","scale_x","scale_x","scale_y","scale_y","scale_y","scale_y","source_paint","source_paint_offset","start_angle","start_angle","start_glyph_id","start_glyph_id","stop_offset","stop_offset","stop_offset","stop_offset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","transform","transform","transform_offset","transform_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v0_base_glyph","v0_layer","v1_base_glyph","v1_clip_box","v1_layer","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_base","var_index_map","var_index_map_offset","version","x0","x0","x0","x0","x1","x1","x1","x1","x2","x2","x_max","x_max","x_min","x_min","x_skew_angle","x_skew_angle","x_skew_angle","x_skew_angle","xx","xx","xy","xy","y0","y0","y0","y0","y1","y1","y1","y1","y2","y2","y_max","y_max","y_min","y_min","y_skew_angle","y_skew_angle","y_skew_angle","y_skew_angle","yx","yx","yy","yy","ColorRecord","Cpal","PaletteType","USABLE_WITH_DARK_BACKGROUND","USABLE_WITH_LIGHT_BACKGROUND","all","alpha","alpha","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blue","blue","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","color_record_indices","color_records_array","color_records_array_offset","contains","default","difference","empty","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_raw","green","green","hash","hash","insert","intersection","intersects","into","into","is_empty","not","num_color_records","num_palette_entries","num_palettes","palette_entry_labels_array","palette_entry_labels_array_offset","palette_labels_array","palette_labels_array_offset","palette_types_array","palette_types_array_offset","partial_cmp","partial_cmp","read","red","red","remove","sub","sub_assign","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","version","Ebdt","data","major_version","minor_version","read","Eblc","bitmap_sizes","major_version","minor_version","num_sizes","read","AxisInstanceArrays","Fvar","InstanceRecord","VariationAxisRecord","axes","axes","axis_count","axis_instance_arrays","axis_instance_arrays_offset","axis_name_id","axis_name_id","axis_size","axis_tag","axis_tag","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compute_size","coordinates","default_value","default_value","eq","flags","flags","flags","fmt","fmt","from","from","hash","instance_count","instance_size","instances","instances","into","into","max_value","max_value","min_value","min_value","normalize","partial_cmp","post_script_name_id","read","read","read","read_with_args","read_with_args","subfamily_name_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","AttachList","AttachPoint","Base","CaretValue","CaretValueFormat1","CaretValueFormat2","CaretValueFormat3","ChainedSequenceContext","ClassDef","Component","CoverageTable","Device","DeviceOrVariationIndex","FeatureList","FeatureVariations","Format1","Format2","Format3","Gdef","GlyphClassDef","LigCaretList","LigGlyph","Ligature","Lookup","LookupList","Mark","MarkGlyphSets","ScriptList","SequenceContext","attach_list","attach_list_offset","attach_point_offsets","attach_points","borrow","borrow","borrow_mut","borrow_mut","caret_count","caret_value_format","caret_value_format","caret_value_format","caret_value_offsets","caret_value_point_index","caret_values","clone","clone","clone_into","clone_into","cmp","coordinate","coordinate","coverage","coverage","coverage_offset","coverage_offset","coverage_offsets","coverages","default","device","device_offset","eq","fmt","format","from","from","from_raw","glyph_class_def","glyph_class_def_offset","glyph_count","hash","into","into","item_var_store","item_var_store_offset","lig_caret_list","lig_caret_list_offset","lig_glyph_count","lig_glyph_offsets","lig_glyphs","mark_attach_class_def","mark_attach_class_def_offset","mark_glyph_set_count","mark_glyph_sets_def","mark_glyph_sets_def_offset","new","partial_cmp","point_count","point_indices","read","read","read","read","read","read","read","read","read","read","read_with_args","to_owned","to_owned","to_raw","try_from","try_from","try_into","try_into","type_id","type_id","version","ARGS_ARE_XY_VALUES","ARG_1_AND_2_ARE_WORDS","Anchor","Component","Composite","CompositeGlyph","CompositeGlyphFlags","ContourOrder","CurvePoint","ExpectedCubic","ExpectedQuad","ExpectedQuadOrOnCurve","Glyf","Glyph","HAS_DELTA","MORE_COMPONENTS","ON_CURVE_POINT","OVERLAP_COMPOUND","OVERLAP_SIMPLE","Offset","Point","PointFlags","PointMarker","REPEAT_FLAG","ROUND_XY_TO_GRID","SCALED_COMPONENT_OFFSET","Simple","SimpleGlyph","SimpleGlyphFlags","TOUCHED","TOUCHED_X","TOUCHED_Y","ToPathError","Transform","UNSCALED_COMPONENT_OFFSET","USE_MY_METRICS","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_SCALE","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_INSTRUCTIONS","X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR","X_SHORT_VECTOR","Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR","Y_SHORT_VECTOR","all","all","anchor","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_marker","clear_on_curve","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","component_data","component_glyphs_and_flags","components","compute_flags","compute_flags","contains","contains","count_and_instructions","default","default","default","default","default","difference","difference","empty","empty","end_pts_of_contours","eq","eq","eq","eq","eq","eq","eq","eq","flags","flip_on_curve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_raw","from_raw","glyph","glyph_data","has_marker","has_overlapping_contours","hash","hash","insert","insert","instruction_length","instructions","instructions","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","is_empty","is_empty","is_off_curve_cubic","is_off_curve_quad","is_on_curve","new","not","not","num_points","number_of_contours","number_of_contours","number_of_contours","off_curve","off_curve_cubic","off_curve_quad","on_curve","on_curve","on_curve","partial_cmp","partial_cmp","points","read","read","read","read","read_points_fast","read_with_args","remove","remove","set_marker","set_on_curve","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path","to_raw","to_raw","to_string","toggle","toggle","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","x","x_max","x_max","x_max","x_min","x_min","x_min","xx","xy","y","y_max","y_max","y_max","y_min","y_min","y_min","yx","yy","base","component","x","y","ANY_DEVICE_OR_VARIDX","AnchorFormat1","AnchorFormat2","AnchorFormat3","AnchorTable","BaseArray","BaseRecord","ChainContextual","ChainContextual","Class1Record","Class2Record","ClassDef","ComponentRecord","Contextual","Contextual","CoverageTable","Cursive","Cursive","CursivePosFormat1","Device","DeviceOrVariationIndex","EntryExitRecord","Extension","ExtensionPosFormat1","ExtensionSubtable","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format2","Format3","Format3","Format3","Gpos","LigatureArray","LigatureAttach","Lookup","Mark2Array","Mark2Record","MarkArray","MarkBasePosFormat1","MarkLigPosFormat1","MarkMarkPosFormat1","MarkRecord","MarkToBase","MarkToBase","MarkToLig","MarkToLig","MarkToMark","MarkToMark","Pair","Pair","PairPos","PairPosFormat1","PairPosFormat2","PairSet","PairValueRecord","PositionChainContext","PositionLookup","PositionLookupList","PositionSequenceContext","ScriptList","Single","Single","SinglePos","SinglePosFormat1","SinglePosFormat2","ValueFormat","ValueRecord","X_ADVANCE","X_ADVANCE_DEVICE","X_PLACEMENT","X_PLACEMENT_DEVICE","Y_ADVANCE","Y_ADVANCE_DEVICE","Y_PLACEMENT","Y_PLACEMENT_DEVICE","all","anchor_format","anchor_format","anchor_format","anchor_point","base_anchor_offsets","base_anchor_offsets","base_anchors","base_array","base_array_offset","base_count","base_coverage","base_coverage_offset","base_records","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class1_count","class1_records","class2_count","class2_records","class2_records","class_def1","class_def1_offset","class_def2","class_def2_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","component_count","component_records","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","contains","coverage","coverage","coverage","coverage","coverage","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","default","default","difference","empty","entry_anchor","entry_anchor_offset","entry_anchor_offset","entry_exit_count","entry_exit_record","eq","eq","exit_anchor","exit_anchor_offset","exit_anchor_offset","extension","extension_lookup_type","extension_offset","feature_list","feature_list_offset","feature_variations","feature_variations_offset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_raw","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","ligature_anchor_offsets","ligature_anchor_offsets","ligature_anchors","ligature_array","ligature_array_offset","ligature_attach_offsets","ligature_attaches","ligature_count","ligature_coverage","ligature_coverage_offset","lookup_list","lookup_list_offset","mark1_array","mark1_array_offset","mark1_coverage","mark1_coverage_offset","mark2_anchor_offsets","mark2_anchor_offsets","mark2_anchors","mark2_array","mark2_array_offset","mark2_count","mark2_coverage","mark2_coverage_offset","mark2_records","mark_anchor","mark_anchor_offset","mark_anchor_offset","mark_array","mark_array","mark_array_offset","mark_array_offset","mark_class","mark_class","mark_class_count","mark_class_count","mark_class_count","mark_count","mark_coverage","mark_coverage","mark_coverage_offset","mark_coverage_offset","mark_records","not","pair_set_count","pair_set_offsets","pair_sets","pair_value_count","pair_value_records","partial_cmp","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","pos_format","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_old","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","record_byte_len","remove","script_list","script_list_offset","second_glyph","second_glyph","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","value_count","value_format","value_format","value_format1","value_format1","value_format2","value_format2","value_record","value_record1","value_record1","value_record1","value_record1","value_record2","value_record2","value_record2","value_record2","value_records","version","x_advance","x_advance","x_advance_device","x_advance_device","x_coordinate","x_coordinate","x_coordinate","x_coordinate","x_device","x_device","x_device_offset","x_placement","x_placement","x_placement_device","x_placement_device","y_advance","y_advance","y_advance_device","y_advance_device","y_coordinate","y_coordinate","y_coordinate","y_coordinate","y_device","y_device","y_device_offset","y_placement","y_placement","y_placement_device","y_placement_device","Alternate","Alternate","AlternateSet","AlternateSubstFormat1","ChainContextual","ChainContextual","ChainedSequenceContext","ClassDef","Contextual","Contextual","CoverageTable","Device","Extension","ExtensionSubstFormat1","ExtensionSubtable","FeatureList","FeatureVariations","Format1","Format1","Format1","Format2","Format2","Format2","Format3","Format3","Gsub","Ligature","Ligature","Ligature","LigatureSet","LigatureSubstFormat1","Lookup","LookupList","Multiple","Multiple","MultipleSubstFormat1","Reverse","Reverse","ReverseChainSingleSubstFormat1","ScriptList","Sequence","SequenceContext","Single","Single","SingleSubst","SingleSubstFormat1","SingleSubstFormat2","SubstitutionChainContext","SubstitutionLookup","SubstitutionLookupList","SubstitutionSequenceContext","alternate_glyph_ids","alternate_set_count","alternate_set_offsets","alternate_sets","backtrack_coverage_offsets","backtrack_coverages","backtrack_glyph_count","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","component_count","component_glyph_ids","coverage","coverage","coverage","coverage","coverage","coverage","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offset","delta_glyph_id","extension","extension_lookup_type","extension_offset","feature_list","feature_list_offset","feature_variations","feature_variations_offset","from","from","from","glyph_count","glyph_count","glyph_count","glyph_count","into","into","into","ligature_count","ligature_glyph","ligature_offsets","ligature_set_count","ligature_set_offsets","ligature_sets","ligatures","lookahead_coverage_offsets","lookahead_coverages","lookahead_glyph_count","lookup_list","lookup_list_offset","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_with_args","read_with_args","read_with_args","script_list","script_list_offset","sequence_count","sequence_offsets","sequences","subst_format","subst_format","subst_format","subst_format","subst_format","subst_format","subst_format","substitute_glyph_ids","substitute_glyph_ids","substitute_glyph_ids","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","DeltaIter","GlyphDelta","GlyphVariationData","GlyphVariationDataHeader","Gvar","GvarFlags","LONG_OFFSETS","SharedTuples","TupleVariation","TupleVariationIter","U16Or32","active_tuples_at","all","apply_scalar","axis_count","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compute_scalar","compute_size","contains","cur","default","deltas","difference","empty","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_raw","get","glyph_count","glyph_variation_data","glyph_variation_data_array_offset","glyph_variation_data_offsets","has_deltas_for_all_points","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","next","next","not","partial_cmp","peak","point_numbers","position","read","read","read","read_with_args","read_with_args","remove","serialized_data","serialized_data_offset","shared_tuple_count","shared_tuples","shared_tuples_offset","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_variation_count","tuple_variation_headers","tuples","tuples","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","version","x_delta","y_delta","BOLD","CONDENSED","EXTENDED","Head","ITALIC","MacStyle","OUTLINE","SHADOW","UNDERLINE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","checksum_adjustment","clone","clone_into","cmp","contains","created","default","difference","empty","eq","flags","fmt","fmt","fmt","fmt","fmt","font_direction_hint","font_revision","from","from_bits","from_bits_truncate","from_raw","glyph_data_format","hash","index_to_loc_format","insert","intersection","intersects","into","is_empty","lowest_rec_ppem","mac_style","magic_number","modified","not","partial_cmp","read","remove","sub","sub_assign","to_owned","to_raw","toggle","try_from","try_into","type_id","union","units_per_em","version","x_max","x_min","y_max","y_min","Hhea","advance_width_max","ascender","caret_offset","caret_slope_rise","caret_slope_run","descender","line_gap","metric_data_format","min_left_side_bearing","min_right_side_bearing","number_of_long_metrics","read","version","x_max_extent","Hmtx","LongMetric","advance","advance","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","h_metrics","hash","into","left_side_bearings","partial_cmp","read","read_with_args","side_bearing","side_bearing","to_owned","try_from","try_into","type_id","Hvar","advance_width_delta","advance_width_mapping","advance_width_mapping_offset","item_variation_store","item_variation_store_offset","lsb_delta","lsb_mapping","lsb_mapping_offset","read","rsb_delta","rsb_mapping","rsb_mapping_offset","version","ChainedClassSequenceRule","ChainedClassSequenceRuleSet","ChainedSequenceContext","ChainedSequenceContextFormat1","ChainedSequenceContextFormat2","ChainedSequenceContextFormat3","ChainedSequenceRule","ChainedSequenceRuleSet","CharacterVariant","CharacterVariantParams","ClassDef","ClassDefFormat1","ClassDefFormat2","ClassRangeRecord","ClassSequenceRule","ClassSequenceRuleSet","ConditionFormat1","ConditionSet","CoverageFormat1","CoverageFormat2","CoverageTable","DeltaFormat","Device","Device","DeviceOrVariationIndex","Feature","FeatureList","FeatureParams","FeatureRecord","FeatureTableSubstitution","FeatureTableSubstitutionRecord","FeatureVariationRecord","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LangSys","LangSysRecord","Local2BitDeltas","Local4BitDeltas","Local8BitDeltas","Lookup","LookupFlag","LookupList","RangeRecord","Script","ScriptList","ScriptRecord","SequenceContext","SequenceContextFormat1","SequenceContextFormat2","SequenceContextFormat3","SequenceLookupRecord","SequenceRule","SequenceRuleSet","Size","SizeParams","StylisticSet","StylisticSetParams","VariationIndex","VariationIndex","VariationIndex","alternate_feature","alternate_feature_offset","alternate_feature_offset","axis_index","backtrack_class_def","backtrack_class_def_offset","backtrack_coverage_offsets","backtrack_coverages","backtrack_glyph_count","backtrack_glyph_count","backtrack_glyph_count","backtrack_sequence","backtrack_sequence","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chained_class_seq_rule_count","chained_class_seq_rule_offsets","chained_class_seq_rule_set_count","chained_class_seq_rule_set_offsets","chained_class_seq_rule_sets","chained_class_seq_rules","chained_seq_rule_count","chained_seq_rule_offsets","chained_seq_rule_set_count","chained_seq_rule_set_offsets","chained_seq_rule_sets","chained_seq_rules","char_count","character","class","class","class_def","class_def_offset","class_format","class_format","class_range_count","class_range_records","class_seq_rule_count","class_seq_rule_offsets","class_seq_rule_set_count","class_seq_rule_set_offsets","class_seq_rule_sets","class_seq_rules","class_value_array","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","condition_count","condition_offsets","condition_set","condition_set_offset","condition_set_offset","conditions","coverage","coverage","coverage","coverage","coverage_format","coverage_format","coverage_offset","coverage_offset","coverage_offset","coverage_offset","coverage_offsets","coverages","default","default","default_lang_sys","default_lang_sys_offset","delta_format","delta_format","delta_set_inner_index","delta_set_outer_index","delta_value","design_size","empty","end_glyph_id","end_glyph_id","end_glyph_id","end_glyph_id","end_size","eq","eq","eq","eq","eq","feat_ui_label_name_id","feat_ui_tooltip_text_name_id","feature","feature_count","feature_index","feature_index","feature_index_count","feature_indices","feature_offset","feature_offset","feature_params","feature_params_offset","feature_records","feature_table_substitution","feature_table_substitution_offset","feature_table_substitution_offset","feature_tag","feature_tag","feature_variation_record_count","feature_variation_records","filter_range_max_value","filter_range_min_value","first_param_ui_label_name_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_truncate","from_raw","from_raw","get","get","get","get","get","get","get_subtable","glyph_array","glyph_count","glyph_count","glyph_count","glyph_count","glyph_count","hash","hash","hash","hash","hash","identifier","ignore_base_glyphs","ignore_ligatures","ignore_marks","input_class_def","input_class_def_offset","input_coverage_offsets","input_coverages","input_glyph_count","input_glyph_count","input_glyph_count","input_sequence","input_sequence","input_sequence","input_sequence","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iter","iter","iter","iter","iter","lang_sys","lang_sys_count","lang_sys_offset","lang_sys_offset","lang_sys_records","lang_sys_tag","lang_sys_tag","lookahead_class_def","lookahead_class_def_offset","lookahead_coverage_offsets","lookahead_coverages","lookahead_glyph_count","lookahead_glyph_count","lookahead_glyph_count","lookahead_sequence","lookahead_sequence","lookup_count","lookup_flag","lookup_index_count","lookup_list_index","lookup_list_index","lookup_list_indices","lookup_offsets","lookup_type","lookups","mark_attachment_type_mask","mark_filtering_set","name_entry","new","num_named_parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range_count","range_end","range_records","range_start","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","read_with_args","required_feature_index","right_to_left","sample_text_name_id","script","script_count","script_offset","script_offset","script_records","script_tag","script_tag","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_count","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_lookup_records","seq_rule_count","seq_rule_offsets","seq_rule_set_count","seq_rule_set_offsets","seq_rule_sets","seq_rules","sequence_index","sequence_index","set_ignore_base_glyphs","set_ignore_ligatures","set_ignore_marks","set_mark_attachment_type","set_right_to_left","set_use_mark_filtering_set","start_coverage_index","start_coverage_index","start_glyph_id","start_glyph_id","start_glyph_id","start_glyph_id","start_glyph_id","start_size","sub_table_count","substitution_count","substitutions","subtable_offsets","subtables","to_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_name_id","use_mark_filtering_set","version","version","version","Loca","Long","Short","borrow","borrow_mut","clone","clone_into","from","get_glyf","get_raw","into","is_empty","len","read","read_with_args","to_owned","try_from","try_into","type_id","Maxp","max_component_depth","max_component_elements","max_composite_contours","max_composite_points","max_contours","max_function_defs","max_instruction_defs","max_points","max_size_of_instructions","max_stack_elements","max_storage","max_twilight_points","max_zones","num_glyphs","read","version","Mvar","ValueRecord","borrow","borrow_mut","clone","clone_into","cmp","delta_set_inner_index","delta_set_inner_index","delta_set_outer_index","delta_set_outer_index","eq","fmt","from","hash","into","item_variation_store","item_variation_store_offset","metric_delta","partial_cmp","read","tags","to_owned","try_from","try_into","type_id","value_record_count","value_record_size","value_records","value_tag","value_tag","version","CPHT","GSP0","GSP1","GSP2","GSP3","GSP4","GSP5","GSP6","GSP7","GSP8","GSP9","HASC","HCLA","HCLD","HCOF","HCRN","HCRS","HDSC","HLGP","SBXO","SBXS","SBYO","SBYS","SPXO","SPXS","SPYO","SPYS","STRO","STRS","UNDO","UNDS","VASC","VCOF","VCRN","VCRS","VDSC","VLGP","XHGT","COMPATIBLE_FULL_NAME","COPYRIGHT_NOTICE","CharIter","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","Encoding","FAMILY_NAME","FULL_NAME","LICENSE_DESCRIPTION","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","LangTagRecord","MANUFACTURER","MacRoman","MacRomanMapping","Name","NameId","NameRecord","NameString","POSTSCRIPT_CID_NAME","POSTSCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY_NAME","TRADEMARK","TYPOGRAPHIC_FAMILY_NAME","TYPOGRAPHIC_SUBFAMILY_NAME","UNIQUE_ID","Unknown","Utf16Be","VARIATIONS_POSTSCRIPT_NAME_PREFIX","VENDOR_URL","VERSION_STRING","WWS_FAMILY_NAME","WWS_SUBFAMILY_NAME","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chars","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","count","decode","default","encode","encoding_id","encoding_id","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","hash","into","into","into","into","into","into","into","into_iter","into_iter","lang_tag","lang_tag_count","lang_tag_offset","lang_tag_offset","lang_tag_record","language_id","language_id","length","length","length","length","name_id","name_id","name_record","new","new","next","partial_cmp","platform_id","platform_id","predefined","read","storage_offset","string","string_data","string_offset","string_offset","to_be_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_string","to_string","to_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","BOLD","ITALIC","NEGATIVE","OBLIQUE","OUTLINED","Os2","REGULAR","STRIKEOUT","SelectionFlags","UNDERSCORE","USE_TYPO_METRICS","WWS","ach_vend_id","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","contains","default","difference","empty","eq","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_raw","fs_selection","fs_type","hash","insert","intersection","intersects","into","is_empty","not","panose_10","partial_cmp","read","remove","s_cap_height","s_family_class","s_typo_ascender","s_typo_descender","s_typo_line_gap","sub","sub_assign","sx_height","to_owned","to_raw","toggle","try_from","try_into","type_id","ul_code_page_range_1","ul_code_page_range_2","ul_unicode_range_1","ul_unicode_range_2","ul_unicode_range_3","ul_unicode_range_4","union","us_break_char","us_default_char","us_first_char_index","us_last_char_index","us_lower_optical_point_size","us_max_context","us_upper_optical_point_size","us_weight_class","us_width_class","us_win_ascent","us_win_descent","version","x_avg_char_width","y_strikeout_position","y_strikeout_size","y_subscript_x_offset","y_subscript_x_size","y_subscript_y_offset","y_subscript_y_size","y_superscript_x_offset","y_superscript_x_size","y_superscript_y_offset","y_superscript_y_size","DEFAULT_GLYPH_NAMES","PString","Post","as_str","borrow","borrow_mut","clone","clone_into","deref","eq","eq","fmt","from","glyph_name","glyph_name_index","into","is_fixed_pitch","italic_angle","max_mem_type1","max_mem_type42","min_mem_type1","min_mem_type42","num_glyphs","num_names","read","read","read_with_args","string_data","to_owned","try_from","try_into","type_id","underline_position","underline_thickness","version","BlendState","CharstringNestingDepthLimitExceeded","Error","ExpectedI32StackEntry","FdSelect","FdSelectFormat0","FdSelectFormat3","FdSelectFormat4","FdSelectRange3","FdSelectRange4","Fixed","Format0","Format1","Format2","Format3","Format4","I32","Index","Index1","Index2","InvalidCharstringOperator","InvalidDictOperator","InvalidIndexOffsetSize","InvalidNumber","InvalidStackAccess","InvalidVariationStoreIndex","Latin1String","MissingBlendState","MissingCharstrings","MissingPrivateDict","MissingSubroutines","Number","Read","STANDARD_STRINGS","Stack","StackOverflow","StackUnderflow","StringId","ZeroOffsetInIndex","apply_blend","apply_delta_prefix_sum","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chars","charstring","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","count","count","count","data","data","default","dict","eq","eq","eq","eq","eq","eq","fd","fd","fd","fd","fds","first","first","first","first","fixed_array","fixed_values","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_index","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get_fixed","get_i32","get_offset","get_offset","get_offset","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","is_empty","len","len_is_odd","n_ranges","n_ranges","new","new","new","new","new","number_values","off_size","off_size","offsets","offsets","partial_cmp","partial_cmp","partial_cmp","pop_fixed","pop_i32","push","ranges","ranges","read","read","read","read","read","read","read_with_args","region_count","reverse","scalars","sentinel","sentinel","set_store_index","size_in_bytes","size_in_bytes","size_in_bytes","standard_string","subr_bias","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_at_least_len","verify_exact_len","CommandSink","NESTING_DEPTH_LIMIT","PenSink","borrow","borrow_mut","close","close","counter_mask","curve_to","curve_to","evaluate","from","hint_mask","hstem","into","line_to","line_to","move_to","move_to","new","try_from","try_into","type_id","vstem","BaseFontBlend","BaseFontBlend","BaseFontName","BaseFontName","Blend","BlueFuzz","BlueFuzz","BlueScale","BlueScale","BlueShift","BlueShift","BlueValues","BlueValues","Blues","Charset","Charset","CharstringType","CharstringType","CharstringsOffset","CharstringsOffset","CidCount","CidCount","CidFontRevision","CidFontRevision","CidFontType","CidFontType","CidFontVersion","CidFontVersion","Copyright","Copyright","DefaultWidthX","DefaultWidthX","Encoding","Encoding","Entry","ExpansionFactor","ExpansionFactor","FamilyBlues","FamilyBlues","FamilyName","FamilyName","FamilyOtherBlues","FamilyOtherBlues","FdArrayOffset","FdArrayOffset","FdSelectOffset","FdSelectOffset","FontBbox","FontBbox","FontMatrix","FontMatrix","FontName","FontName","ForceBold","ForceBold","FullName","FullName","InitialRandomSeed","InitialRandomSeed","IsFixedPitch","IsFixedPitch","ItalicAngle","ItalicAngle","LanguageGroup","LanguageGroup","NominalWidthX","NominalWidthX","Notice","Notice","Operand","Operator","Operator","OtherBlues","OtherBlues","PaintType","PaintType","PostScript","PostScript","PrivateDictRange","PrivateDictRange","Ros","Ros","StdHw","StdHw","StdVw","StdVw","StemSnapH","StemSnapH","StemSnapV","StemSnapV","StemSnaps","StrokeWidth","StrokeWidth","SubrsOffset","SubrsOffset","SyntheticBase","SyntheticBase","Token","UidBase","UidBase","UnderlinePosition","UnderlinePosition","UnderlineThickness","UnderlineThickness","UniqueId","UniqueId","VariationStoreIndex","VariationStoreIndex","VariationStoreOffset","VariationStoreOffset","Version","Version","Weight","Weight","Xuid","Xuid","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","entries","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","new","to_owned","to_owned","to_owned","to_owned","to_owned","tokens","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","values","ordering","registry","supplement","ALWAYS_SET","DRAW_OUTLINES","GlyphData","HeaderFlags","Sbix","Strike","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","contains","data","default","difference","empty","eq","flags","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_raw","glyph_data","glyph_data_offsets","graphic_type","hash","insert","intersection","intersects","into","is_empty","not","num_strikes","origin_offset_x","origin_offset_y","partial_cmp","ppem","ppi","read","read","read","read_with_args","read_with_args","remove","strike_offsets","strikes","sub","sub_assign","to_owned","to_raw","toggle","try_from","try_into","type_id","union","version","AxisRecord","AxisValue","AxisValueArray","AxisValueFormat1","AxisValueFormat2","AxisValueFormat3","AxisValueFormat4","AxisValueRecord","AxisValueTableFlags","ELIDABLE_AXIS_VALUE_NAME","Format1","Format2","Format3","Format4","OLDER_SIBLING_FONT_ATTRIBUTE","Stat","all","axis_count","axis_index","axis_index","axis_index","axis_index","axis_index","axis_name_id","axis_name_id","axis_ordering","axis_ordering","axis_tag","axis_tag","axis_value_count","axis_value_offsets","axis_values","axis_values","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","contains","default","design_axes","design_axes_offset","design_axis_count","design_axis_size","difference","elided_fallback_name_id","empty","eq","eq","eq","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","from","from","from","from","from_bits","from_bits_truncate","from_raw","hash","hash","hash","insert","intersection","intersects","into","into","into","into","is_empty","linked_value","nominal_value","not","offset_to_axis_value_offsets","offset_to_axis_values","partial_cmp","partial_cmp","partial_cmp","range_max_value","range_min_value","read","read","read","read","read","read","read","read_with_args","read_with_args","remove","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","value","value","value","value","value_name_id","value_name_id","value_name_id","value_name_id","version","COUNT_MASK","DeltaRunIter","DeltaSetIndex","DeltaSetIndexMap","DeltaSetIndexMapFormat0","DeltaSetIndexMapFormat1","EMBEDDED_PEAK_TUPLE","EntryFormat","FloatItemDelta","FloatItemDeltaTarget","Format0","Format1","INNER_INDEX_BIT_COUNT_MASK","INTERMEDIATE_REGION","ItemVariationData","ItemVariationStore","MAP_ENTRY_SIZE_MASK","PRIVATE_POINT_NUMBERS","PackedDeltas","PackedPointNumbers","PackedPointNumbersIter","RegionAxisCoordinates","SHARED_POINT_NUMBERS","TUPLE_INDEX_MASK","Tuple","TupleIndex","TupleVariationCount","TupleVariationHeader","TupleVariationHeaderIter","VariationRegion","VariationRegionList","ZERO","all","apply_float_delta","axis_count","bit_count","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","compute_delta","compute_float_delta","compute_scalar","compute_scalar_f32","compute_size","compute_size","contains","count","count","default","default","default","default","default","delta_set","delta_sets","difference","embedded_peak_tuple","empty","end_coord","end_coord","entry_format","entry_format","entry_size","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_raw","from_raw","from_raw","get","get","hash","hash","hash","hash","hash","hash","inner","insert","intermediate_end_tuple","intermediate_region","intermediate_start_tuple","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","item_count","item_variation_data","item_variation_data_count","item_variation_data_offsets","iter","len","map_count","map_count","map_data","map_data","next","next","next","not","outer","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peak_coord","peak_coord","peak_tuple","private_point_numbers","read","read","read","read","read","read","read","read","read","read_with_args","read_with_args","read_with_args","read_with_args","region_axes","region_axes","region_count","region_index_count","region_indexes","remove","shared_point_numbers","size_hint","split_off_front","start_coord","start_coord","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_index","tuple_records_index","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","values","values","variation_data_size","variation_region_list","variation_region_list_offset","variation_regions","word_delta_count","Vhea","advance_height_max","ascender","caret_offset","caret_slope_rise","caret_slope_run","descender","line_gap","metric_data_format","min_bottom_side_bearing","min_top_side_bearing","number_of_long_ver_metrics","read","version","y_max_extent","LongMetric","Vmtx","read","read_with_args","top_side_bearings","v_metrics","Vvar","advance_height_delta","advance_height_mapping","advance_height_mapping_offset","bsb_delta","bsb_mapping","bsb_mapping_offset","item_variation_store","item_variation_store_offset","read","tsb_delta","tsb_mapping","tsb_mapping_offset","v_org_delta","v_org_mapping","v_org_mapping_offset","version"],"q":[[0,"read_fonts"],[1416,"read_fonts::array"],[1446,"read_fonts::tables"],[1482,"read_fonts::tables::avar"],[1530,"read_fonts::tables::base"],[1661,"read_fonts::tables::bitmap"],[2020,"read_fonts::tables::cbdt"],[2025,"read_fonts::tables::cblc"],[2031,"read_fonts::tables::cff"],[2060,"read_fonts::tables::cff2"],[2086,"read_fonts::tables::cmap"],[2424,"read_fonts::tables::colr"],[3058,"read_fonts::tables::cpal"],[3145,"read_fonts::tables::ebdt"],[3150,"read_fonts::tables::eblc"],[3156,"read_fonts::tables::fvar"],[3220,"read_fonts::tables::gdef"],[3329,"read_fonts::tables::glyf"],[3624,"read_fonts::tables::glyf::Anchor"],[3628,"read_fonts::tables::gpos"],[4117,"read_fonts::tables::gsub"],[4271,"read_fonts::tables::gvar"],[4426,"read_fonts::tables::head"],[4498,"read_fonts::tables::hhea"],[4513,"read_fonts::tables::hmtx"],[4538,"read_fonts::tables::hvar"],[4552,"read_fonts::tables::layout"],[5088,"read_fonts::tables::loca"],[5107,"read_fonts::tables::maxp"],[5124,"read_fonts::tables::mvar"],[5156,"read_fonts::tables::mvar::tags"],[5194,"read_fonts::tables::name"],[5352,"read_fonts::tables::os2"],[5449,"read_fonts::tables::post"],[5484,"read_fonts::tables::postscript"],[5724,"read_fonts::tables::postscript::charstring"],[5748,"read_fonts::tables::postscript::dict"],[5934,"read_fonts::tables::postscript::dict::Entry"],[5937,"read_fonts::tables::sbix"],[6006,"read_fonts::tables::stat"],[6160,"read_fonts::tables::variations"],[6489,"read_fonts::tables::vhea"],[6504,"read_fonts::tables::vmtx"],[6510,"read_fonts::tables::vvar"],[6527,"font_types::tag"],[6528,"font_types::glyph_id"],[6529,"font_types::fixed"],[6530,"font_types::fixed"],[6531,"core::option"],[6532,"font_types::offset"],[6533,"font_types::offset"],[6534,"font_types::raw"],[6535,"font_types::offset"],[6536,"core::clone"],[6537,"font_types::raw"],[6538,"core::iter::traits::iterator"],[6539,"font_types::longdatetime"],[6540,"core::fmt"],[6541,"core::fmt"],[6542,"core::convert"],[6543,"core::ops::range"],[6544,"font_types::point"],[6545,"core::ops::range"],[6546,"core::any"],[6547,"font_types::version"],[6548,"font_types::version"],[6549,"core::fmt"]],"d":["","An array of nullable offsets that can be resolved on …","An array of offsets that can be resolved on access.","A collection of fonts.","Reference to the content of a font collection file.","A type that can compute its size at runtime, based on some …","Reference to the content of a font or font collection file.","A single font.","A reference to raw binary font data.","A type that can be read from raw table data.","A trait for types that require external data in order to …","Reference to an in-memory font.","A marker trait for types that can read from a big-endian …","","","","","","","","","Any offset type.","","A trait for a type that needs additional arguments to be …","An error that occurs when reading font data","A helper trait providing a ‘resolve’ method for …","A helper trait providing a ‘resolve’ method for offset …","The type of the first (length) field of the item.","The table’s tag.","TTC Header","The OpenType Table Directory","","An interface for accessing tables from a font (or …","Record for a table in a font.","Typed access to raw table data.","A table that has an associated tag.","","A trait for types that have variable length.","Padding bytes before the start of the Top DICT.","Padding bytes before the start of the Name INDEX.","Font Vendor Identification.","Add to indexSubTableArrayOffset to get offset from …","Returns the advance height delta for the specified glyph …","Attempt to resolve <code>advance_height_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Maximum advance height value in ‘vmtx’ table.","Returns the advance width delta for the specified glyph …","Attempt to resolve <code>advance_width_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Maximum advance width value in ‘hmtx’ table.","Alpha value. For variation, use varIndexBase + 0.","Alpha value.","Array of alternate glyph IDs, in arbitrary order","Number of AlternateSet tables","Array of offsets to AlternateSet tables. Offsets are from …","A dynamically resolving wrapper for <code>alternate_set_offsets</code>.","Format identifier, = 1","Format identifier, = 2","Format identifier, = 3","Index to glyph contour point","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Custom array types","Return the data as a byte slice","","Typographic ascent.","Typographic ascent.","Attempt to resolve <code>attach_list_offset</code>.","Offset to attachment point list table, from beginning of …","Array of offsets to AttachPoint tables-from beginning of …","A dynamically resolving wrapper for <code>attach_point_offsets</code>.","","","Variation axis record array.","Returns the array of variation axis records.","The total number of axes contributing to this axis-values …","The number of variation axes for this font. This must be …","The number of variation axes for this font. This must be …","The number of variation axes for this font. This must be …","The number of variation axes in the font (the number of …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","Index (zero-based) for the variation axis within the ‘…","Attempt to resolve <code>axis_instance_arrays_offset</code>.","Offset in bytes from the beginning of the table to the …","The segment maps array — one segment map for each axis, …","The size in bytes of each VariationAxisRecord — set to …","The number of axis value tables.","Array of offsets to axis value tables, in bytes from the …","A dynamically resolving wrapper for <code>axis_value_offsets</code>.","Array of AxisValue records that provide the combination of …","Attempt to resolve <code>backdrop_paint_offset</code>.","Offset to a backdrop Paint table.","Attempt to resolve <code>backtrack_class_def_offset</code>.","Offset to ClassDef table containing backtrack sequence …","Array of offsets to coverage tables in backtrack sequence, …","Array of offsets to coverage tables for the backtrack …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","Number of glyphs in the backtrack sequence.","Number of glyphs in the backtrack sequence","Number of glyphs in the backtrack sequence","Number of glyphs in the backtrack sequence","Array of backtrack glyph IDs","Array of backtrack-sequence classes","Attempt to resolve <code>base_array_offset</code>.","Offset to BaseArray table, from beginning of MarkBasePos …","Number of BaseCoord tables defined — should equal …","Format identifier — format = 3","Format identifier — format = 2","Format identifier — format = 1","Array of offsets to BaseCoord tables, from beginning of …","Index of contour point on the reference glyph","A dynamically resolving wrapper for <code>base_coord_offsets</code>.","Number of BaseRecords","Attempt to resolve <code>base_coverage_offset</code>.","Offset to baseCoverage table, from beginning of MarkBasePos","Attempt to resolve <code>base_glyph_list_offset</code>.","Offset to BaseGlyphList table.","","Attempt to resolve <code>base_glyph_records_offset</code>.","Offset to baseGlyphRecords array (may be NULL).","Number of BaseLangSysRecords defined — may be zero (0)","Array of BaseLangSysRecords, in alphabetical order by …","Array of BaseRecords, in order of baseCoverage Index.","Number of BaseScriptRecords defined","Attempt to resolve <code>base_script_list_offset</code>.","Offset to BaseScriptList table, from beginning of Axis …","Array of BaseScriptRecords, in alphabetical order by …","Number of baseline identification tags in this text …","Attempt to resolve <code>base_tag_list_offset</code>.","Offset to BaseTagList table, from beginning of Axis table …","Attempt to resolve <code>base_values_offset</code>.","Offset to BaseValues table, from beginning of BaseScript …","Array of 4-byte baseline identification tags — must be in","All glyphs have the same metrics.","All glyphs have the same metrics; glyph data may be …","BitmapSize records array.","BitmapSize records array.","","","","","","","","","","","","","","","","","","","Returns the bottom side bearing delta for the specified …","Attempt to resolve <code>bsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Number of CaretValue tables for this ligature (components …","The amount by which a slanted highlight on a glyph needs …","The amount by which a slanted highlight on a glyph needs …","Used to calculate the slope of the cursor (rise/run); 1 for","Used to calculate the slope of the cursor (rise/run); 1 for","0 for vertical caret, 1 for horizontal.","0 for vertical caret, 1 for horizontal.","Format identifier-format = 3","Format identifier: format = 2","Format identifier: format = 1","Array of offsets to CaretValue tables, from beginning of …","Contour point index on glyph","A dynamically resolving wrapper for <code>caret_value_offsets</code>.","","","","","x coordinate for the center of rotation.","x coordinate for the center of scaling.","x coordinate for the center of rotation.","x coordinate for the center of scaling. For variation, use …","Center x coordinate. For variation, use varIndexBase + 0.","x coordinate for the center of rotation. For variation, use","x coordinate for the center of rotation. For variation, use","x coordinate for the center of scaling. For variation, use …","Center x coordinate.","x coordinate for the center of scaling.","y coordinate for the center of rotation.","y coordinate for the center of scaling. For variation, use …","y coordinate for the center of scaling.","y coordinate for the center of rotation.","Center y coordinate. For variation, use varIndexBase + 1.","y coordinate for the center of scaling. For variation, use …","Center y coordinate.","y coordinate for the center of rotation. For variation, use","y coordinate for the center of rotation. For variation, use","y coordinate for the center of scaling.","","","","","Number of ChainedClassSequenceRule tables","Array of offsets to ChainedClassSequenceRule tables, from …","Number of ChainedClassSequenceRuleSet tables","Array of offsets to ChainedClassSequenceRuleSet tables, …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","Number of ChainedSequenceRule tables","Array of offsets to ChainedSequenceRule tables, from …","Number of ChainedSequenceRuleSet tables","Array of offsets to ChainedSeqRuleSet tables, from …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","The count of characters for which this feature provides …","The Unicode Scalar Value of the characters for which this …","Checksum for the table.","Checksum for the table.","To compute: set it to 0, sum the entire font as uint32, …","Number of classes in classDef1 table — includes Class 0.","Array of Class1 records, ordered by classes in classDef1.","Number of classes in classDef2 table — includes Class 0.","Attempt to resolve <code>class_def_offset</code>.","Attempt to resolve <code>class_def1_offset</code>.","Offset to ClassDef table, from beginning of PairPos …","Attempt to resolve <code>class_def2_offset</code>.","Offset to ClassDef table, from beginning of PairPos …","Offset to ClassDef table, from beginning of …","Format identifier — format = 1","Format identifier — format = 2","Number of ClassRangeRecords","Array of ClassRangeRecords — ordered by startGlyphID","Number of ClassSequenceRule tables","Array of offsets to ClassSequenceRule tables, from …","Number of ClassSequenceRuleSet tables","Array of offsets to ClassSequenceRuleSet tables, from …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for <code>class_seq_rule_offsets</code>.","Array of Class Values — one per glyph ID","Attempt to resolve <code>clip_list_offset</code>.","Offset to ClipList table (may be NULL).","Clip records. Sorted by startGlyphID.","","","","","","","","","","","","","","","","","","","","","","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Offset to VarColorLine table.","Offset to ColorLine table.","Offset to ColorLine table.","Offset to VarColorLine table.","Offset to ColorLine table.","Offset to VarColorLine table.","Index of each palette’s first color record in the …","Attempt to resolve <code>color_records_array_offset</code>.","Offset from the beginning of CPAL table to the first …","","Allows for variations.","","","Number of ComponentRecords in this ligature","Number of components in the ligature","component flag glyph index of component","Array of component glyph IDs — start with the second …","Returns an iterator that yields the glyph identifier and …","Array of Component records, ordered in writing direction.","Returns an iterator over the components of the composite …","A CompositeMode enumeration value.","Computes the delta value for the specified index and set …","Computes the delta value in floating point for the …","Compute the number of bytes required to represent this …","Number of conditions for this condition set.","Array of offsets to condition tables, from beginning of the","A dynamically resolving wrapper for <code>condition_offsets</code>.","X or Y value, in design units","X or Y value, in design units","X or Y value, in design units","X or Y value, in design units","X or Y value, in design units","Number of name records.","Number of objects stored in INDEX.","Number of objects stored in INDEX.","Returns the component count and TrueType interpreter …","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Format identifier — format = 1","Format identifier — format = 2","Offset to Coverage table, from beginning of SinglePos …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of CursivePos …","Offset to Coverage table - from beginning of LigCaretList …","Offset to Coverage table, from beginning of PairPos …","Offset to Coverage table, from beginning of SinglePos …","Offset to Coverage table, from beginning of …","Offset to Coverage table - from beginning of AttachList …","Offset to Coverage table, from beginning of PairPos …","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of substitution …","Array of offsets to mark glyph set coverage tables, from …","Array of offsets to Coverage tables, from beginning of …","A dynamically resolving wrapper for <code>coverage_offsets</code>.","A dynamically resolving wrapper for <code>coverage_offsets</code>.","","","Number of seconds since 12:00 midnight that started …","The actual embedded graphic data. The total length is …","Array containing the object data.","","","Array containing the object data.","","","","Index number of default baseline for this script — equals","Attempt to resolve <code>default_lang_sys_offset</code>.","Offset to default LangSys table, from beginning of Script …","Attempt to resolve <code>default_min_max_offset</code>.","Offset to MinMax table, from beginning of BaseScript table …","Format of deltaValue array data: 0x0001, 0x0002, or 0x0003","Format, = 0x8000","Add to original glyph ID to get substitute glyph ID","Returns an iterator over the per-region delta values for …","A delta-set inner index — used to select a delta-set row …","A delta-set outer index — used to select an item …","Delta-set rows.","Array of compressed data","Typographic descent.","Typographic descent.","Attempt to resolve <code>design_axes_offset</code>.","Offset in bytes from the beginning of the STAT table to the","The number of axis records. In a font with an ‘fvar’ …","The size in bytes of each axis record.","The first value represents the design size in 720/inch …","Attempt to resolve <code>device_offset</code>.","Attempt to resolve <code>device_offset</code>.","Offset to Device table (non-variable font) / Variation …","Offset to Device table (non-variable font) / Variation …","The length (in bytes) of the DSIG table (null if no …","The length (in bytes) of the DSIG table (null if no …","The offset (in bytes) of the DSIG table from the beginning …","The offset (in bytes) of the DSIG table from the beginning …","Tag indicating that a DSIG table exists, 0x44534947 (‘…","Tag indicating that a DSIG table exists, 0x44534947 (‘…","Translation in x direction. For variation, use …","Translation in x direction.","Translation in x direction. For variation, use …","Translation in x direction.","Translation in y direction.","Translation in y direction. For variation, use …","Translation in y direction.","Translation in y direction. For variation, use …","","","","","Name ID used as fallback when projection of names into a …","","End of the angular range of the gradient, 180° in …","End of the angular range of the gradient, 180° in …","End characterCode for each segment, last=0xFFFF.","Array of point indices for the last point of each contour, …","Largest size to correct, in ppem","Number of character codes in subrange.","Number of EntryExit records","Array of EntryExit records, in Coverage index order.","A packed field that describes the compressed …","A packed field that describes the compressed …","","Log2 of the maximum power of 2 less than or equal to …","","","","","","","An Extend enum value.","An Extend enum value.","Attempt to resolve <code>extension_offset</code>.","Attempt to resolve <code>extension_offset</code>.","Lookup type of subtable referenced by extensionOffset …","Lookup type of subtable referenced by extensionOffset …","Offset to the extension subtable, of lookup type …","Offset to the extension subtable, of lookup type …","FD selector array (one entry for each glyph).","Number of FeatMinMaxRecords — may be zero (0)","Array of FeatMinMaxRecords, in alphabetical order by …","The ‘name’ table name ID that specifies a string (or …","The ‘name’ table name ID that specifies a string (or …","Number of FeatureRecords in this table","Number of feature index values for this language system —","Array of indices into the FeatureList, in arbitrary order","Attempt to resolve <code>feature_list_offset</code>.","Attempt to resolve <code>feature_list_offset</code>.","Offset to FeatureList table, from beginning of GSUB table","Offset to FeatureList table, from beginning of GPOS table","Attempt to resolve <code>feature_params_offset</code>.","Offset from start of Feature table to FeatureParams table, …","Array of FeatureRecords — zero-based (first feature has …","Number of feature variation records.","Array of feature variation records.","Attempt to resolve <code>feature_variations_offset</code>.","Attempt to resolve <code>feature_variations_offset</code>.","Offset to FeatureVariations table, from beginning of the …","","Maximum value of the font variation instances that satisfy …","Minimum value of the font variation instances that satisfy …","First character code of subrange.","First glyph ID of this range.","Index (base 0) into the LayerList.","The first ‘name’ table name ID used to specify strings …","See the flags enum","Flags — see below for details.","Bit-field that gives the format of the offset array that …","Flags — see below for details.","Flags — see below for details.","Flags — see below for details.","Bit 0: Set to 1. Bit 1: Draw outlines. Bits 2 to 15: …","","","","","Deprecated (Set to 2).","Set by font manufacturer.","Returns an iterator over the fonts contained in the file.","Set to 1.","Set to 5.","Format number is set to 0.","Set to 2.","Set to 21.","Set to 30.","Set to 27.","Format identifier: format = 1","Subtable format; set to 8.","Set to 3.","Format, = 1","Subtable format; set to 10.","Format identifier: format = 2","Format number is set to 0.","Format number is set to 4.","Set to 4.","Set to 6.","Format identifier: format = 2","Format number is set to 2.","Set to 26.","Format identifier: format = 3","Format number is set to 6.","Set to 7.","Set to 20.","Set to 32.","Subtable format. Set to 14.","Set to 1.","Set to 8.","Set to 9.","Set to 19.","Set to 1.","Set to 2.","Format— set to 1","Set to 18.","Set to 10.","DeltaSetIndexMap format: set to 1.","Set to 11.","DeltaSetIndexMap format: set to 0.","Set to 12.","Set to 13.","Format identifier — set to 4.","Format identifier — set to 3.","Set to 17.","Set to 25.","Format = 0.","Format identifier — set to 2.","Set to 16.","Set to 22.","Subtable format; set to 13.","Format = 3.","Format identifier — set to 1.","Set to 31.","Set to 29.","Format = 4.","Format identifier: format = 3","Subtable format; set to 12.","Set to 28.","Set to 15.","Set to 23.","Format identifier: format = 1","Set to 24.","Set to 14.","Format identifier == 1","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new reference to an in-memory font at the …","Font selection flags.","Type flags.","","","","","Resolve the offset at the provided index.","Resolve the offset at the provided index.","Get the class for this glyph id","If this glyph is in the coverage table, returns its index","Returns the data for the object at the given index.","Returns the data for the object at the given index.","Get the class for this glyph id","If this glyph is in the coverage table, returns its index","Returns the font in the collection at the specified index.","Returns the offset of the object at the given index.","Returns the offset of the object at the given index.","","","","Array of glyph IDs — in numerical order","One per glyph, sorted by glyhph ID.","One per glyph.","Attempt to resolve <code>glyph_class_def_offset</code>.","Offset to class definition table for glyph type, from …","Number of glyph IDs in the substituteGlyphIDs array. This …","Number of glyph IDs in the substituteGlyphIDs array.","Number of glyphs in the input sequence","Number of glyphs to be matched","Size of the classValueArray","Number of glyphs in the glyph array","Number of glyphs with attachment points","Number of glyph IDs in the alternateGlyphIDs array","The number of glyphs in this font. This must match the …","Number of glyph IDs in the substituteGlyphIDs array","Number of glyphs in the input glyph sequence","","the raw data for flags &amp; x/y coordinates","0 for current format.","Offset from the beginning of the strike data header to …","Glyph ID for a BaseGlyphList base glyph.","Glyph ID for the source outline.","An array that maps character codes to glyph index values.","Array of glyph indices for the character codes covered","Glyph index array (arbitrary length)","Array of glyph index values for character codes in the …","","Array of indices into the string data. See below for …","Get the variation data for a specific glyph.","Offset from the start of this table to the array of …","Offsets from the start of the GlyphVariationData array to …","","","Indicates the format of the embedded graphic data: one of …","Array of ConstantMapGroup records.","Array of SequentialMapGroup records.","Array of SequentialMapGroup records.","","","","","Paired advance width/height and left/top side bearing …","Returns true if the contours in the simple glyph may …","","Header size (bytes).","","","Header size (bytes).","","","","","Attempt to resolve <code>horiz_axis_offset</code>.","Offset to horizontal Axis table, from beginning of BASE …","","","Delta for all character codes in segment.","Offsets into glyphIdArray or 0","The second value has no independent meaning, but serves as …","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","All the glyphs are of the same size.","All glyphs have the same data size.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","0 for short offsets (Offset16), 1 for long (Offset32).","Attempt to resolve <code>input_class_def_offset</code>.","Offset to ClassDef table containing input sequence context,","Array of offsets to coverage tables for the input sequence","A dynamically resolving wrapper for <code>input_coverage_offsets</code>.","Number of glyphs in the input sequence","Number of glyphs in the input sequence","Total number of glyphs in the input sequence","Array of input glyph IDs—starting with the second glyph","Sequence of classes to be matched to the input glyph …","Array of input sequence classes, beginning with the second …","Array of input glyph IDs—start with second glyph","The number of named instances defined in the font (the …","The size in bytes of each InstanceRecord — set to either …","Instance record array.","Returns the array of instance records.","Total number of bytes for instructions. If …","Returns the TrueType interpreter instructions.","Array of instruction byte code for the glyph.","Intermediate end tuple record for this tuple variation …","Intermediate start tuple record for this tuple variation …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tightly packed array of bits (8K bytes total) indicating …","<code>true</code> if the data has a length of zero bytes.","<code>true</code> if the array is empty","<code>true</code> if the array is empty","Returns true if the collection is empty.","Set to 0 if the font is proportionally spaced, non-zero if …","Italic angle in counter-clockwise degrees from the …","The number of delta sets for distinct items.","Attempt to resolve <code>item_var_store_offset</code>.","Attempt to resolve <code>item_var_store_offset</code>.","Offset to the Item Variation Store table, from beginning of","Offset to Item Variation Store table, from beginning of …","A dynamically resolving wrapper for …","The number of item variation data subtables.","Offsets in bytes from the start of the item variation …","Attempt to resolve <code>item_variation_store_offset</code>.","Attempt to resolve <code>item_variation_store_offset</code>.","Attempt to resolve <code>item_variation_store_offset</code>.","Attempt to resolve <code>item_variation_store_offset</code>.","Offset in bytes from the start of this table to the item …","Offset in bytes from the start of this table to the item …","Offset to ItemVariationStore (may be NULL).","Offset in bytes from the start of this table to the item …","Iterate over all of the offset targets.","Iterate over all of the offset targets.","Returns an iterator over all (codepoint, selector, mapping …","Iterate over each glyph and its class.","Returns an iterator over all (codepoint, glyph identifier) …","Iterate over each glyph and its class.","Iterate over the decoded values for this device","Returns an iterator over all (codepoint, glyph identifier) …","Returns an iterator over the fonts in the collection.","Number of LangSysRecords for this script — excluding the …","Array of LangSysRecords, listed alphabetically by LangSys …","Number of language-tag records.","The language-tag records where langTagCount is the number …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","Last glyph ID of this range (inclusive).","Attempt to resolve <code>layer_list_offset</code>.","Offset to LayerList table (may be NULL).","Attempt to resolve <code>layer_records_offset</code>.","Offset to layerRecords array (may be NULL).","Leading (left/top) side bearings for glyph IDs greater …","The length of the data, in bytes","The number of offsets in the array","The number of offsets in the array","Returns the number of fonts in the collection.","This is the length in bytes of the subtable.","Byte length of this subtable (including the header)","Byte length of this subtable (including the header)","This is the length in bytes of the subtable.","Byte length of this subtable (including this header)","This is the length in bytes of the subtable.","This is the length in bytes of the subtable.","Byte length of this subtable (including the header)","Byte length of this subtable (including the header)","Length of the table.","Length of the table.","Attempt to resolve <code>lig_caret_list_offset</code>.","Offset to ligature caret list table, from beginning of GDEF","Number of ligature glyphs","Array of offsets to LigGlyph tables, from beginning of …","A dynamically resolving wrapper for <code>lig_glyph_offsets</code>.","Attempt to resolve <code>ligature_array_offset</code>.","Offset to LigatureArray table, from beginning of MarkLigPos","Array of offsets to LigatureAttach tables. Offsets are from","A dynamically resolving wrapper for <code>ligature_attach_offsets</code>…","Number of LigatureAttach table offsets","Number of Ligature tables","Attempt to resolve <code>ligature_coverage_offset</code>.","Offset to ligatureCoverage table, from beginning of …","glyph ID of ligature to substitute","Array of offsets to Ligature tables. Offsets are from …","Number of LigatureSet tables","Array of offsets to LigatureSet tables. Offsets are from …","A dynamically resolving wrapper for <code>ligature_set_offsets</code>.","A dynamically resolving wrapper for <code>ligature_offsets</code>.","Typographic line gap. Negative LineGap values are treated …","Typographic line gap. Negative LineGap values are treated …","The numeric value for a style-linked mapping from this …","is_long can be optionally provided, if known, otherwise we …","is_long can be optionally provided, if known, otherwise we …","Attempt to resolve <code>lookahead_class_def_offset</code>.","Offset to ClassDef table containing lookahead sequence …","Array of offsets to coverage tables in lookahead sequence, …","Array of offsets to coverage tables for the lookahead …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","Number of glyphs in lookahead sequence.","Number of glyphs in the lookahead sequence","Number of glyphs in the lookahead sequence","Number of glyphs in the lookahead sequence","Array of lookahead-sequence classes","Array of lookahead glyph IDs","Number of lookups in this table","Lookup qualifiers","Number of LookupList indices for this feature","Attempt to resolve <code>lookup_list_offset</code>.","Attempt to resolve <code>lookup_list_offset</code>.","Array of indices into the LookupList — zero-based (first …","Offset to LookupList table, from beginning of GSUB table","Offset to LookupList table, from beginning of GPOS table","Array of offsets to Lookup tables, from beginning of …","Different enumerations for GSUB and GPOS","A dynamically resolving wrapper for <code>lookup_offsets</code>.","Smallest readable size in pixels.","Returns the left side bearing delta for the specified …","Attempt to resolve <code>lsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","see somewhere else","Set to 0x5F0F3CF5.","Format major version (starting at 1).","Major version of the EBLC table, = 2.","Major version of the CBDT table, = 3.","Major version of the CBLC table, = 3.","Format major version (set to 2).","Major version of the EBDT table, = 2.","Maps a codepoint to a nominal glyph identifier.","Map a codepoint to a nominal glyph identifier","Maps a codepoint to a nominal glyph identifier.","The number of mapping entries.","The number of mapping entries.","The delta-set index mapping data. See details below.","The delta-set index mapping data. See details below.","Maps a codepoint and variation selector to a nominal glyph …","Attempt to resolve <code>mark1_array_offset</code>.","Offset to MarkArray table for mark1, from beginning of …","Attempt to resolve <code>mark1_coverage_offset</code>.","Offset to Combining Mark Coverage table, from beginning of …","Attempt to resolve <code>mark2_array_offset</code>.","Offset to Mark2Array table for mark2, from beginning of …","Number of Mark2 records","Attempt to resolve <code>mark2_coverage_offset</code>.","Offset to Base Mark Coverage table, from beginning of …","Array of Mark2Records, in Coverage order.","Attempt to resolve <code>mark_array_offset</code>.","Attempt to resolve <code>mark_array_offset</code>.","Offset to MarkArray table, from beginning of MarkLigPos …","Offset to MarkArray table, from beginning of MarkBasePos …","Attempt to resolve <code>mark_attach_class_def_offset</code>.","Offset to class definition table for mark attachment type, …","Number of Combining Mark classes defined","Number of classes defined for marks","Number of defined mark classes","Number of MarkRecords","Attempt to resolve <code>mark_coverage_offset</code>.","Attempt to resolve <code>mark_coverage_offset</code>.","Offset to markCoverage table, from beginning of MarkBasePos","Offset to markCoverage table, from beginning of MarkLigPos …","Index (base 0) into GDEF mark glyph sets structure. This …","Number of mark glyph sets defined","Attempt to resolve <code>mark_glyph_sets_def_offset</code>.","Offset to the table of mark glyph set definitions, from …","Array of MarkRecords, ordered by corresponding glyphs in …","Maximum levels of recursion; 1 for simple components.","Maximum number of components referenced at “top level” …","Maximum contours in a composite glyph.","Maximum points in a composite glyph.","Maximum contours in a non-composite glyph.","Attempt to resolve <code>max_coord_offset</code>.","Offset to BaseCoord table that defines maximum extent …","Number of FDEFs, equal to the highest function number + 1.","Number of IDEFs.","Maximum memory usage when an OpenType font is downloaded …","Maximum memory usage when an OpenType font is downloaded.","Maximum points in a non-composite glyph.","Maximum byte count for glyph instructions.","Maximum stack depth across Font Program (‘fpgm’ …","Number of Storage Area locations.","Maximum points used in Z0.","1 if instructions do not use the twilight zone (Z0), or 2 …","","","0 for current format.","0 for current format.","Returns the metric delta for the specified tag and …","Minimum bottom sidebearing value","Attempt to resolve <code>min_coord_offset</code>.","Offset to BaseCoord table that defines the minimum extent …","Minimum left sidebearing value in ‘hmtx’ table for …","Minimum memory usage when an OpenType font is downloaded …","Minimum memory usage when an OpenType font is downloaded.","Minimum right sidebearing value; calculated as min(aw - …","Minimum top sidebearing value in ‘vmtx’ table for …","Format minor version (starting at 0).","Minor version of EBDT table, = 0.","Minor version of EBLC table, = 0.","Minor version of CBLC table, = 0.","Minor version of CBDT table, = 0.","Format minor version (set to 0).","Number of seconds since 12:00 midnight that started …","","","Number of ranges.","Number of ranges.","","","The third value enables applications to use a single name …","The name records where count is the number of records.","Create a new <code>FontData</code> with these bytes.","Creates a new reference to a file representing a font or …","Creates a new reference to a font collection.","Creates a new reference to an in-memory font backed by the …","A nominal numeric value for this attribute value.","","","","Number of BaseGlyph records; may be 0 in a version 1 table.","Number of character codes covered","Number of Clip records.","Total number of color records, combined for all palettes.","Number of fonts in TTC","Number of fonts in TTC","The number of glyphs in the font.","Array length.","Number of glyphs (this should be the same as numGlyphs in …","Array length.","Number of groupings which follow","Number of groupings which follow","Number of groupings which follow","Number of Layer records; may be 0 in a version 1 table.","","Number of offsets to paint tables to read from LayerList.","Number of named parameters. (May be zero.)","The number of glyph names covered by this table","Number of palette entries in each palette.","Number of palettes in the table.","Returns the total number of points.","Number of BitmapSize records.","Number of BitmapSize records.","Number of ColorStop records.","Number of ColorStop records.","Number of bitmap strikes.","Number of encoding tables that follow.","Number of tables.","Number of tables.","Number of Unicode character ranges.","","Number of variation Selector Records","If the number of contours is greater than or equal to zero,","If the number of contours is greater than or equal to zero,","Number of LongMetric entries in ‘hmtx’/‘vmtx’ table","Number of LongMetric entries in ‘hmtx’/‘vmtx’ table","Object array element size.","Absolute offset size.","Object array element size.","Offset from the beginning of the font data.","Offset from the beginning of the font data.","Return a reference to this table’s raw data.","Offset in bytes from the beginning of the STAT table to the","Attempt to resolve <code>offset_to_axis_value_offsets</code>.","Bytes containing <code>count + 1</code> offsets each of <code>off_size</code>.","Bytes containing <code>count + 1</code> offsets each of <code>off_size</code>.","The horizontal (x-axis) position of the left edge of the …","The vertical (y-axis) position of the bottom edge of the …","","","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint table.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offsets to Paint tables.","A dynamically resolving wrapper for <code>paint_offsets</code>.","Number of PairSet tables","Array of offsets to PairSet tables. Offsets are from …","A dynamically resolving wrapper for <code>pair_set_offsets</code>.","Number of PairValueRecords","Array of PairValueRecords, ordered by glyph ID of the …","Attempt to resolve <code>palette_entry_labels_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Attempt to resolve <code>palette_labels_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","Attempt to resolve <code>palette_types_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","PANOSE classification number.","","Peak tuple record for this tuple variation table — …","Number of attachment points on this glyph","Array of contour point indices -in increasing numerical …","Returns an iterator over the points in the glyph.","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 1","","","The PPEM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","Start circle radius. For variation, use varIndexBase + 2.","Start circle radius.","End circle radius. For variation, use varIndexBase + 5.","End circle radius.","Number of RangeRecords","","The maximum value for a range associated with the specified","The minimum value for a range associated with the specified","Array of glyph ranges — ordered by startGlyphID.","segCount times 2, minus searchRange ((segCount * 2) - …","","","The fourth and fifth values represent the small end of the …","Range3 array.","Range4 array.","Array of UnicodeRange records.","Read an instace of <code>Self</code> from the provided data, performing …","","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","","","Interpret the bytes at the provided offset as a slice of <code>T</code>.","Read a scalar at the provided location in the data.","Read a big-endian value at the provided location in the …","Reads points and flags into the provided buffers.","Interpret the bytes at the provided offset as a reference …","read an item, using the provided args.","","","","Glyph ID of control glyph","The number of variation region tables in the variation …","The number of variation regions referenced.","Array of indices into the variation region list for the …","Index of a feature required for this language system; if no","","","Resolve the provided offset from the start of this table.","","","Returns the left side bearing delta for the specified …","Attempt to resolve <code>rsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","This metric specifies the distance between the baseline …","Font-family class and subclass. This parameter is a …","The typographic ascender for this font.","The typographic descender for this font.","The typographic line gap for this font.","The ‘name’ table name ID that specifies sample text …","","","","","Scale factor in x and y directions.","Scale factor in x and y directions. For variation, use …","Scale factor in x and y directions. For variation, use …","Scale factor in x and y directions.","Scale factor in x direction.","Scale factor in x direction.","Scale factor in x direction. For variation, use …","Scale factor in x direction. For variation, use …","Scale factor in y direction.","Scale factor in y direction.","Scale factor in y direction. For variation, use …","Scale factor in y direction. For variation, use …","Number of ScriptRecords","Attempt to resolve <code>script_list_offset</code>.","Attempt to resolve <code>script_list_offset</code>.","Offset to ScriptList table, from beginning of GPOS table","Offset to ScriptList table, from beginning of GSUB table","Array of ScriptRecords, listed alphabetically by script tag","Maximum power of 2 less than or equal to segCount, times 2 …","","","2 × segCount.","Sentinel GID. Set equal to the number of glyphs in the …","Sentinel GID. Set equal to the number of glyphs in the …","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of Sequence lookup records","Array of SequenceLookupRecords","Number of SequenceRule tables","Array of offsets to SequenceRule tables, from beginning of …","Number of SequenceRuleSet tables","Array of offsets to SequenceRuleSet tables, from beginning …","A dynamically resolving wrapper for <code>seq_rule_set_offsets</code>.","A dynamically resolving wrapper for <code>seq_rule_offsets</code>.","Number of Sequence table offsets in the sequenceOffsets …","Array of offsets to Sequence tables. Offsets are from …","A dynamically resolving wrapper for <code>sequence_offsets</code>.","Attempt to resolve <code>serialized_data_offset</code>.","Offset from the start of the GlyphVariationData table to …","0x00010000 or 0x4F54544F","0x00010000 or 0x4F54544F","The number of shared tuple records. Shared tuple records …","Attempt to resolve <code>shared_tuples_offset</code>.","Offset from the start of this table to the shared tuple …","Returns the total size in bytes of the index table.","Returns the total size in bytes of the index table.","","Attempt to resolve <code>source_paint_offset</code>.","Offset to a source Paint table.","Returns self[pos..]","Start of the angular range of the gradient, 180° in …","Start of the angular range of the gradient, 180° in …","First character code covered","Start character code for each segment.","First glyph ID of the classValueArray","Smallest size to correct, in ppem","","","Offset to start of string storage (from start of table).","Offsets from the beginning of the ‘sbix’ table to data …","A dynamically resolving wrapper for <code>strike_offsets</code>.","Storage for the string data.","The FontData containing the encoded name strings.","Array that maps high bytes to subHeaders: value is …","Number of subtables for this lookup","Format identifier: format = 2","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier. Set to 1.","Format identifier: format = 1","String of glyph IDs to substitute","Array of substitute glyph IDs — ordered by Coverage …","Array of substitute glyph IDs — ordered by Coverage index","Number of feature table substitution records.","Array of feature table substitution records.","Array of offsets to lookup subtables, from beginning of …","A dynamically resolving wrapper for <code>subtable_offsets</code>.","This metric specifies the distance between the baseline …","Returns the data for the table with the specified tag, if …","","Array of offsets to the TableDirectory for each font from …","Array of offsets to the TableDirectory for each font from …","Table records array—one for each top-level table in the …","Table records array—one for each top-level table in the …","The various font tables","Table identifier.","Table identifier.","returns self[..pos], and updates self to = self[pos..];","","","","","","","","","","","","Data containing the Top DICT.","Length of Top DICT structure in bytes.","Top side bearings for glyph IDs greater than or equal to …","Remaining table data.","Remaining table data.","Attempt to resolve <code>transform_offset</code>.","Attempt to resolve <code>transform_offset</code>.","Offset to an Affine2x3 table.","Offset to a VarAffine2x3 table.","","","","","","","","","","","","","","","","","","","Returns the top side bearing delta for the specified glyph …","Attempt to resolve <code>tsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Font Collection ID string: &quot;ttcf&quot;","Font Collection ID string: &quot;ttcf&quot;","A packed field. The high 4 bits are flags (see below). The …","A packed field. The high 4 bits are flags, and the low 12 …","Array of tuple variation headers.","","","","","","","","","","","Public re-export of the font-types crate.","The ‘name’ table name ID that specifies a string (or …","Code page character range bits 0-31.","Code page character range bits 32-63.","Unicode Character Range.","Unicode Character Range (bits 32-63).","Unicode Character Range (bits 64-95).","Unicode Character Range (bits 96-127).","This is the suggested distance of the top of the underline …","Suggested values for the underline thickness. In general, …","Set to a value from 16 to 16384. Any value in this range is","his is the Unicode code point, in UTF-16 encoding, of a …","This is the Unicode code point, in UTF-16 encoding, of a …","The minimum Unicode index (character code) in this font.","The maximum Unicode index (character code) in this font.","This field is used for fonts with multiple optical styles.","This field is used for fonts with multiple optical styles.","This field is used for fonts with multiple optical styles.","Weight class.","Width class.","The “Windows ascender” metric.","The “Windows descender” metric.","","Returns the COLRv0 base glyph for the given glyph …","Returns the COLRv0 layer at the given index.","Returns the COLRv1 base glyph for the given glyph …","Returns the COLRv1 clip box for the given glyph identifier.","Returns the COLRv1 layer at the given index.","Paired advance height and top side bearing values for each …","Returns the vertical origin delta for the specified glyph …","Attempt to resolve <code>v_org_mapping_offset</code>.","Offset in bytes from the start of this table to the …","A numeric value for this attribute value.","A numeric value for this attribute value.","Number of ValueRecords — must equal glyphCount in the …","Defines the types of data in the ValueRecords.","Defines the types of data in the ValueRecord.","Defines the types of data in valueRecord1 — for the first","ValueRecord definition — for the first glyph of the pair …","Defines the types of data in valueRecord2 — for the …","ValueRecord definition — for the second glyph of the pair","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","Defines positioning value(s) — applied to all glyphs in …","The number of value records — may be zero.","The size in bytes of each value record — must be greater …","Array of value records that identify target items and the …","Array of ValueRecords — positioning values applied to …","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Attempt to resolve <code>var_index_map_offset</code>.","Offset to DeltaSetIndexMap table (may be NULL).","Array of VariationSelector records.","The size in bytes of the serialized data for this tuple …","Attempt to resolve <code>variation_region_list_offset</code>.","Offset in bytes from the start of the item variation store …","Array of variation regions.","Major version number of the horizontal metrics variations …","The major/minor version (1, 1)","Table version number (0 or 1)","Major version number of the horizontal metrics variations …","The version: 0x00005000 for version 0.5, 0x00010000 for …","The major/minor version of the GDEF table","0x00010000 for version 1.0 0x00020000 for version 2.0 …","The major and minor version of the GPOS table, as a tuple …","Table version number (0).","","Version number of the font header table, set to (1, 0)","Table version number — set to 1.","Table version number (=0).","Major/minor version number. Set to 1.2 for new fonts.","The major and minor version of the GSUB table, as a tuple …","Table version number - set to 0 or 1.","","Major/minor version number of the glyph variations table …","Major &amp; minor version of the table: (1, 0)","","Major version number of the axis variations table — set …","Major/minor version of the TTC Header","(major, minor) Version for the BASE table (1,0) or (1,1)","Major version number of the font variations table — set …","The major/minor version (1, 0)","Major version number of the horizontal metrics variations …","Major/minor version of the TTC Header","Attempt to resolve <code>vert_axis_offset</code>.","Offset to vertical Axis table, from beginning of BASE …","","","","","","","A packed field: the high bit is a flag—see details below.","Start point (p₀) x coordinate.","Start circle center x coordinate.","Start point (p₀) x coordinate. For variation, use …","Start circle center x coordinate. For variation, use …","End point (p₁) x coordinate.","End circle center x coordinate. For variation, use …","End circle center x coordinate.","End point (p₁) x coordinate. For variation, use …","Rotation point (p₂) x coordinate.","Rotation point (p₂) x coordinate. For variation, use …","Average weighted escapement.","Horizontal value, in design units","Horizontal value, in design units","Horizontal value, in design units","Attempt to resolve <code>x_device_offset</code>.","Offset to Device table (non-variable font) / VariationIndex","Maximum x coordinate across all glyph bounding boxes.","Maximum x of clip box. For variation, use varIndexBase + 2.","Maximum x of clip box.","Maximum x for coordinate data.","Maximum x for coordinate data.","Max(lsb + (xMax-xMin))","Minimum x of clip box.","Minimum x coordinate across all glyph bounding boxes.","Minimum x of clip box. For variation, use varIndexBase + 0.","Minimum x for coordinate data.","Minimum x for coordinate data.","Angle of skew in the direction of the x-axis, 180° in …","Angle of skew in the direction of the x-axis, 180° in …","Angle of skew in the direction of the x-axis, 180° in …","Angle of skew in the direction of the x-axis, 180° ┬░ …","x-component of transformed x-basis vector.","x-component of transformed x-basis vector. For variation, …","x-component of transformed y-basis vector.","x-component of transformed y-basis vector. For variation, …","Start point (p₀) y coordinate.","Start point (p₀) y coordinate. For variation, use …","Start circle center y coordinate. For variation, use …","Start circle center y coordinate.","End point (p₁) y coordinate. For variation, use …","End circle center y coordinate. For variation, use …","End point (p₁) y coordinate.","End circle center y coordinate.","Rotation point (p₂) y coordinate.","Rotation point (p₂) y coordinate. For variation, use …","Vertical value, in design units","Vertical value, in design units","Vertical value, in design units","Attempt to resolve <code>y_device_offset</code>.","Offset to Device table (non-variable font) / VariationIndex","Maximum y of clip box. For variation, use varIndexBase + 3.","Maximum y coordinate across all glyph bounding boxes.","Maximum y for coordinate data.","Maximum y for coordinate data.","Maximum y of clip box.","Defined as max( tsb + (yMax-yMin)).","Minimum y of clip box.","Minimum y coordinate across all glyph bounding boxes.","Minimum y for coordinate data.","Minimum y for coordinate data.","Minimum y of clip box. For variation, use varIndexBase + 1.","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","The position of the top of the strikeout stroke relative …","Thickness of the strikeout stroke in font design units.","The recommended horizontal offset in font design units for …","The recommended horizontal size in font design units for …","The recommended vertical offset in font design units for …","The recommended vertical size in font design units for …","The recommended horizontal offset in font design units for …","The recommended horizontal size in font design units for …","The recommended vertical offset in font design units for …","The recommended vertical size in font design units for …","y-component of transformed x-basis vector.","y-component of transformed x-basis vector. For variation, …","y-component of transformed y-basis vector. For variation, …","y-component of transformed y-basis vector.","An array whose items size is not known at compile time.","An array of items of non-uniform length.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return the item at the provided index.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return an iterator over this array’s items.","","The number of items in the array","","","","","","","","","","","","The Axis Variations table","The BASE table","Common bitmap (EBLC/EBDT/CBLC/CBDT) types.","The CBDT (Color Bitmap Data) table","The CBLC (Color Bitmap Location) table","The CFF table","The CFF2 table","The cmap table","The COLR table","The CPAL table","The EBDT (Embedded Bitmap Data) table","The EBLC (Embedded Bitmap Location) table","The Font Variations table","the GDEF table","The glyf (Glyph Data) table","the GPOS table","the GSUB table","The gvar (Glyph Variations) table","The head table","the hhea (Horizontal Header) table","The hmtx (Horizontal Metrics) table","The HVAR (Horizontal Metrics Variation) table","OpenType Layout common table formats","The loca (Index to Location) table","The maxp table","The MVAR (Metrics Variation) table","The name (Naming) table","The os2 table","the post (PostScript) table","PostScript (CFF and CFF2) common tables.","The sbix (Standard Bitmap Graphics) table","The STAT table","OpenType font variations common tables.","the vhea (Horizontal Header) table","The vmtx (Vertical Metrics) table","The VVAR (Vertical Metrics Variation) table","The avar (Axis Variations) table","AxisValueMap record","SegmentMaps record","Applies the piecewise linear mapping to the specified …","The number of variation axes for this font. This must be …","The segment maps array — one segment map for each axis, …","The array of axis value map records for this axis.","The array of axis value map records for this axis.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","A normalized coordinate value obtained using default …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The number of correspondence pairs for this axis.","The number of correspondence pairs for this axis.","","","","The modified, normalized coordinate value.","The modified, normalized coordinate value.","","","","","","","","","Major version number of the axis variations table — set …","Axis Table","The BASE (Baseline) table","","BaseCoordFormat1","BaseCoordFormat2","BaseCoordFormat3","BaseLangSysRecord","BaseScript Table","BaseScriptList Table","BaseScriptRecord","BaseTagList Table","BaseValues table","FeatMinMaxRecord","","","","MinMax table","Number of BaseCoord tables defined — should equal …","Format identifier — format = 1","Format identifier — format = 2","Format identifier — format = 3","Array of offsets to BaseCoord tables, from beginning of …","Index of contour point on the reference glyph","A dynamically resolving wrapper for <code>base_coord_offsets</code>.","Number of BaseLangSysRecords defined — may be zero (0)","Array of BaseLangSysRecords, in alphabetical order by …","4-byte language system identification tag","4-byte language system identification tag","Offset to BaseScript table, from beginning of …","Number of BaseScriptRecords defined","Attempt to resolve <code>base_script_list_offset</code>.","Offset to BaseScriptList table, from beginning of Axis …","Offset to BaseScript table, from beginning of …","Offset to BaseScript table, from beginning of …","Array of BaseScriptRecords, in alphabetical order by …","4-byte script identification tag","4-byte script identification tag","Number of baseline identification tags in this text …","Attempt to resolve <code>base_tag_list_offset</code>.","Offset to BaseTagList table, from beginning of Axis table …","Attempt to resolve <code>base_values_offset</code>.","Offset to BaseValues table, from beginning of BaseScript …","Array of 4-byte baseline identification tags — must be in","","","","","","","","","","","","","","","","","X or Y value, in design units","X or Y value, in design units","X or Y value, in design units","Index number of default baseline for this script — equals","Attempt to resolve <code>default_min_max_offset</code>.","Offset to MinMax table, from beginning of BaseScript table …","Attempt to resolve <code>device_offset</code>.","Offset to Device table (non-variable font) / Variation …","Number of FeatMinMaxRecords — may be zero (0)","Array of FeatMinMaxRecords, in alphabetical order by …","4-byte feature identification tag — must match feature …","4-byte feature identification tag — must match feature …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to resolve <code>horiz_axis_offset</code>.","Offset to horizontal Axis table, from beginning of BASE …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to resolve <code>item_var_store_offset</code>.","Offset to Item Variation Store table, from beginning of …","Attempt to resolve <code>max_coord_offset</code>.","Offset to BaseCoord table that defines the maximum extent …","Offset to BaseCoord table that defines maximum extent …","Offset to BaseCoord table that defines the maximum extent …","Offset to BaseCoord table that defines the maximum extent …","Attempt to resolve <code>min_coord_offset</code>.","Offset to BaseCoord table that defines the minimum extent …","Offset to BaseCoord table that defines the minimum extent …","Offset to BaseCoord table that defines the minimum extent …","Offset to BaseCoord table that defines the minimum extent …","Offset to MinMax table, from beginning of BaseScript table","Offset to MinMax table, from beginning of BaseScript table","Offset to MinMax table, from beginning of BaseScript table","","","","","","","","","","","","","Glyph ID of control glyph","","","","","","","","","","","","","","","","","(major, minor) Version for the BASE table (1,0) or (1,1)","Attempt to resolve <code>vert_axis_offset</code>.","Offset to vertical Axis table, from beginning of BASE …","EbdtComponent record.","","BigGlyphMetrics record.","The full bitmap is tightly packed according to the bit …","","","","Bitmap flags.","","","BitmapSize record.","Each row of the data is aligned to a byte boundary.","","","","","","","","GlyphIdOffsetPair record.","Horizontal","IndexSubtables format type.","IndexSubTable1: variable-metrics glyphs with 4-byte …","IndexSubTable2: all glyphs have identical metrics.","IndexSubTable3: variable-metrics glyphs with 2-byte …","IndexSubTable4: variable-metrics glyphs with sparse glyph …","IndexSubTable5: constant-metrics glyphs with sparse glyph …","IndexSubtableArray table.","","SbitLineMetrics record.","","SmallGlyphMetrics record.","Vertical","Add to indexSubTableArrayOffset to get offset from …","Horizontal or vertical advance width in pixels.","Horizontal or vertical advance width in pixels.","Returns the set containing all flags.","","","Distance in pixels from the horizontal origin to the left …","Distance in pixels from the horizontal origin to the left …","Distance in pixels from the horizontal origin to the top …","Distance in pixels from the horizontal origin to the top …","All glyphs have the same metrics; glyph data may be …","All glyphs have the same metrics.","The Microsoft rasterizer v.1.7 or greater supports the …","The Microsoft rasterizer v.1.7 or greater supports the …","Bit depth from the associated size. Required for computing …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not used; set to 0.","Not used; set to 0.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Offset in bytes from the start of the EBDT/CBDT table.","Size of the image data in bytes, if present in the …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Highest glyph index for this size.","Highest glyph index for this size.","","","","","","","","","First glyph ID of this range.","Vertical or horizontal.","Vertical or horizontal.","","","","","","","","","","","","","Format of EBDT/CBDT image data.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","One per glyph.","One per glyph, sorted by glyhph ID.","Glyph ID of glyph present.","Component glyph ID.","Glyph ID of glyph present.","Component glyph ID.","","","","","","","","Number of rows of data.","Number of rows of data.","Number of rows of data.","Number of rows of data.","Line metrics for text rendered horizontally.","Line metrics for text rendered horizontally.","Horizontal advance width in pixels.","Horizontal advance width in pixels.","Distance in pixels from the horizontal origin to the left …","Distance in pixels from the horizontal origin to the left …","Distance in pixels from the horizontal origin to the top …","Distance in pixels from the horizontal origin to the top …","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Offset to image data in EBDT table.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","Format of EBDT image data.","All the glyphs are of the same size.","All glyphs have the same data size.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","Format of this IndexSubTable.","Offset to index subtable from beginning of EBLC/CBLC.","Offset to index subtable from beginning of EBLC/CBLC.","Number of bytes in corresponding index subtables and array.","Number of bytes in corresponding index subtables and array.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Last glyph ID of this range (inclusive).","Returns the bitmap location information for the given …","","","Full metrics, if present in the EBLC/CBLC table.","","","","","","","","Returns the complement of this set of flags.","Array length.","Array length.","There is an index subtable for each range or format change.","There is an index subtable for each range or format change.","","","","","","","","","","","","Horizontal pixels per em.","Horizontal pixels per em.","Vertical pixels per em.","Vertical pixels per em.","","","","","","","","","Removes the specified flags in-place.","Location in EBDT.","Location in EBDT.","","","Lowest glyph index for this size.","Lowest glyph index for this size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Line metrics for text rendered vertically.","Line metrics for text rendered vertically.","Vertical advance width in pixels.","Vertical advance width in pixels.","Distance in pixels from the vertical origin to the left …","Distance in pixels from the vertical origin to the left …","Distance in pixels from the vertical origin to the top …","Distance in pixels from the vertical origin to the top …","Number of columns of data.","Number of columns of data.","Number of columns of data.","Number of columns of data.","","","Position of component left.","Position of component left.","Position of component top.","Position of component top.","The Color Bitmap Data table","","Major version of the CBDT table, = 3.","Minor version of CBDT table, = 0.","","The Color Bitmap Location table","BitmapSize records array.","Major version of the CBLC table, = 3.","Minor version of CBLC table, = 0.","Number of BitmapSize records.","","The Compact Font Format table.","Compact Font Format table header","Padding bytes before the start of the Name INDEX.","","","","","Returns the argument unchanged.","Returns the global subroutine index.","Header size (bytes).","","Calls <code>U::from(self)</code>.","Format major version (starting at 1).","Format minor version (starting at 0).","Returns the PostScript name for the font in the font set …","Returns the name index.","Absolute offset size.","","","","","Returns the associated string for the given identifier.","Returns the string index.","","Returns the top dict index.","Remaining table data.","","","","The Compact Font Format (CFF) version 2 table","Compact Font Format (CFF) version 2 table header","Padding bytes before the start of the Top DICT.","","","","","Returns the argument unchanged.","Returns the global subroutine index.","","Header size (bytes).","Calls <code>U::from(self)</code>.","Format major version (set to 2).","Format minor version (set to 0).","","","","","","Data containing the Top DICT.","Returns the raw data containing the top dict.","Length of Top DICT structure in bytes.","Remaining table data.","","","","cmap","cmap Format 0: Byte encoding table","cmap Format 10: Tr","cmap Format 12: Segmented coverage","Iterator over all (codepoint, glyph identifier) pairs in …","cmap Format 13: Many-to-one range mappings","cmap Format 14: Unicode Variation Sequences","Iterator over all (codepoint, selector, mapping variant) …","cmap Format 2: High-byte mapping through table","cmap Format 4: Segment mapping to delta values","Iterator over all (codepoint, glyph identifier) pairs in …","cmap Format 6: Trimmed table mapping","cmap Format 8: mixed 16-bit and 32-bit coverage","The different cmap subtable formats.","Part of Cmap13","","Default UVS table","Encoding Record","","","","","","","","","","","","Result of mapping a codepoint with a variation selector.","Non-Default UVS table","…","Used in Cmap8 and Cmap12","Part of Cmap2","","Part of Cmap14","The variation selector should be ignored and the default …","Part of Cmap14","The variant glyph mapped by a codepoint and associated …","Part of Cmap14","","Number of additional values in this range","Number of additional values in this range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offset from the start of the <code>Cmap14</code> subtable to Default UVS","Offset from the start of the <code>Cmap14</code> subtable to Default UVS","Offset from the start of the <code>Cmap14</code> subtable to Default UVS","Platform-specific encoding ID.","Platform-specific encoding ID.","","Last character code in this group; same condition as listed","Last character code in this group","Last character code in this group; same condition as listed","Last character code in this group","End characterCode for each segment, last=0xFFFF.","Number of character codes in subrange.","Number of valid low bytes for this SubHeader.","Number of valid low bytes for this SubHeader.","Log2 of the maximum power of 2 less than or equal to …","","","","","","","","First character code of subrange.","First valid low byte for this SubHeader.","First valid low byte for this SubHeader.","","","","","","","","","","Format number is set to 0.","Format number is set to 2.","Format number is set to 4.","Format number is set to 6.","Subtable format; set to 8.","Subtable format; set to 10.","Subtable format; set to 12.","Subtable format; set to 13.","Subtable format. Set to 14.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Glyph index to be used for all the characters in the …","Glyph ID of the UVS","Glyph index to be used for all the characters in the …","Glyph ID of the UVS","An array that maps character codes to glyph index values.","Glyph index array (arbitrary length)","Array of glyph index values for character codes in the …","Array of glyph indices for the character codes covered","Array of SequentialMapGroup records.","Array of SequentialMapGroup records.","Array of ConstantMapGroup records.","","","","","","","Delta for all character codes in segment.","See text below.","See text below.","See text below.","See text below.","Offsets into glyphIdArray or 0","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Tightly packed array of bits (8K bytes total) indicating …","Returns an iterator over all (codepoint, glyph identifier) …","Returns an iterator over all (codepoint, glyph identifier) …","Returns an iterator over all (codepoint, selector, mapping …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","For requirements on use of the language field, see “Use …","This is the length in bytes of the subtable.","This is the length in bytes of the subtable.","This is the length in bytes of the subtable.","This is the length in bytes of the subtable.","Byte length of this subtable (including the header)","Byte length of this subtable (including the header)","Byte length of this subtable (including the header)","Byte length of this subtable (including the header)","Byte length of this subtable (including this header)","Map a codepoint to a nominal glyph identifier","Maps a codepoint to a nominal glyph identifier.","Maps a codepoint to a nominal glyph identifier.","Maps a codepoint and variation selector to a nominal glyph …","Create from a raw scalar.","","","","Offset from the start of the <code>Cmap14</code> subtable to Non-Default","Offset from the start of the <code>Cmap14</code> subtable to Non-Default","Offset from the start of the <code>Cmap14</code> subtable to Non-Default","Number of character codes covered","Number of groupings which follow","Number of groupings which follow","Number of groupings which follow","Number of encoding tables that follow.","Number of Unicode character ranges.","","Number of variation Selector Records","","","","","","","Platform ID.","Platform ID.","segCount times 2, minus searchRange ((segCount * 2) - …","Array of UnicodeRange records.","","","","","","","","","","","","","","","Maximum power of 2 less than or equal to segCount, times 2 …","2 × segCount.","First character code covered","First character code in this group; note that if this …","First character code in this group","First character code in this group; note that if this …","First character code in this group","Start character code for each segment.","Glyph index corresponding to the starting character code","Glyph index corresponding to the starting character code","First value in this range","First value in this range","Array that maps high bytes to subHeaders: value is …","Byte offset from beginning of the <code>Cmap</code> table to the …","Byte offset from beginning of the <code>Cmap</code> table to the …","Byte offset from beginning of the <code>Cmap</code> table to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base Unicode value of the UVS","Base Unicode value of the UVS","","Array of VariationSelector records.","Variation selector","Variation selector","Table version number (0).","Affine2x3 record","BaseGlyph record","BaseGlyphList table","BaseGlyphPaint record","","Clip record","ClipBox table","ClipBoxFormat1 record","ClipBoxFormat2 record","ClipList table","","","ColorIndex record","ColorLine table","ColorStop record","COLR (Color) table","","","","CompositeMode enumeration","","","","","","","","","Extend enumeration","","","","","","","","","Layer record","LayerList table","","","","","","Paint tables","PaintColrGlyph table","PaintColrLayers table","PaintComposite table","PaintGlyph table","Unique paint identifier used for detecting cycles in the …","PaintLinearGradient table","PaintRadialGradient table","PaintRotate table","PaintRotateAroundCenter table","PaintScale table","PaintScaleAroundCenter table","PaintScaleUniform table","PaintScaleUniformAroundCenter table","PaintSkew table","PaintSkewAroundCenter table","PaintSolid table","PaintSweepGradient table","PaintTransform table","PaintTranslate table","PaintVarLinearGradient table","PaintVarRadialGradient table","PaintVarRotate table","PaintVarRotateAroundCenter table","PaintVarScale table","PaintVarScaleAroundCenter table","PaintVarScaleUniform table","PaintVarScaleUniformAroundCenter table","PaintVarSkew table","PaintVarSkewAroundCenter table","PaintVarSolid table","PaintVarSweepGradient table","PaintVarTransform table","PaintVarTranslate table","","","","","","","","","","","","","","","","","","","","","","","","VarAffine2x3 record","VarColorIndex record","VarColorLine table","VarColorStop record","","","","","","","","","","","","","","","","Alpha value.","Alpha value. For variation, use varIndexBase + 0.","Alpha value.","Alpha value. For variation, use varIndexBase + 0.","Alpha value.","Alpha value. For variation, use varIndexBase + 1.","Alpha value.","Alpha value. For variation, use varIndexBase + 0.","Alpha value.","Alpha value. For variation, use varIndexBase + 1.","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Rotation angle, 180° in counter-clockwise degrees per 1.0 …","Attempt to resolve <code>backdrop_paint_offset</code>.","Offset to a backdrop Paint table.","Attempt to resolve <code>base_glyph_list_offset</code>.","Offset to BaseGlyphList table.","","Attempt to resolve <code>base_glyph_records_offset</code>.","Offset to baseGlyphRecords array (may be NULL).","","","","","","","","","","","","","","","","","","","","","","","","","Center x coordinate.","Center x coordinate. For variation, use varIndexBase + 0.","x coordinate for the center of scaling.","x coordinate for the center of scaling. For variation, use …","x coordinate for the center of scaling.","x coordinate for the center of scaling. For variation, use …","x coordinate for the center of rotation.","x coordinate for the center of rotation. For variation, use","x coordinate for the center of rotation.","x coordinate for the center of rotation. For variation, use","Center y coordinate.","Center y coordinate. For variation, use varIndexBase + 1.","y coordinate for the center of scaling.","y coordinate for the center of scaling. For variation, use …","y coordinate for the center of scaling.","y coordinate for the center of scaling. For variation, use …","y coordinate for the center of rotation.","y coordinate for the center of rotation. For variation, use","y coordinate for the center of rotation.","y coordinate for the center of rotation. For variation, use","Offset to a ClipBox table, from the beginning of the …","Offset to a ClipBox table, from the beginning of the …","Offset to a ClipBox table, from the beginning of the …","Attempt to resolve <code>clip_list_offset</code>.","Offset to ClipList table (may be NULL).","Clip records. Sorted by startGlyphID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Attempt to resolve <code>color_line_offset</code>.","Offset to ColorLine table.","Offset to VarColorLine table.","Offset to ColorLine table.","Offset to VarColorLine table.","Offset to ColorLine table.","Offset to VarColorLine table.","","Allows for variations.","A CompositeMode enumeration value.","","","Translation in x direction.","Translation in x direction. For variation, use …","Translation in x direction.","Translation in x direction. For variation, use …","Translation in y direction.","Translation in y direction. For variation, use …","Translation in y direction.","Translation in y direction. For variation, use …","End of the angular range of the gradient, 180° in …","End of the angular range of the gradient, 180° in …","Last glyph ID in the range.","Last glyph ID in the range.","","","","","","","","","An Extend enum value.","An Extend enum value.","Index (base 0) into the LayerList.","Index (base 0) into the layerRecords array.","Index (base 0) into the layerRecords array.","","","","","","","","","","","Set to 1.","Set to 1.","Set to 2.","Set to 1.","Set to 2.","Set to 3.","Set to 4.","Set to 5.","Set to 6.","Set to 7.","Set to 8.","Set to 9.","Set to 10.","Set to 11.","Set to 12.","Set to 13.","Set to 14.","Set to 15.","Set to 16.","Set to 17.","Set to 18.","Set to 19.","Set to 20.","Set to 21.","Set to 22.","Set to 23.","Set to 24.","Set to 25.","Set to 26.","Set to 27.","Set to 28.","Set to 29.","Set to 30.","Set to 31.","Set to 32.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Glyph ID for the source outline.","Glyph ID for a BaseGlyphList base glyph.","Glyph ID of the base glyph.","Glyph ID of the glyph used for a given layer.","Glyph ID of the base glyph.","Glyph ID of the base glyph.","Glyph ID of the glyph used for a given layer.","Glyph ID of the base glyph.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to resolve <code>item_variation_store_offset</code>.","Offset to ItemVariationStore (may be NULL).","Attempt to resolve <code>layer_list_offset</code>.","Offset to LayerList table (may be NULL).","Attempt to resolve <code>layer_records_offset</code>.","Offset to layerRecords array (may be NULL).","Create from a raw scalar.","Create from a raw scalar.","","Number of BaseGlyph records; may be 0 in a version 1 table.","Number of Clip records.","Number of Layer records; may be 0 in a version 1 table.","","Number of offsets to paint tables to read from LayerList.","Number of color layers associated with this glyph.","Number of color layers associated with this glyph.","Number of ColorStop records.","Number of ColorStop records.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Attempt to resolve <code>paint_offset</code>.","Offset to a Paint table, from the beginning of the …","Offset to a Paint table.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint subtable.","Offset to a Paint table, from the beginning of the …","Offset to a Paint table, from the beginning of the …","Offsets to Paint tables.","A dynamically resolving wrapper for <code>paint_offsets</code>.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index (base 0) for a palette entry in the CPAL table.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index (base 0) for a palette entry in the CPAL table.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","Index for a CPAL palette entry.","","","","","","","","","Start circle radius.","Start circle radius. For variation, use varIndexBase + 2.","End circle radius.","End circle radius. For variation, use varIndexBase + 5.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scale factor in x and y directions.","Scale factor in x and y directions. For variation, use …","Scale factor in x and y directions.","Scale factor in x and y directions. For variation, use …","Scale factor in x direction.","Scale factor in x direction. For variation, use …","Scale factor in x direction.","Scale factor in x direction. For variation, use …","Scale factor in y direction.","Scale factor in y direction. For variation, use …","Scale factor in y direction.","Scale factor in y direction. For variation, use …","Attempt to resolve <code>source_paint_offset</code>.","Offset to a source Paint table.","Start of the angular range of the gradient, 180° in …","Start of the angular range of the gradient, 180° in …","First glyph ID in the range.","First glyph ID in the range.","Position on a color line.","Position on a color line. For variation, use varIndexBase …","Position on a color line.","Position on a color line. For variation, use varIndexBase …","","","","","","","","","","","","","","","Attempt to resolve <code>transform_offset</code>.","Attempt to resolve <code>transform_offset</code>.","Offset to an Affine2x3 table.","Offset to a VarAffine2x3 table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the COLRv0 base glyph for the given glyph …","Returns the COLRv0 layer at the given index.","Returns the COLRv1 base glyph for the given glyph …","Returns the COLRv1 clip box for the given glyph identifier.","Returns the COLRv1 layer at the given index.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Base index into DeltaSetIndexMap.","Attempt to resolve <code>var_index_map_offset</code>.","Offset to DeltaSetIndexMap table (may be NULL).","Table version number - set to 0 or 1.","Start point (p₀) x coordinate.","Start point (p₀) x coordinate. For variation, use …","Start circle center x coordinate.","Start circle center x coordinate. For variation, use …","End point (p₁) x coordinate.","End point (p₁) x coordinate. For variation, use …","End circle center x coordinate.","End circle center x coordinate. For variation, use …","Rotation point (p₂) x coordinate.","Rotation point (p₂) x coordinate. For variation, use …","Maximum x of clip box.","Maximum x of clip box. For variation, use varIndexBase + 2.","Minimum x of clip box.","Minimum x of clip box. For variation, use varIndexBase + 0.","Angle of skew in the direction of the x-axis, 180° in …","Angle of skew in the direction of the x-axis, 180° ┬░ …","Angle of skew in the direction of the x-axis, 180° in …","Angle of skew in the direction of the x-axis, 180° in …","x-component of transformed x-basis vector.","x-component of transformed x-basis vector. For variation, …","x-component of transformed y-basis vector.","x-component of transformed y-basis vector. For variation, …","Start point (p₀) y coordinate.","Start point (p₀) y coordinate. For variation, use …","Start circle center y coordinate.","Start circle center y coordinate. For variation, use …","End point (p₁) y coordinate.","End point (p₁) y coordinate. For variation, use …","End circle center y coordinate.","End circle center y coordinate. For variation, use …","Rotation point (p₂) y coordinate.","Rotation point (p₂) y coordinate. For variation, use …","Maximum y of clip box.","Maximum y of clip box. For variation, use varIndexBase + 3.","Minimum y of clip box.","Minimum y of clip box. For variation, use varIndexBase + 1.","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","Angle of skew in the direction of the y-axis, 180° in …","y-component of transformed x-basis vector.","y-component of transformed x-basis vector. For variation, …","y-component of transformed y-basis vector.","y-component of transformed y-basis vector. For variation, …","CPAL (Color Record) record","CPAL (Color Palette Table) table","The PaletteType flags.","Bit 1: palette is appropriate to use when displaying the …","Bit 0: palette is appropriate to use when displaying the …","Returns the set containing all flags.","Alpha value (B3).","Alpha value (B3).","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Blue value (B0).","Blue value (B0).","","","","","","","","","","","Index of each palette’s first color record in the …","Attempt to resolve <code>color_records_array_offset</code>.","Offset from the beginning of CPAL table to the first …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","Green value (B1).","Green value (B1).","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Total number of color records, combined for all palettes.","Number of palette entries in each palette.","Number of palettes in the table.","Attempt to resolve <code>palette_entry_labels_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","Attempt to resolve <code>palette_labels_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","Attempt to resolve <code>palette_types_array_offset</code>.","Offset from the beginning of CPAL table to the Palette …","","","","Red value (B2).","Red value (B2).","Removes the specified flags in-place.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Table version number (=0).","The Embedded Bitmap Data table","","Major version of the EBDT table, = 2.","Minor version of EBDT table, = 0.","","The Embedded Bitmap Location table","BitmapSize records array.","Major version of the EBLC table, = 2.","Minor version of EBLC table, = 0.","Number of BitmapSize records.","","Shim table to handle combined axis and instance arrays.","The fvar (Font Variations) table","The InstanceRecord","The VariationAxisRecord","Returns the array of variation axis records.","Variation axis record array.","The number of variation axes in the font (the number of …","Attempt to resolve <code>axis_instance_arrays_offset</code>.","Offset in bytes from the beginning of the table to the …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","The size in bytes of each VariationAxisRecord — set to …","Tag identifying the design variation for the axis.","Tag identifying the design variation for the axis.","","","","","","","","","","","The coordinates array for this instance.","The default coordinate value for the axis.","The default coordinate value for the axis.","","Axis qualifiers — see details below.","Axis qualifiers — see details below.","Reserved for future use — set to 0.","","","Returns the argument unchanged.","Returns the argument unchanged.","","The number of named instances defined in the font (the …","The size in bytes of each InstanceRecord — set to either …","Returns the array of instance records.","Instance record array.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum coordinate value for the axis.","The maximum coordinate value for the axis.","The minimum coordinate value for the axis.","The minimum coordinate value for the axis.","Returns a normalized coordinate for the given value.","","Optional. The name ID for entries in the ‘name’ table …","","A constructor that requires additional arguments.","Parse an instance record with a known axis_count and …","","","The name ID for entries in the ‘name’ table that …","","","","","","","","","Major version number of the font variations table — set …","Attachment Point List Table","Part of AttachList","","Caret Value Tables","CaretValue Format 1","CaretValue Format 2","CaretValue Format 3","","","","","","","","","","","","GDEF 1.0","Used in the Glyph Class Definition Table","Ligature Caret List Table","Ligature Glyph Table","","","","","Mark Glyph Sets Table","","","Attempt to resolve <code>attach_list_offset</code>.","Offset to attachment point list table, from beginning of …","Array of offsets to AttachPoint tables-from beginning of …","A dynamically resolving wrapper for <code>attach_point_offsets</code>.","","","","","Number of CaretValue tables for this ligature (components …","Format identifier: format = 1","Format identifier: format = 2","Format identifier-format = 3","Array of offsets to CaretValue tables, from beginning of …","Contour point index on glyph","A dynamically resolving wrapper for <code>caret_value_offsets</code>.","","","","","","X or Y value, in design units","X or Y value, in design units","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Offset to Coverage table - from beginning of AttachList …","Offset to Coverage table - from beginning of LigCaretList …","Array of offsets to mark glyph set coverage tables, from …","A dynamically resolving wrapper for <code>coverage_offsets</code>.","","Attempt to resolve <code>device_offset</code>.","Offset to Device table (non-variable font) / Variation …","","","Format identifier == 1","Returns the argument unchanged.","Returns the argument unchanged.","","Attempt to resolve <code>glyph_class_def_offset</code>.","Offset to class definition table for glyph type, from …","Number of glyphs with attachment points","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to resolve <code>item_var_store_offset</code>.","Offset to the Item Variation Store table, from beginning of","Attempt to resolve <code>lig_caret_list_offset</code>.","Offset to ligature caret list table, from beginning of GDEF","Number of ligature glyphs","Array of offsets to LigGlyph tables, from beginning of …","A dynamically resolving wrapper for <code>lig_glyph_offsets</code>.","Attempt to resolve <code>mark_attach_class_def_offset</code>.","Offset to class definition table for mark attachment type, …","Number of mark glyph sets defined","Attempt to resolve <code>mark_glyph_sets_def_offset</code>.","Offset to the table of mark glyph set definitions, from …","Create from a raw scalar.","","Number of attachment points on this glyph","Array of contour point indices -in increasing numerical …","","","","","","","","","","","","","","","","","","","","","The major/minor version of the GDEF table","Bit 1: If this is set, the arguments are signed xy values; …","Bit 0: If this is set, the arguments are 16-bit (uint16 or …","Anchor position for a composite component.","A reference to another glyph. Part of CompositeGlyph.","","CompositeGlyph","Flags used in CompositeGlyph","Contour end point at this index was less than its …","Point with an associated on-curve flag in a simple glyph.","Expected a cubic off-curve point at this index.","Expected a quadratic off-curve point at this index.","Expected a quadratic off-curve or on-curve point at this …","The glyf (Glyph Data) table","Simple or composite glyph.","Marker for points that have an explicit delta in a glyph …","Bit 5: Indicates at least one more glyph after this one.","Bit 0: If set, the point is on the curve; otherwise, it is …","Bit 10: If set, the components of the compound glyph …","Bit 6: If set, contours in the glyph description may …","","","Flags describing the properties of a point.","Marker bits for point flags that are set during variation …","Bit 3: If set, the next byte (read as unsigned) specifies …","Bit 2: If set and ARGS_ARE_XY_VALUES is also set, the xy …","Bit 11: The composite is designed to have the component …","","The Glyph Header","Flags used in SimpleGlyph","Marker that signifies that the both coordinates of a point …","Marker that signifies that the x coordinate of a point has …","Marker that signifies that the y coordinate of a point has …","Errors that can occur when converting an outline to a path.","Transform for a composite component.","Bit 12: The composite is designed not to have the component","Bit 9: If set, this forces the aw and lsb (and rsb) for the","Bit 6: The x direction will use a different scale from the …","Bit 3: This indicates that there is a simple scale for the …","Bit 7: There is a 2 by 2 transformation that will be used …","Bit 8: Following the last component are instructions for …","Bit 4: This flag has two meanings, depending on how the …","Bit 1: If set, the corresponding x-coordinate is 1 byte …","Bit 5: This flag has two meanings, depending on how the …","Bit 2: If set, the corresponding y-coordinate is 1 byte …","Returns the set containing all flags.","Returns the set containing all flags.","Anchor for component placement.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Clears the given marker for this point.","Disables the on curve flag.","","","","","","","","","","","","","","","","","","","","","","","component flag glyph index of component","Returns an iterator that yields the glyph identifier and …","Returns an iterator over the components of the composite …","Compute the flags that describe this transform","Compute the flags that describe this anchor","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the component count and TrueType interpreter …","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Array of point indices for the last point of each contour, …","","","","","","","","","Component flags.","Flips the state of the on curve flag.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Creates a point flag from the given bits. These are …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","","","Glyph identifier.","the raw data for flags &amp; x/y coordinates","Returns true if the given marker is set for this point.","Returns true if the contours in the simple glyph may …","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Total number of bytes for instructions. If …","Array of instruction byte code for the glyph.","Returns the TrueType interpreter instructions.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if this is an off curve cubic point.","Returns true if this is an off curve quadratic point.","Returns true if this is an on curve point.","Construct a new <code>CurvePoint</code>","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the total number of points.","If the number of contours is greater than or equal to zero,","If the number of contours is greater than or equal to zero,","","Convenience method to construct an off-curve point","Creates a new off curve cubic point flag.","Creates a new off curve quadratic point flag.","Creates a new on curve point flag.","Convenience method to construct an on-curve point","True if this is an on-curve point.","","","Returns an iterator over the points in the glyph.","","","","","Reads points and flags into the provided buffers.","","Removes the specified flags in-place.","Removes the specified flags in-place.","Applies the given marker to this point.","Enables the on curve flag.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","","","","","","Converts a <code>glyf</code> outline described by points, flags and …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Component transformation matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","X cooordinate.","Maximum x for coordinate data.","Maximum x for coordinate data.","","Minimum x for coordinate data.","Minimum x for coordinate data.","","X scale factor.","XY skew factor.","Y cooordinate.","Maximum y for coordinate data.","Maximum y for coordinate data.","","Minimum y for coordinate data.","Minimum y for coordinate data.","","YX skew factor.","Y scale factor.","","","","","A mask with all the device/variation index bits set","Anchor Table Format 1: Design Units","Anchor Table Format 2: Design Units Plus Contour Point","Anchor Table Format 3: Design Units Plus Device or …","Anchor Tables position one glyph with respect to another.","Part of MarkBasePosFormat1","Part of BaseArray","","","Part of PairPosFormat2","Part of PairPosFormat2","reexport stuff from layout that we use","Part of MarkLigPosFormat1","","","reexport stuff from layout that we use","","","Cursive Attachment Positioning Format 1: Cursvie attachment","reexport stuff from layout that we use","reexport stuff from layout that we use","Part of CursivePosFormat1","","Extension Positioning Subtable Format 1","A GPOS Extension Positioning subtable","reexport stuff from layout that we use","reexport stuff from layout that we use","","","","","","","","","","","","","","Class Definition Table Format 1 GPOS Version 1.0","Part of MarkLigPosFormat1","Part of MarkLigPosFormat1","reexport stuff from layout that we use","Part of MarkMarkPosFormat1Class2Record","Part of MarkMarkPosFormat1","Mark Array Table","Mark-to-Base Attachment Positioning Format 1: Mark-to-base …","Mark-to-Ligature Positioning Format 1: Mark-to-Ligature …","Mark-to-Mark Attachment Positioning Format 1: Mark-to-Mark …","Part of MarkArray","","","","","","","","","Lookup Type 1: Single Adjustment Positioning Subtable","Pair Adjustment Positioning Format 1: Adjustments for …","Pair Adjustment Positioning Format 2: Class Pair Adjustment","Part of PairPosFormat1","Part of PairSet","A GPOS ChainedSequenceContext","A GPOS Lookup subtable.","A typed GPOS LookupList table","A GPOS SequenceContext","reexport stuff from layout that we use","","","Lookup Type 1: Single Adjustment Positioning Subtable","Single Adjustment Positioning Format 1: Single Positioning …","Single Adjustment Positioning Format 2: Array of …","See ValueRecord","A Positioning ValueRecord.","Includes horizontal adjustment for advance","Includes Device table (non-variable font) / VariationIndex …","Includes horizontal adjustment for placement","Includes Device table (non-variable font) / VariationIndex …","Includes vertical adjustment for advance","Includes Device table (non-variable font) / VariationIndex …","Includes vertical adjustment for placement","Includes Device table (non-variable font) / VariationIndex …","Returns the set containing all flags.","Format identifier, = 1","Format identifier, = 2","Format identifier, = 3","Index to glyph contour point","Array of offsets (one per mark class) to Anchor tables. …","Array of offsets (one per mark class) to Anchor tables. …","Array of offsets (one per mark class) to Anchor tables. …","Attempt to resolve <code>base_array_offset</code>.","Offset to BaseArray table, from beginning of MarkBasePos …","Number of BaseRecords","Attempt to resolve <code>base_coverage_offset</code>.","Offset to baseCoverage table, from beginning of MarkBasePos","Array of BaseRecords, in order of baseCoverage Index.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of classes in classDef1 table — includes Class 0.","Array of Class1 records, ordered by classes in classDef1.","Number of classes in classDef2 table — includes Class 0.","Array of Class2 records, ordered by classes in classDef2.","Array of Class2 records, ordered by classes in classDef2.","Attempt to resolve <code>class_def1_offset</code>.","Offset to ClassDef table, from beginning of PairPos …","Attempt to resolve <code>class_def2_offset</code>.","Offset to ClassDef table, from beginning of PairPos …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of ComponentRecords in this ligature","Array of Component records, ordered in writing direction.","","","","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Offset to Coverage table, from beginning of SinglePos …","Offset to Coverage table, from beginning of SinglePos …","Offset to Coverage table, from beginning of PairPos …","Offset to Coverage table, from beginning of PairPos …","Offset to Coverage table, from beginning of CursivePos …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Offset to entryAnchor table, from beginning of CursivePos …","Offset to entryAnchor table, from beginning of CursivePos …","Offset to entryAnchor table, from beginning of CursivePos …","Number of EntryExit records","Array of EntryExit records, in Coverage index order.","","","Offset to exitAnchor table, from beginning of CursivePos …","Offset to exitAnchor table, from beginning of CursivePos …","Offset to exitAnchor table, from beginning of CursivePos …","Attempt to resolve <code>extension_offset</code>.","Lookup type of subtable referenced by extensionOffset …","Offset to the extension subtable, of lookup type …","Attempt to resolve <code>feature_list_offset</code>.","Offset to FeatureList table, from beginning of GPOS table","Attempt to resolve <code>feature_variations_offset</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Array of offsets (one per class) to Anchor tables. Offsets …","Array of offsets (one per class) to Anchor tables. Offsets …","Array of offsets (one per class) to Anchor tables. Offsets …","Attempt to resolve <code>ligature_array_offset</code>.","Offset to LigatureArray table, from beginning of MarkLigPos","Array of offsets to LigatureAttach tables. Offsets are from","A dynamically resolving wrapper for <code>ligature_attach_offsets</code>…","Number of LigatureAttach table offsets","Attempt to resolve <code>ligature_coverage_offset</code>.","Offset to ligatureCoverage table, from beginning of …","Attempt to resolve <code>lookup_list_offset</code>.","Offset to LookupList table, from beginning of GPOS table","Attempt to resolve <code>mark1_array_offset</code>.","Offset to MarkArray table for mark1, from beginning of …","Attempt to resolve <code>mark1_coverage_offset</code>.","Offset to Combining Mark Coverage table, from beginning of …","Array of offsets (one per class) to Anchor tables. Offsets …","Array of offsets (one per class) to Anchor tables. Offsets …","Array of offsets (one per class) to Anchor tables. Offsets …","Attempt to resolve <code>mark2_array_offset</code>.","Offset to Mark2Array table for mark2, from beginning of …","Number of Mark2 records","Attempt to resolve <code>mark2_coverage_offset</code>.","Offset to Base Mark Coverage table, from beginning of …","Array of Mark2Records, in Coverage order.","Offset to Anchor table, from beginning of MarkArray table.","Offset to Anchor table, from beginning of MarkArray table.","Offset to Anchor table, from beginning of MarkArray table.","Attempt to resolve <code>mark_array_offset</code>.","Attempt to resolve <code>mark_array_offset</code>.","Offset to MarkArray table, from beginning of MarkBasePos …","Offset to MarkArray table, from beginning of MarkLigPos …","Class defined for the associated mark.","Class defined for the associated mark.","Number of classes defined for marks","Number of defined mark classes","Number of Combining Mark classes defined","Number of MarkRecords","Attempt to resolve <code>mark_coverage_offset</code>.","Attempt to resolve <code>mark_coverage_offset</code>.","Offset to markCoverage table, from beginning of MarkBasePos","Offset to markCoverage table, from beginning of MarkLigPos …","Array of MarkRecords, ordered by corresponding glyphs in …","Returns the complement of this set of flags.","Number of PairSet tables","Array of offsets to PairSet tables. Offsets are from …","A dynamically resolving wrapper for <code>pair_set_offsets</code>.","Number of PairValueRecords","Array of PairValueRecords, ordered by glyph ID of the …","","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","","","","","","","","","","","A constructor that requires additional arguments.","","","","A constructor that requires additional arguments.","","A constructor that requires additional arguments.","A constructor that requires additional arguments.","","A constructor that requires additional arguments.","","","","","","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","A constructor that requires additional arguments.","","","","","","","","","","","","","","","","","","","Return the number of bytes required to store a <code>ValueRecord</code> …","Removes the specified flags in-place.","Attempt to resolve <code>script_list_offset</code>.","Offset to ScriptList table, from beginning of GPOS table","Glyph ID of second glyph in the pair (first glyph is …","Glyph ID of second glyph in the pair (first glyph is …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Number of ValueRecords — must equal glyphCount in the …","Defines the types of data in the ValueRecord.","Defines the types of data in the ValueRecords.","Defines the types of data in valueRecord1 — for the first","ValueRecord definition — for the first glyph of the pair …","Defines the types of data in valueRecord2 — for the …","ValueRecord definition — for the second glyph of the pair","Defines positioning value(s) — applied to all glyphs in …","Positioning data for the first glyph in the pair.","Positioning for first glyph — empty if valueFormat1 = 0.","Positioning data for the first glyph in the pair.","Positioning for first glyph — empty if valueFormat1 = 0.","Positioning data for the second glyph in the pair.","Positioning for second glyph — empty if valueFormat2 = 0.","Positioning data for the second glyph in the pair.","Positioning for second glyph — empty if valueFormat2 = 0.","Array of ValueRecords — positioning values applied to …","The major and minor version of the GPOS table, as a tuple …","","","","","Horizontal value, in design units","Horizontal value, in design units","Horizontal value, in design units","Horizontal value, in design units","Attempt to resolve <code>x_device_offset</code>.","Attempt to resolve the <code>Device</code> or <code>VariationIndex</code> table for …","Offset to Device table (non-variable font) / VariationIndex","","","","","","","","","Vertical value, in design units","Vertical value, in design units","Vertical value, in design units","Vertical value, in design units","Attempt to resolve <code>y_device_offset</code>.","Attempt to resolve the <code>Device</code> or <code>VariationIndex</code> table for …","Offset to Device table (non-variable font) / VariationIndex","","","","","","","Part of AlternateSubstFormat1","Alternate Substitution Format 1","","","","","","","","","","Extension Substitution Subtable Format 1","A GSUB Extension Substitution subtable","","","","","","","","","","","GSUB","Part of LigatureSubstFormat1","","","Part of LigatureSubstFormat1","Ligature Substitution Format 1","","","","","Multiple Substitution Format 1","","","Reverse Chaining Contextual Single Substitution Format 1","","Part of MultipleSubstFormat1","","","","LookupType 1: Single Substitution Subtable","Single Substitution Format 1","Single Substitution Format 2","A GSUB ChainedSequenceContext","A GSUB Lookup subtable.","A typed GSUB LookupList table","A GSUB SequenceContext","Array of alternate glyph IDs, in arbitrary order","Number of AlternateSet tables","Array of offsets to AlternateSet tables. Offsets are from …","A dynamically resolving wrapper for <code>alternate_set_offsets</code>.","Array of offsets to coverage tables in backtrack sequence, …","A dynamically resolving wrapper for …","Number of glyphs in the backtrack sequence.","","","","","","","","","Number of components in the ligature","Array of component glyph IDs — start with the second …","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Offset to Coverage table, from beginning of substitution …","Add to original glyph ID to get substitute glyph ID","Attempt to resolve <code>extension_offset</code>.","Lookup type of subtable referenced by extensionOffset …","Offset to the extension subtable, of lookup type …","Attempt to resolve <code>feature_list_offset</code>.","Offset to FeatureList table, from beginning of GSUB table","Attempt to resolve <code>feature_variations_offset</code>.","Offset to FeatureVariations table, from beginning of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Number of glyph IDs in the substituteGlyphIDs array","Number of glyph IDs in the substituteGlyphIDs array. This …","Number of glyph IDs in the alternateGlyphIDs array","Number of glyph IDs in the substituteGlyphIDs array.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of Ligature tables","glyph ID of ligature to substitute","Array of offsets to Ligature tables. Offsets are from …","Number of LigatureSet tables","Array of offsets to LigatureSet tables. Offsets are from …","A dynamically resolving wrapper for <code>ligature_set_offsets</code>.","A dynamically resolving wrapper for <code>ligature_offsets</code>.","Array of offsets to coverage tables in lookahead sequence, …","A dynamically resolving wrapper for …","Number of glyphs in lookahead sequence.","Attempt to resolve <code>lookup_list_offset</code>.","Offset to LookupList table, from beginning of GSUB table","","","","","","","","","","","","","","","","","","","Attempt to resolve <code>script_list_offset</code>.","Offset to ScriptList table, from beginning of GSUB table","Number of Sequence table offsets in the sequenceOffsets …","Array of offsets to Sequence tables. Offsets are from …","A dynamically resolving wrapper for <code>sequence_offsets</code>.","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 1","Format identifier: format = 1","Format identifier: format = 1","Format identifier. Set to 1.","Format identifier: format = 1","Array of substitute glyph IDs — ordered by Coverage index","String of glyph IDs to substitute","Array of substitute glyph IDs — ordered by Coverage …","","","","","","","","","","","The major and minor version of the GSUB table, as a tuple …","An iterator over the deltas for a glyph.","Delta information for a single point or component in a …","","The GlyphVariationData table","The ‘gvar’ header","","If set, offsets to GlyphVariationData are 32 bits","Array of tuple records shared across all glyph variation …","A single set of tuple variation data","An iterator over the <code>TupleVariation</code>s for a specific glyph.","","Returns an iterator over all of the pairs of (variation …","Returns the set containing all flags.","Applies a tuple scalar to this delta.","The number of variation axes for this font. This must be …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the scalar for a this tuple at a given point in …","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Iterate over the deltas for this tuple.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","Bit-field that gives the format of the offset array that …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","","The number of glyphs in this font. This must match the …","Get the variation data for a specific glyph.","Offset from the start of this table to the array of …","Offsets from the start of the GlyphVariationData array to …","Returns true if this tuple provides deltas for all points …","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Returns the ‘peak’ tuple for this variation","","the point or component id","","A constructor that requires additional arguments.","","","","Removes the specified flags in-place.","Attempt to resolve <code>serialized_data_offset</code>.","Offset from the start of the GlyphVariationData table to …","The number of shared tuple records. Shared tuple records …","Attempt to resolve <code>shared_tuples_offset</code>.","Offset from the start of this table to the shared tuple …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","A packed field. The high 4 bits are flags, and the low 12 …","Array of tuple variation headers.","","Return an iterator over all of the variation tuples for …","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Major/minor version number of the glyph variations table …","The x delta","The y delta","Bit 0: Bold (if set to 1)","Bit 5: Condensed (if set to 1)","Bit 6: Extended (if set to 1)","The head (font header) table.","Bit 1: Italic (if set to 1)","The <code>macStyle</code> field for the head table.","Bit 3: Outline (if set to 1)","Bit 4: Shadow (if set to 1)","Bit 2: Underline (if set to 1)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","To compute: set it to 0, sum the entire font as uint32, …","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Number of seconds since 12:00 midnight that started …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","See the flags enum","","","","","","Deprecated (Set to 2).","Set by font manufacturer.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","0 for current format.","","0 for short offsets (Offset16), 1 for long (Offset32).","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Smallest readable size in pixels.","see somewhere else","Set to 0x5F0F3CF5.","Number of seconds since 12:00 midnight that started …","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Set to a value from 16 to 16384. Any value in this range is","Version number of the font header table, set to (1, 0)","Maximum x coordinate across all glyph bounding boxes.","Minimum x coordinate across all glyph bounding boxes.","Maximum y coordinate across all glyph bounding boxes.","Minimum y coordinate across all glyph bounding boxes.","hhea Horizontal Header Table","Maximum advance width value in ‘hmtx’ table.","Typographic ascent.","The amount by which a slanted highlight on a glyph needs …","Used to calculate the slope of the cursor (rise/run); 1 for","0 for vertical caret, 1 for horizontal.","Typographic descent.","Typographic line gap. Negative LineGap values are treated …","0 for current format.","Minimum left sidebearing value in ‘hmtx’ table for …","Minimum right sidebearing value; calculated as min(aw - …","Number of LongMetric entries in ‘hmtx’/‘vmtx’ table","","The major/minor version (1, 0)","Max(lsb + (xMax-xMin))","The hmtx (Horizontal Metrics) table","","Advance width/height, in font design units.","Advance width/height, in font design units.","","","","","","","","Returns the argument unchanged.","Paired advance width/height and left/top side bearing …","","Calls <code>U::from(self)</code>.","Leading (left/top) side bearings for glyph IDs greater …","","A constructor that requires additional arguments.","","Glyph leading (left/top) side bearing, in font design …","Glyph leading (left/top) side bearing, in font design …","","","","","The HVAR (Horizontal Metrics Variations) table","Returns the advance width delta for the specified glyph …","Attempt to resolve <code>advance_width_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Attempt to resolve <code>item_variation_store_offset</code>.","Offset in bytes from the start of this table to the item …","Returns the left side bearing delta for the specified …","Attempt to resolve <code>lsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","","Returns the left side bearing delta for the specified …","Attempt to resolve <code>rsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Major version number of the horizontal metrics variations …","Part of ChainedSequenceContextFormat2","Part of ChainedSequenceContextFormat2","","Chained Sequence Context Format 1","Chained Sequence Context Format 2","Chained Sequence Context Format 3","Part of ChainedSequenceContextFormat1","Part of ChainedSequenceContextFormat1","","featureParams for ‘cv01’-‘cv99’","A Class Definition Table","Class Definition Table Format 1","Class Definition Table Format 2","Used in ClassDefFormat2","Part of SequenceContextFormat2","Part of SequenceContextFormat2","Condition Table Format 1: Font Variation Axis Range","ConditionSet Table","Coverage Format 1","Coverage Format 2","Coverage Table","Device delta formats","Device Table","","Either a Device table (in a non-variable font) or a …","Feature Table","Feature List Table","An enum for different possible tables referenced by …","Part of FeatureList","FeatureTableSubstitution Table","Used in FeatureTableSubstitution","Part of FeatureVariations","FeatureVariations Table","","","","","","","","","","","Language System Table","","Signed 2-bit value, 8 values per uint16","Signed 4-bit value, 4 values per uint16","Signed 8-bit value, 2 values per uint16","Lookup Table","The LookupFlag bit enumeration.","Lookup List Table","Used in CoverageFormat2","Script Table","Script List Table","Script Record","","Sequence Context Format 1","Sequence Context Format 2","Sequence Context Format 3","Sequence Lookup Record","Part of SequenceContextFormat1","Part of SequenceContextFormat1","","","","","Variation index table","VariationIndex table, contains a delta-set index pair.","","","Offset to an alternate feature table, from start of the …","Offset to an alternate feature table, from start of the …","Index (zero-based) for the variation axis within the ‘…","Attempt to resolve <code>backtrack_class_def_offset</code>.","Offset to ClassDef table containing backtrack sequence …","Array of offsets to coverage tables for the backtrack …","A dynamically resolving wrapper for …","Number of glyphs in the backtrack sequence","Number of glyphs in the backtrack sequence","Number of glyphs in the backtrack sequence","Array of backtrack glyph IDs","Array of backtrack-sequence classes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of ChainedClassSequenceRule tables","Array of offsets to ChainedClassSequenceRule tables, from …","Number of ChainedClassSequenceRuleSet tables","Array of offsets to ChainedClassSequenceRuleSet tables, …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","Number of ChainedSequenceRule tables","Array of offsets to ChainedSequenceRule tables, from …","Number of ChainedSequenceRuleSet tables","Array of offsets to ChainedSeqRuleSet tables, from …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for …","The count of characters for which this feature provides …","The Unicode Scalar Value of the characters for which this …","Applied to all glyphs in the range","Applied to all glyphs in the range","Attempt to resolve <code>class_def_offset</code>.","Offset to ClassDef table, from beginning of …","Format identifier — format = 1","Format identifier — format = 2","Number of ClassRangeRecords","Array of ClassRangeRecords — ordered by startGlyphID","Number of ClassSequenceRule tables","Array of offsets to ClassSequenceRule tables, from …","Number of ClassSequenceRuleSet tables","Array of offsets to ClassSequenceRuleSet tables, from …","A dynamically resolving wrapper for …","A dynamically resolving wrapper for <code>class_seq_rule_offsets</code>.","Array of Class Values — one per glyph ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of conditions for this condition set.","Array of offsets to condition tables, from beginning of the","Offset to a condition set table, from beginning of …","Offset to a condition set table, from beginning of …","Offset to a condition set table, from beginning of …","A dynamically resolving wrapper for <code>condition_offsets</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Attempt to resolve <code>coverage_offset</code>.","Format identifier — format = 1","Format identifier — format = 2","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of …","Offset to Coverage table, from beginning of …","Array of offsets to Coverage tables, from beginning of …","A dynamically resolving wrapper for <code>coverage_offsets</code>.","","","Attempt to resolve <code>default_lang_sys_offset</code>.","Offset to default LangSys table, from beginning of Script …","Format of deltaValue array data: 0x0001, 0x0002, or 0x0003","Format, = 0x8000","A delta-set inner index — used to select a delta-set row …","A delta-set outer index — used to select an item …","Array of compressed data","The first value represents the design size in 720/inch …","Return new, empty flags","Last glyph ID in the range","Last glyph ID in the range","Last glyph ID in the range","Last glyph ID in the range","Largest size to correct, in ppem","","","","","","The ‘name’ table name ID that specifies a string (or …","The ‘name’ table name ID that specifies a string (or …","Offset to Feature table, from beginning of FeatureList","Number of FeatureRecords in this table","The feature table index to match.","The feature table index to match.","Number of feature index values for this language system —","Array of indices into the FeatureList, in arbitrary order","Offset to Feature table, from beginning of FeatureList","Offset to Feature table, from beginning of FeatureList","Attempt to resolve <code>feature_params_offset</code>.","Offset from start of Feature table to FeatureParams table, …","Array of FeatureRecords — zero-based (first feature has …","Offset to a feature table substitution table, from …","Offset to a feature table substitution table, from …","Offset to a feature table substitution table, from …","4-byte feature identification tag","4-byte feature identification tag","Number of feature variation records.","Array of feature variation records.","Maximum value of the font variation instances that satisfy …","Minimum value of the font variation instances that satisfy …","The first ‘name’ table name ID used to specify strings …","","","","","","","","","","","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 3","Format identifier: format = 1","Format identifier: format = 2","Format identifier: format = 3","Format, = 1","Format number is set to 0.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a LookupFlag from a raw value, discarding …","","","If this glyph is in the coverage table, returns its index","If this glyph is in the coverage table, returns its index","Get the class for this glyph id","Get the class for this glyph id","If this glyph is in the coverage table, returns its index","Get the class for this glyph id","","Array of glyph IDs — in numerical order","Number of glyphs in the glyph array","Size of the classValueArray","Number of glyphs in the input glyph sequence","Number of glyphs to be matched","Number of glyphs in the input sequence","","","","","","The second value has no independent meaning, but serves as …","If set, skips over base glyphs","If set, skips over ligatures","If set, skips over all combining marks","Attempt to resolve <code>input_class_def_offset</code>.","Offset to ClassDef table containing input sequence context,","Array of offsets to coverage tables for the input sequence","A dynamically resolving wrapper for <code>input_coverage_offsets</code>.","Number of glyphs in the input sequence","Total number of glyphs in the input sequence","Number of glyphs in the input sequence","Array of input glyph IDs—starting with the second glyph","Sequence of classes to be matched to the input glyph …","Array of input glyph IDs—start with second glyph","Array of input sequence classes, beginning with the second …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate over each glyph and its class.","Iterate over each glyph and its class.","Iterate over the decoded values for this device","","Iterate over each glyph and its class.","Offset to LangSys table, from beginning of Script table","Number of LangSysRecords for this script — excluding the …","Offset to LangSys table, from beginning of Script table","Offset to LangSys table, from beginning of Script table","Array of LangSysRecords, listed alphabetically by LangSys …","4-byte LangSysTag identifier","4-byte LangSysTag identifier","Attempt to resolve <code>lookahead_class_def_offset</code>.","Offset to ClassDef table containing lookahead sequence …","Array of offsets to coverage tables for the lookahead …","A dynamically resolving wrapper for …","Number of glyphs in the lookahead sequence","Number of glyphs in the lookahead sequence","Number of glyphs in the lookahead sequence","Array of lookahead glyph IDs","Array of lookahead-sequence classes","Number of lookups in this table","Lookup qualifiers","Number of LookupList indices for this feature","Index (zero-based) into the LookupList","Index (zero-based) into the LookupList","Array of indices into the LookupList — zero-based (first …","Array of offsets to Lookup tables, from beginning of …","Different enumerations for GSUB and GPOS","A dynamically resolving wrapper for <code>lookup_offsets</code>.","If not zero, skips over all marks of attachment type …","Index (base 0) into GDEF mark glyph sets structure. This …","The third value enables applications to use a single name …","Create from a raw scalar.","Number of named parameters. (May be zero.)","","","","","","Number of RangeRecords","","Array of glyph ranges — ordered by startGlyphID.","The fourth and fifth values represent the small end of the …","","","","","A constructor that requires additional arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of a feature required for this language system; if no","This bit relates only to the correct processing of the …","The ‘name’ table name ID that specifies sample text …","Offset to Script table, from beginning of ScriptList","Number of ScriptRecords","Offset to Script table, from beginning of ScriptList","Offset to Script table, from beginning of ScriptList","Array of ScriptRecords, listed alphabetically by script tag","4-byte script tag identifier","4-byte script tag identifier","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Number of SequenceLookupRecords","Array of Sequence lookup records","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Array of SequenceLookupRecords","Number of SequenceRule tables","Array of offsets to SequenceRule tables, from beginning of …","Number of SequenceRuleSet tables","Array of offsets to SequenceRuleSet tables, from beginning …","A dynamically resolving wrapper for <code>seq_rule_set_offsets</code>.","A dynamically resolving wrapper for <code>seq_rule_offsets</code>.","Index (zero-based) into the input glyph sequence","Index (zero-based) into the input glyph sequence","If set, skips over base glyphs","If set, skips over ligatures","If set, skips over all combining marks","If not zero, skips over all marks of attachment type …","This bit relates only to the correct processing of the …","If set, indicates that the lookup table structure is …","Coverage Index of first glyph ID in range","Coverage Index of first glyph ID in range","First glyph ID of the classValueArray","First glyph ID in the range","First glyph ID in the range","First glyph ID in the range","First glyph ID in the range","Smallest size to correct, in ppem","Number of subtables for this lookup","Number of feature table substitution records.","Array of feature table substitution records.","Array of offsets to lookup subtables, from beginning of …","A dynamically resolving wrapper for <code>subtable_offsets</code>.","Raw transmutation to u16.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ‘name’ table name ID that specifies a string (or …","If set, indicates that the lookup table structure is …","","Major &amp; minor version of the table: (1, 0)","","The loca table.","","","","","","","Returns the argument unchanged.","","Attempt to return the offset for a given glyph id.","Calls <code>U::from(self)</code>.","","","","","","","","","<code>maxp</code>","Maximum levels of recursion; 1 for simple components.","Maximum number of components referenced at “top level” …","Maximum contours in a composite glyph.","Maximum points in a composite glyph.","Maximum contours in a non-composite glyph.","Number of FDEFs, equal to the highest function number + 1.","Number of IDEFs.","Maximum points in a non-composite glyph.","Maximum byte count for glyph instructions.","Maximum stack depth across Font Program (‘fpgm’ …","Number of Storage Area locations.","Maximum points used in Z0.","1 if instructions do not use the twilight zone (Z0), or 2 …","The number of glyphs in the font.","","The version: 0x00005000 for version 0.5, 0x00010000 for …","The MVAR (Metrics Variations) table","ValueRecord metrics variation record","","","","","","A delta-set inner index — used to select a delta-set row …","A delta-set inner index — used to select a delta-set row …","A delta-set outer index — used to select an item …","A delta-set outer index — used to select an item …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Attempt to resolve <code>item_variation_store_offset</code>.","Offset in bytes from the start of this table to the item …","Returns the metric delta for the specified tag and …","","","Four-byte tags used to represent particular metric or …","","","","","The number of value records — may be zero.","The size in bytes of each value record — must be greater …","Array of value records that identify target items and the …","Four-byte tag identifying a font-wide measure.","Four-byte tag identifying a font-wide measure.","Major version number of the horizontal metrics variations …","Cap height.","GaspRange[0]","GaspRange[1]","GaspRange[2]","GaspRange[3]","GaspRange[4]","GaspRange[5]","GaspRange[6]","GaspRange[7]","GaspRange[8]","GaspRange[9]","Horizontal ascender.","Horizontal clipping ascent.","Horizontal clipping descent.","Horizontal caret offset.","Horizontal caret run.","Horizontal caret rise.","Horizontal descender.","Horizontal line gap.","Subscript em x-offset.","Subscript em x-size.","Subscript em y-offset.","Subscript em y-size.","Superscript em x-offset.","Superscript em x-size.","Superscript em y-offset.","Superscript em y-size.","Strikeout offset.","Strikeout size.","Underline offset.","Underline size.","Vertical ascender.","Vertical caret offset.","Vertical caret run.","Vertical caret rise.","Vertical descender.","Vertical line gap.","X-height.","Compatible full (Macintosh only).","Copyright notice.","An iterator over the chars of a name record.","Dark background palette.","Description of the typeface.","Name of the designer of the typeface.","URL of typeface designer (with protocol, e.g., http://, …","The encoding used by the name table.","Font family name.","Full font name that reflects all family and relevant …","License description.","URL where additional licensing information can be found.","Light background palette.","Part of Name","Manufacturer name.","","A helper for encoding and decoding Mac OS Roman encoded …","Naming table version 1","Identifier for an informational string (or name).","Name Records","Entry for a name in the naming table.","PostScript CID findfont name.","PostScript name for the font.","Sample text.","Font subfamily name.","Trademark; this is used to save any trademark …","Typographic family name.","Typographic subfamily name.","Unique font identifier.","","","Variations PostScript name prefix.","URL of font vendor (with protocol, e.g., http://, ftp://).","Version string.","WWS family name.","WWS subfamily name.","","","","","","","","","","","","","","","An iterator over the <code>char</code>s in this name.","","","","","","","","","","","","","","Number of name records.","Convert from a mac-roman encoded byte to a <code>char</code>","","convert from a char to a mac-roman encoded byte, if the …","Platform-specific encoding ID.","Platform-specific encoding ID.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return a type that can decode the string data for this …","Number of language-tag records.","Language-tag string offset from start of storage area (in …","Language-tag string offset from start of storage area (in …","The language-tag records where langTagCount is the number …","Language ID.","Language ID.","Language-tag string length (in bytes)","String length (in bytes).","Language-tag string length (in bytes)","String length (in bytes).","Name ID.","Name ID.","The name records where count is the number of records.","Create a new identifier from a raw u16 value.","Determine the coding from the platform and encoding id.","","","Platform ID.","Platform ID.","Returns an iterator over the set of predefined identifiers …","","Offset to start of string storage (from start of table).","Return a type that can decode the string data for this …","The FontData containing the encoded name strings.","String offset from start of storage area (in bytes).","String offset from start of storage area (in bytes).","Return the memory representation of this identifier as a …","","","","","","","","","","Return the identifier as a u16.","","","","","","","","","","","","","","","","","","","","","","Table version number (0 or 1)","Bit 5: Glyphs are emboldened.","Bit 0: Font contains italic or oblique glyphs, otherwise …","Bit 2: Glyphs have their foreground and background …","Bit 9: Font contains oblique glyphs.","Bit 3: Outline (hollow) glyphs, otherwise they are solid.","<code>OS/2</code>","Bit 6: Glyphs are in the standard weight/style for the …","Bit 4: Glyphs are overstruck.","OS/2 selection flags","Bit 1: Glyphs are underscored.","Bit 7: If set, it is strongly recommended that …","Bit 8: The font has ‘name’ table strings consistent …","Font Vendor Identification.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","Font selection flags.","Type flags.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","PANOSE classification number.","","","Removes the specified flags in-place.","This metric specifies the distance between the baseline …","Font-family class and subclass. This parameter is a …","The typographic ascender for this font.","The typographic descender for this font.","The typographic line gap for this font.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","This metric specifies the distance between the baseline …","","","Toggles the specified flags in-place.","","","","Code page character range bits 0-31.","Code page character range bits 32-63.","Unicode Character Range.","Unicode Character Range (bits 32-63).","Unicode Character Range (bits 64-95).","Unicode Character Range (bits 96-127).","Returns the union of between the flags in <code>self</code> and <code>other</code>.","his is the Unicode code point, in UTF-16 encoding, of a …","This is the Unicode code point, in UTF-16 encoding, of a …","The minimum Unicode index (character code) in this font.","The maximum Unicode index (character code) in this font.","This field is used for fonts with multiple optical styles.","This field is used for fonts with multiple optical styles.","This field is used for fonts with multiple optical styles.","Weight class.","Width class.","The “Windows ascender” metric.","The “Windows descender” metric.","","Average weighted escapement.","The position of the top of the strikeout stroke relative …","Thickness of the strikeout stroke in font design units.","The recommended horizontal offset in font design units for …","The recommended horizontal size in font design units for …","The recommended vertical offset in font design units for …","The recommended vertical size in font design units for …","The recommended horizontal offset in font design units for …","The recommended horizontal size in font design units for …","The recommended vertical offset in font design units for …","The recommended vertical size in font design units for …","The 258 glyph names defined for Macintosh TrueType fonts","A string in the post table.","post (PostScript) table","","","","","","","","","","Returns the argument unchanged.","","Array of indices into the string data. See below for …","Calls <code>U::from(self)</code>.","Set to 0 if the font is proportionally spaced, non-zero if …","Italic angle in counter-clockwise degrees from the …","Maximum memory usage when an OpenType font is downloaded …","Maximum memory usage when an OpenType font is downloaded.","Minimum memory usage when an OpenType font is downloaded …","Minimum memory usage when an OpenType font is downloaded.","Number of glyphs (this should be the same as numGlyphs in …","The number of glyph names covered by this table","","","","Storage for the string data.","","","","","This is the suggested distance of the top of the underline …","Suggested values for the underline thickness. In general, …","0x00010000 for version 1.0 0x00020000 for version 2.0 …","State for processing the blend operator for DICTs and …","","Errors that are specific to PostScript processing.","","Associates a glyph identifier with a Font DICT.","FdSelect format 0.","FdSelect format 3.","FdSelect format 4.","Range struct for FdSelect format 3.","Range struct for FdSelect format 4.","","","","","","","","Common type for uniform access to CFF and CFF2 index …","An array of variable-sized objects in a <code>CFF</code> table.","An array of variable-sized objects in a <code>CFF2</code> table.","","","","","","","Reference to a Latin-1 encoded string.","","","","","Either a signed 32-bit integer or a 16.16 fixed point …","","The PostScript standard string set.","Operand stack for DICTs and charstrings.","","","PostScript string identifier (SID).","","Apply the <code>blend</code> operator.","Apply a prefix sum to decode delta-encoded numbers.","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the characters of the string.","Parsing for PostScript charstrings.","","","","","","","","","","","","","","","","","","","","","Returns the number of objects in the index.","Number of objects stored in INDEX.","Number of objects stored in INDEX.","Array containing the object data.","Array containing the object data.","","Parsing for PostScript DICTs.","","","","","","","FD index for all glyphs in range.","FD index for all glyphs in range.","FD index for all glyphs in range.","FD index for all glyphs in range.","FD selector array (one entry for each glyph).","First glyph index in range.","First glyph index in range.","First glyph index in range.","First glyph index in range.","Returns an array of <code>N</code> 16.16 fixed point values starting at …","Returns an iterator yielding all elements on the stack as …","","","","","","","","","","Returns the associated font DICT index for the given glyph …","Format = 0.","Format = 3.","Format = 4.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the data for the object at the given index.","Returns the data for the object at the given index.","Returns the data for the object at the given index.","Returns the 16.16 fixed point value at the given index on …","Returns the 32-bit integer at the given index on the stack.","Returns the offset at the given index.","Returns the offset of the object at the given index.","Returns the offset of the object at the given index.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the number of elements on the stack is odd.","Number of ranges.","Number of ranges.","","","Creates a new index from the given data.","Creates an identifier from a 16-bit unsigned integer.","Creates a new Latin-1 encoded string reference from the …","Returns an iterator yielding all elements on the stack as …","Object array element size.","Object array element size.","Bytes containing <code>count + 1</code> offsets each of <code>off_size</code>.","Bytes containing <code>count + 1</code> offsets each of <code>off_size</code>.","","","","Pops a 16.16 fixed point value from the top of the stack.","Pops a 32-bit integer from the top of stack.","","Range3 array.","Range4 array.","","","","","","","","Returns the number of variation regions for the currently …","Reverse the order of all elements on the stack.","Returns an iterator yielding scalars for each variation …","Sentinel GID. Set equal to the number of glyphs in the …","Sentinel GID. Set equal to the number of glyphs in the …","Sets the active variation store index.","Returns the total size in bytes of the index table.","Returns the total size in bytes of the index table.","Returns the total size in bytes of the index table.","Resolves the identifier as a standard string.","Computes a bias that is added to a subroutine operator in a","","","","","","","","","","","","Returns the underlying identifier as a 16-bit unsigned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for processing commands resulting from charstring …","Maximum nesting depth for subroutine calls.","Command sink that sends the results of charstring …","","","","","Bitmask defining the counter hints that should be made …","","","Evaluates the given charstring and emits the resulting …","Returns the argument unchanged.","Bitmask defining the hints that should be made active for …","Horizontal stem hint at <code>y</code> with height <code>dy</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Vertical stem hint at <code>x</code> with width <code>dx</code>.","","","","","","","","","","","","","","Operand for the <code>BlueValues</code>, <code>OtherBlues</code>, <code>FamilyBlues</code> and …","","","","","","","","","","","","","","","","","","","","","PostScript DICT Operator with its associated operands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PostScript DICT operator.","","","","","","","","","","","","","","","","","","","","Operand for the <code>StemSnapH</code> and <code>StemSnapV</code> operators.","","","","","","","Either a PostScript DICT operator or a (numeric) operand.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a byte slice containing DICT data, returns an …","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Given a byte slice containing DICT data, returns an …","","","","","","","","","","","","","","","","","","","","","Bit 0: Set to 1.","Bit 1: Draw outlines.","Glyph data table","Sbix header flags.","The sbix (Standard Bitmap Graphics) table","Strike header table","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The actual embedded graphic data. The total length is …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","Bit 0: Set to 1. Bit 1: Draw outlines. Bits 2 to 15: …","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","","Offset from the beginning of the strike data header to …","Indicates the format of the embedded graphic data: one of …","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Number of bitmap strikes.","The horizontal (x-axis) position of the left edge of the …","The vertical (y-axis) position of the bottom edge of the …","","The PPEM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A constructor that requires additional arguments.","A constructor that requires additional arguments.","","","","Removes the specified flags in-place.","Offsets from the beginning of the ‘sbix’ table to data …","A dynamically resolving wrapper for <code>strike_offsets</code>.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Table version number — set to 1.","Axis Records","Axis Value Tables","An array of AxisValue tables.","Axis value table format 1","Axis value table format 2","Axis value table format 3","Axis value table format 4","Part of AxisValueFormat4","Axis value table flags.","If set, it indicates that the axis value represents the …","","","","","If set, this axis value table provides axis value …","STAT (Style Attributes Table)","Returns the set containing all flags.","The total number of axes contributing to this axis-values …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","Zero-base index into the axis record array identifying the …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","A value that applications can use to determine primary …","A value that applications can use to determine primary …","A tag identifying the axis of design variation.","A tag identifying the axis of design variation.","The number of axis value tables.","Array of offsets to axis value tables, in bytes from the …","A dynamically resolving wrapper for <code>axis_value_offsets</code>.","Array of AxisValue records that provide the combination of …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Attempt to resolve <code>design_axes_offset</code>.","Offset in bytes from the beginning of the STAT table to the","The number of axis records. In a font with an ‘fvar’ …","The size in bytes of each axis record.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Name ID used as fallback when projection of names into a …","Returns an empty set of flags.","","","","Flags — see below for details.","Flags — see below for details.","Flags — see below for details.","Flags — see below for details.","","","","","","","","Format identifier — set to 1.","Format identifier — set to 2.","Format identifier — set to 3.","Format identifier — set to 4.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if no flags are currently stored.","The numeric value for a style-linked mapping from this …","A nominal numeric value for this attribute value.","Returns the complement of this set of flags.","Offset in bytes from the beginning of the STAT table to the","Attempt to resolve <code>offset_to_axis_value_offsets</code>.","","","","The maximum value for a range associated with the specified","The minimum value for a range associated with the specified","","A constructor that requires additional arguments.","","","","","","","","Removes the specified flags in-place.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","A numeric value for this attribute value.","A numeric value for this attribute value.","A numeric value for this attribute value.","A numeric value for this attribute value.","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","The name ID for entries in the ‘name’ table that …","Major/minor version number. Set to 1.2 for new fonts.","Mask for the low 12 bits to give the shared tuple records …","Implements the logic for iterating over the individual runs","Outer and inner indices for reading from an …","The DeltaSetIndexMap table","The DeltaSetIndexMap table format 0","The DeltaSetIndexMap table format 1","Flag indicating that this tuple variation header includes …","Entry format for a DeltaSetIndexMap.","Floating point item delta computed by an item variation …","Trait for applying floating point item deltas to target …","","","Mask for the low 4 bits, which give the count of bits …","Flag indicating that this tuple variation table applies to …","The ItemVariationData subtable","The ItemVariationStore table","Mask for bits that indicate the size in bytes minus one of …","Flag indicating that the serialized data for this tuple …","Packed Deltas","Packed “Point” Numbers","An iterator over the packed point numbers data.","The RegionAxisCoordinates record","Flag indicating that some or all tuple variation tables …","Mask for the low 12 bits to give the shared tuple records …","A Tuple Record","","The ‘tupleVariationCount’ field of the Tuple Variation …","TupleVariationHeader","A helper type for iterating over <code>TupleVariationHeader</code>s.","The VariationRegion record","The VariationRegionList table","","Returns the set containing all flags.","","The number of variation axes for this font. This must be …","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the delta value for the specified index and set …","Computes the delta value in floating point for the …","Computes a scalar value for this region and the specified …","Computes a floating point scalar value for this region and …","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","The number of points in this set","","","","","","Returns an iterator over the per-region delta values for …","Delta-set rows.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","<code>true</code> if the header includes an embedded peak tuple.","Returns an empty set of flags.","The region end coordinate value for the current axis.","The region end coordinate value for the current axis.","A packed field that describes the compressed …","A packed field that describes the compressed …","","","","","","","","","","","","","","","","","","","","","","","","DeltaSetIndexMap format: set to 0.","DeltaSetIndexMap format: set to 1.","Format— set to 1","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","","","Convert from underlying bit representation, dropping any …","","","","","Returns the delta set index for the specified value.","","","","","","","Inner delta set index.","Inserts the specified flags in-place.","Intermediate end tuple record for this tuple variation …","<code>true</code> if the header includes the two intermediate region …","Intermediate start tuple record for this tuple variation …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if no flags are currently stored.","The number of delta sets for distinct items.","A dynamically resolving wrapper for …","The number of item variation data subtables.","Offsets in bytes from the start of the item variation …","Iterate over the packed points","","The number of mapping entries.","The number of mapping entries.","The delta-set index mapping data. See details below.","The delta-set index mapping data. See details below.","","","","Returns the complement of this set of flags.","Outer delta set index.","","","","","","","The region peak coordinate value for the current axis.","The region peak coordinate value for the current axis.","Peak tuple record for this tuple variation table — …","<code>true</code> if the data for this table includes packed point …","A constructor that requires additional arguments.","","","","","","A constructor that requires additional arguments.","","A constructor that requires additional arguments.","","","","","Array of region axis coordinates records, in the order of …","Array of region axis coordinates records, in the order of …","The number of variation region tables in the variation …","The number of variation regions referenced.","Array of indices into the variation region list for the …","Removes the specified flags in-place.","<code>true</code> if any tables reference a shared set of point numbers","","read point numbers off the front of this data, returning …","The region start coordinate value for the current axis.","The region start coordinate value for the current axis.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A packed field. The high 4 bits are flags (see below). The …","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Coordinate array specifying a position within the font’s …","Coordinate array specifying a position within the font’s …","The size in bytes of the serialized data for this tuple …","Attempt to resolve <code>variation_region_list_offset</code>.","Offset in bytes from the start of the item variation store …","Array of variation regions.","A packed field: the high bit is a flag—see details below.","The vhea Vertical Header Table","Maximum advance height value in ‘vmtx’ table.","Typographic ascent.","The amount by which a slanted highlight on a glyph needs …","Used to calculate the slope of the cursor (rise/run); 1 for","0 for vertical caret, 1 for horizontal.","Typographic descent.","Typographic line gap. Negative LineGap values are treated …","0 for current format.","Minimum bottom sidebearing value","Minimum top sidebearing value in ‘vmtx’ table for …","Number of LongMetric entries in ‘hmtx’/‘vmtx’ table","","The major/minor version (1, 1)","Defined as max( tsb + (yMax-yMin)).","","The vmtx (Vertical Metrics) table","A constructor that requires additional arguments.","","Top side bearings for glyph IDs greater than or equal to …","Paired advance height and top side bearing values for each …","The VVAR (Vertical Metrics Variations) table","Returns the advance height delta for the specified glyph …","Attempt to resolve <code>advance_height_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Returns the bottom side bearing delta for the specified …","Attempt to resolve <code>bsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Attempt to resolve <code>item_variation_store_offset</code>.","Offset in bytes from the start of this table to the item …","","Returns the top side bearing delta for the specified glyph …","Attempt to resolve <code>tsb_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Returns the vertical origin delta for the specified glyph …","Attempt to resolve <code>v_org_mapping_offset</code>.","Offset in bytes from the start of this table to the …","Major version number of the horizontal metrics variations …"],"i":[70,0,0,72,0,0,0,72,0,0,0,0,0,9,9,9,9,9,9,9,9,0,9,0,0,0,0,229,110,0,0,9,0,0,0,0,9,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,21,21,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,20,57,9,1,62,72,73,74,21,20,57,9,1,62,72,73,74,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,62,62,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,20,57,9,1,62,72,73,74,21,20,57,9,1,62,72,73,74,416,416,62,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,230,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,416,74,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,101,1,101,1,101,1,1,1,1,1,1,1,1,416,416,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,62,416,416,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,9,9,62,1,1,72,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,21,20,57,9,1,62,72,73,74,74,1,1,416,416,416,416,20,57,1,1,1,1,1,1,73,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,416,416,416,416,1,1,62,1,416,416,1,416,416,416,416,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,20,57,9,1,62,72,73,74,1,21,20,57,73,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,57,1,1,1,1,1,1,73,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,20,57,73,1,1,1,1,1,1,1,1,1,62,62,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,416,416,1,1,21,72,73,74,1,128,128,1,1,1,1,1,1,101,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,1,1,1,1,1,1,1,1,1,1,62,62,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,62,1,1,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,108,1,1,1,1,111,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,101,21,21,21,1,21,127,21,21,1,1,1,1,1,1,417,418,1,417,418,1,1,1,1,1,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,1,1,1,1,1,21,1,1,21,1,1,1,1,1,1,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,74,74,1,101,1,108,0,62,62,21,21,20,57,9,1,62,72,73,74,9,128,1,1,1,1,1,1,1,1,1,21,20,57,9,1,62,72,73,74,21,20,57,9,1,62,72,73,74,1,1,1,1,101,1,1,1,1,21,20,57,9,1,62,72,73,74,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,101,1,1,416,416,416,416,416,416,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,29,43,29,43,43,43,43,29,43,29,43,29,43,43,29,43,43,43,29,29,43,43,29,43,29,43,29,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,25,25,28,28,28,231,28,231,28,231,28,231,28,231,28,231,28,231,28,231,231,231,28,231,28,231,28,231,28,28,25,28,28,231,231,28,231,28,231,28,231,28,231,25,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,47,232,233,234,47,233,47,235,235,41,41,45,44,146,146,45,45,44,45,45,46,146,146,235,235,46,45,41,113,37,45,41,113,37,45,41,113,37,45,41,113,37,232,233,234,47,235,235,234,234,97,97,113,113,45,41,113,45,41,113,37,236,236,45,41,113,37,236,236,97,113,97,113,113,97,113,97,113,113,41,41,41,236,146,46,44,235,47,97,232,233,234,37,37,233,45,41,113,37,45,41,113,37,45,41,113,37,45,41,113,37,236,236,236,0,247,0,246,0,0,0,0,0,0,0,246,248,248,244,244,244,244,244,0,239,0,0,0,0,0,0,0,246,0,247,0,239,237,238,238,239,240,240,238,238,238,238,242,243,49,49,94,239,239,239,239,239,239,239,49,240,239,48,238,244,131,245,94,246,247,95,248,49,240,239,48,238,244,131,245,94,246,247,95,248,240,240,240,240,240,240,49,240,239,48,238,244,131,245,94,246,247,95,248,49,240,239,48,238,244,131,245,94,246,247,95,248,49,240,239,48,238,131,245,49,49,239,95,94,94,239,94,240,240,239,239,49,49,49,240,239,48,238,131,245,246,237,49,49,49,240,239,239,239,239,239,48,238,131,245,246,94,49,240,239,48,238,244,131,245,94,246,247,95,248,239,239,239,249,243,131,245,131,245,49,240,239,48,238,131,245,48,238,48,238,49,49,48,48,48,48,48,48,250,242,251,249,243,250,242,251,249,243,242,243,250,242,251,249,243,49,49,49,49,239,239,239,49,240,239,48,238,244,131,245,94,246,247,95,248,239,237,49,240,240,94,95,240,240,240,240,240,240,239,249,243,49,49,240,240,240,240,49,240,239,48,238,131,245,49,49,49,49,237,250,242,251,249,243,244,244,239,131,131,250,251,49,49,239,239,49,240,239,48,238,244,131,245,94,246,247,95,248,239,239,49,240,239,48,238,244,131,245,94,246,247,95,248,49,240,239,48,238,244,131,245,94,246,247,95,248,49,240,239,48,238,244,131,245,94,246,247,95,248,239,49,49,48,48,48,48,48,48,48,238,48,238,240,240,245,245,245,245,0,52,52,52,52,0,53,53,53,53,53,0,0,252,54,54,54,54,54,54,252,54,54,252,252,54,54,252,54,252,54,54,54,54,54,54,252,54,54,54,0,0,256,55,55,55,55,55,55,55,256,55,256,256,55,256,55,55,55,256,55,256,256,55,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,258,0,0,259,259,259,259,259,259,259,259,259,258,258,0,0,0,0,0,258,0,171,0,171,0,258,190,190,105,258,259,260,138,137,221,216,190,171,153,154,152,105,258,259,260,138,137,221,216,190,171,153,154,152,105,258,259,260,138,137,221,216,190,171,153,154,152,105,258,259,260,138,137,221,216,190,171,153,154,152,258,260,138,137,216,190,258,221,221,221,105,105,76,138,137,138,137,262,263,260,260,262,258,260,138,137,216,190,171,263,260,260,105,258,260,138,137,221,216,190,171,264,265,262,263,266,267,268,269,270,105,258,259,260,138,137,221,216,190,171,153,154,152,258,137,216,137,216,264,262,263,267,266,268,269,258,260,138,137,216,190,262,260,260,260,260,262,105,258,259,260,138,137,221,216,190,171,153,154,152,153,154,152,266,262,268,270,264,265,262,263,266,267,268,269,264,265,262,263,266,267,268,269,270,76,262,268,270,258,153,154,152,221,221,221,267,266,268,269,76,261,271,270,258,260,138,137,216,190,105,105,262,261,76,264,265,262,263,266,267,268,269,270,261,271,259,259,262,262,267,138,137,138,137,262,138,138,190,190,265,105,105,105,105,258,259,260,138,137,221,216,190,171,153,154,152,258,105,258,259,260,138,137,221,216,190,171,153,154,152,105,258,259,260,138,137,221,216,190,171,153,154,152,105,258,259,260,138,137,221,216,190,171,153,154,152,216,216,271,270,221,221,76,0,0,0,0,86,0,0,0,0,0,86,86,0,0,0,0,32,32,32,0,86,86,86,86,86,86,86,86,0,218,218,32,86,86,86,86,86,0,0,86,32,86,86,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,32,112,112,32,32,32,32,32,32,86,32,32,86,32,86,86,86,86,86,32,32,32,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,86,272,273,274,275,81,82,274,275,81,82,276,277,278,279,280,280,83,83,38,83,83,40,158,39,68,218,274,275,81,82,112,32,86,40,158,39,68,218,274,275,81,82,112,32,86,281,282,283,284,285,286,278,279,287,288,281,282,283,284,285,286,278,279,287,288,68,68,68,83,83,67,40,158,39,68,218,274,275,81,82,112,32,86,40,158,39,68,218,274,275,81,82,112,32,86,40,158,274,275,81,82,112,86,289,290,291,292,281,282,289,290,291,292,281,282,78,79,280,112,86,211,210,293,294,211,210,293,294,281,282,68,68,40,158,274,275,81,82,112,86,78,79,295,40,40,40,158,39,68,274,275,81,82,112,86,67,296,297,295,272,273,289,290,291,292,281,282,298,299,300,301,293,294,302,303,283,284,304,305,285,286,276,277,278,279,306,307,287,288,280,40,158,39,68,218,274,275,81,82,112,32,86,112,86,298,299,40,158,39,40,158,39,40,158,274,275,81,82,112,86,40,158,39,68,218,274,275,81,82,112,32,86,83,83,83,83,83,83,112,86,38,83,67,83,157,295,40,40,78,79,298,300,301,293,294,302,303,283,284,304,305,285,286,276,277,278,279,306,307,287,288,39,298,300,301,293,294,302,303,283,284,304,305,285,286,276,277,278,279,306,307,287,288,39,39,157,157,272,273,158,274,275,81,82,158,274,275,81,82,40,158,274,275,81,82,112,86,291,292,291,292,83,38,157,67,296,297,78,79,295,272,273,289,290,291,292,281,282,298,299,300,301,211,210,293,294,302,303,283,284,304,305,285,286,276,277,278,279,306,307,287,288,280,218,32,218,32,304,305,285,286,302,303,283,284,302,303,283,284,280,280,281,282,68,68,81,82,81,82,40,158,39,68,218,274,275,81,82,112,32,86,112,86,300,301,300,301,40,158,39,68,218,274,275,81,82,112,32,86,40,158,39,68,218,274,275,81,82,112,32,86,40,158,39,68,218,274,275,81,82,112,32,86,83,83,83,83,83,297,273,290,292,282,210,294,303,284,305,286,277,279,307,288,275,82,275,82,83,83,83,289,290,291,292,289,290,291,292,289,290,296,297,296,297,306,307,287,288,211,210,211,210,289,290,291,292,289,290,291,292,289,290,296,297,296,297,306,307,287,288,211,210,211,210,0,0,0,185,185,185,80,80,185,185,185,185,185,185,185,80,80,185,80,185,80,185,80,185,80,185,80,92,92,92,185,185,185,185,185,80,185,185,185,185,185,80,185,80,185,185,185,80,80,185,80,185,185,185,185,80,185,185,92,92,92,92,92,92,92,92,92,185,80,92,80,80,185,185,185,185,80,185,185,185,80,185,80,185,80,185,92,0,102,102,102,102,0,103,103,103,103,103,0,0,0,0,125,27,125,125,125,26,26,125,26,26,26,148,26,148,26,148,26,148,26,148,148,26,26,26,26,26,148,26,148,26,148,26,125,125,125,27,26,148,26,26,26,26,26,26,148,125,27,148,27,148,148,26,148,26,148,26,148,26,148,125,0,0,311,0,0,0,0,0,0,311,0,0,0,0,0,51,51,51,0,0,0,0,311,0,0,311,0,0,0,126,126,23,23,311,51,311,51,160,308,309,310,160,309,160,311,51,311,51,311,308,310,23,159,23,159,175,175,311,310,310,311,311,175,311,51,311,126,126,23,311,311,51,126,126,126,126,159,159,159,126,126,175,126,126,311,311,24,24,126,23,24,159,160,308,309,310,175,51,51,311,51,311,311,51,311,51,311,51,126,313,313,0,0,315,0,0,320,0,320,320,320,0,0,314,313,312,313,312,319,319,0,0,312,313,313,315,0,0,314,314,314,0,0,313,313,313,313,313,313,312,312,312,312,312,313,318,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,315,314,195,316,317,318,319,320,312,313,315,314,195,316,317,318,319,320,195,195,312,313,315,314,195,316,317,318,319,320,312,313,315,314,195,316,317,318,319,320,312,313,321,321,321,317,319,312,313,321,312,313,314,195,317,312,313,312,313,322,312,313,314,195,316,317,318,319,318,195,312,312,312,312,312,313,313,313,313,313,314,195,316,317,318,319,320,320,312,313,315,314,195,316,317,318,319,320,312,313,195,312,313,312,313,318,322,195,322,312,313,312,313,322,322,321,312,313,312,313,312,313,315,314,195,316,317,318,319,320,312,313,195,195,195,316,312,313,322,322,321,315,316,195,195,195,316,316,312,313,322,130,322,321,315,322,315,312,313,195,195,312,313,312,313,312,313,315,314,195,316,317,318,319,320,0,312,313,320,312,313,318,312,313,315,314,195,316,317,318,319,320,312,313,315,314,195,316,317,318,319,320,312,313,315,314,195,316,317,318,319,320,312,313,316,322,321,315,322,321,315,317,317,316,322,321,315,322,321,315,317,317,419,419,420,420,191,0,0,0,0,0,0,341,342,0,0,0,0,341,342,0,341,342,0,0,0,0,341,0,0,0,0,421,422,328,332,333,421,422,328,332,333,421,422,328,0,0,0,0,0,0,0,0,0,0,0,341,342,341,342,341,342,341,342,0,0,0,0,0,0,0,0,0,0,341,342,0,0,0,0,0,191,191,191,191,191,191,191,191,191,325,326,327,326,42,42,42,329,329,36,329,329,36,191,191,191,191,191,191,191,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,330,330,330,63,63,330,330,330,330,219,191,328,176,332,333,184,63,331,106,42,85,174,219,191,328,176,332,333,184,63,331,106,42,85,174,191,162,162,219,184,63,331,42,85,174,191,334,335,336,330,337,334,335,336,330,337,219,191,191,191,106,106,106,337,337,219,191,106,106,106,338,338,338,136,136,136,136,219,191,191,191,191,191,176,184,63,331,106,42,85,174,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,191,191,191,191,191,191,191,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,191,85,85,85,339,339,161,161,161,339,339,136,136,340,340,340,340,174,174,174,340,340,173,340,340,173,176,176,176,329,339,329,339,176,176,329,339,340,172,329,339,329,339,172,191,336,336,336,183,183,191,334,335,336,330,337,329,339,340,338,219,136,341,325,326,327,172,334,335,336,183,330,337,329,36,339,161,162,340,173,338,342,328,332,333,184,63,331,42,85,174,219,219,341,183,36,161,162,173,342,328,332,333,184,63,331,42,85,174,191,191,136,136,184,184,191,191,219,191,328,176,332,333,184,63,331,106,42,85,174,191,191,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,219,341,342,191,328,176,332,333,184,63,331,106,42,85,174,191,335,334,335,336,330,336,330,334,184,331,184,331,184,331,184,331,335,136,219,219,219,219,325,326,327,328,327,328,327,219,219,219,219,219,219,219,219,325,326,327,328,327,328,327,219,219,219,219,351,352,0,0,351,352,0,0,351,352,0,0,351,0,0,0,0,423,424,345,423,424,345,423,424,0,0,351,352,0,0,0,0,351,352,0,351,352,0,0,0,0,351,352,0,0,0,0,0,0,0,19,343,343,343,344,344,344,351,352,345,351,352,345,345,345,164,164,346,347,348,343,349,344,346,347,348,343,349,344,346,350,350,350,139,139,139,139,351,352,345,347,202,19,344,351,352,345,163,164,163,349,349,349,163,344,344,344,139,139,139,351,346,347,348,202,343,19,349,163,164,350,352,344,345,351,352,345,139,139,348,348,348,346,347,348,343,349,350,344,347,202,344,345,351,352,345,351,352,345,351,352,345,139,0,0,0,0,0,0,120,0,0,0,0,134,120,353,140,120,120,120,120,120,120,120,356,120,135,134,354,355,353,356,120,135,134,354,355,353,120,135,134,354,355,353,120,135,134,354,355,353,120,354,135,120,355,120,354,120,120,120,353,140,120,120,120,120,120,135,355,353,356,120,135,134,354,355,353,120,120,120,135,140,140,140,140,354,120,120,120,120,356,120,135,134,354,355,353,356,355,120,356,355,120,120,354,354,353,140,203,358,203,135,120,358,358,140,140,140,120,120,120,135,134,354,355,353,120,120,356,120,135,134,354,355,353,356,120,135,134,354,355,353,358,358,203,134,356,120,135,134,354,355,353,120,140,353,353,170,170,170,0,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,143,170,170,170,170,143,170,170,170,170,143,170,170,170,170,170,143,143,170,170,170,170,143,170,143,170,170,170,170,170,143,143,143,143,170,170,143,170,170,170,170,170,170,170,170,170,170,143,143,143,143,143,143,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,141,141,141,141,141,141,141,141,141,141,145,141,141,145,141,145,145,141,141,141,141,141,141,0,147,147,147,147,147,147,147,147,147,147,147,147,147,0,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,35,34,367,368,35,34,367,368,367,368,0,0,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,0,115,0,0,98,100,208,208,208,91,360,360,361,361,60,58,361,60,58,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,56,56,360,360,360,56,59,59,362,362,362,59,363,363,64,64,364,364,365,366,366,366,65,65,364,364,364,65,365,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,167,187,64,199,98,369,369,117,117,117,369,370,364,362,360,371,372,370,364,362,360,373,373,167,98,374,374,375,376,376,376,375,377,167,187,64,187,64,375,167,187,64,199,98,363,363,116,114,208,208,96,96,116,116,359,359,114,117,117,117,116,116,118,118,91,91,363,167,198,155,116,187,64,199,98,117,208,370,364,373,362,360,361,91,363,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,167,167,98,371,372,365,366,35,34,379,371,371,365,201,66,373,167,187,64,199,98,377,167,167,167,360,360,361,361,60,58,361,201,66,60,58,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,365,366,375,35,34,155,374,155,155,374,155,155,360,360,361,361,60,58,361,60,58,380,379,359,199,199,359,380,379,380,167,379,377,98,363,167,187,64,199,98,372,377,372,377,197,374,96,114,359,380,379,371,372,365,366,370,200,201,364,65,66,373,362,59,60,360,56,58,361,375,376,118,369,91,378,377,381,363,35,34,367,368,100,115,359,35,34,367,368,100,96,167,363,198,197,198,198,197,198,198,201,66,373,60,58,361,201,66,373,60,58,361,200,200,370,370,370,200,199,199,167,167,167,167,167,167,187,187,365,187,64,187,64,375,379,378,378,379,379,167,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,167,98,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,115,167,198,155,116,187,35,64,34,199,367,368,98,100,117,208,381,167,118,378,381,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,0,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,178,178,178,220,178,0,220,220,220,220,178,178,178,220,220,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,104,0,104,104,104,104,0,104,104,104,104,104,0,104,384,0,0,0,0,0,104,104,104,104,104,104,104,104,384,384,104,104,104,104,104,104,385,156,180,382,383,384,104,385,156,180,382,383,384,382,104,156,180,382,383,384,104,156,180,382,383,384,104,179,385,104,385,180,180,104,382,384,104,104,156,180,382,382,104,104,385,156,180,382,383,384,104,104,104,385,156,180,382,383,384,382,383,156,179,156,156,179,180,180,156,180,156,180,180,180,179,104,384,383,104,180,180,104,179,179,180,179,180,180,104,104,156,180,382,383,384,104,104,382,104,104,385,156,180,382,383,384,104,385,156,180,382,383,384,104,385,156,180,382,383,384,179,124,124,124,124,124,0,124,124,0,124,124,124,182,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,182,182,124,124,124,124,124,124,124,182,124,182,124,182,182,182,182,182,124,124,182,124,124,124,124,124,124,182,182,182,182,182,182,124,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,0,0,0,207,207,207,207,207,207,207,207,207,207,186,186,207,186,186,186,186,186,186,186,186,186,207,207,186,207,207,207,207,186,186,186,0,129,0,129,0,0,0,0,0,0,392,393,391,391,393,393,392,0,0,0,129,129,129,129,129,129,0,129,129,129,129,0,129,0,0,129,129,0,129,389,389,390,389,391,392,255,254,393,188,189,129,390,389,391,392,255,254,393,188,189,129,254,0,389,391,392,255,254,393,188,189,129,391,392,255,254,393,188,189,129,392,188,189,391,253,257,253,257,389,0,392,255,254,254,188,189,188,189,188,189,394,188,189,188,189,389,389,392,392,255,254,254,188,189,129,129,393,394,395,396,390,389,391,392,392,392,255,255,254,393,188,189,129,129,391,253,257,389,389,391,253,257,255,188,189,390,389,391,392,255,254,393,188,189,129,389,389,389,395,396,390,389,391,255,254,389,253,257,253,257,392,188,189,389,389,389,395,396,253,257,394,395,396,393,393,390,389,390,395,396,390,391,253,257,255,391,391,392,255,254,393,188,189,129,392,254,129,255,390,389,391,392,255,254,393,188,189,129,390,389,391,392,255,254,393,188,189,129,390,389,391,392,255,254,393,188,189,129,389,389,0,0,0,397,397,398,397,398,398,397,0,397,398,398,397,398,397,398,397,397,397,397,397,398,399,401,399,401,399,399,401,399,401,399,401,399,401,0,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,0,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,400,0,400,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,0,399,401,399,401,399,401,0,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,401,399,400,401,402,403,399,400,401,402,403,399,400,401,402,403,399,400,401,402,403,402,403,0,399,400,401,402,403,399,400,401,402,403,399,400,400,400,401,402,403,399,399,400,401,402,403,402,399,400,401,402,403,0,399,400,401,402,403,399,400,401,402,403,399,400,401,402,403,402,403,425,425,425,121,121,0,0,0,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,132,121,121,121,121,196,121,121,121,121,121,121,121,121,121,206,206,132,121,121,121,121,121,121,121,196,132,132,121,206,206,196,206,132,196,206,121,196,196,121,121,121,121,121,121,121,121,121,196,0,0,0,0,0,0,0,0,0,119,30,30,30,30,119,0,119,404,405,406,407,31,31,99,99,99,99,99,99,205,181,181,404,119,119,119,119,119,119,119,99,30,31,119,99,30,31,119,99,30,31,119,99,30,31,119,99,31,119,119,119,205,205,205,205,119,205,119,99,31,119,405,406,407,404,99,31,119,119,119,119,119,405,406,407,404,99,30,31,119,119,119,119,99,31,119,119,119,119,99,30,31,119,119,407,406,119,205,205,99,31,119,406,406,205,181,405,406,407,404,30,181,30,119,119,119,99,30,31,119,119,119,99,30,31,119,99,30,31,119,99,30,31,119,119,405,407,31,31,405,406,407,404,205,213,0,0,0,0,0,212,0,0,0,11,11,107,212,0,0,107,212,0,0,0,0,213,212,0,0,0,0,0,0,0,89,107,426,222,107,107,107,107,107,107,212,213,107,107,415,149,11,107,223,409,87,212,213,410,357,411,412,89,415,149,11,107,223,409,87,212,213,410,357,411,412,89,149,11,107,223,409,87,212,213,410,357,411,412,89,149,11,107,223,409,87,212,213,410,357,411,412,89,149,107,223,409,212,213,150,150,223,223,149,223,107,213,410,149,107,212,213,89,151,151,107,212,107,409,409,413,414,107,149,107,223,409,212,213,149,107,107,107,107,107,223,409,87,212,213,410,357,411,412,89,413,414,150,415,149,11,107,223,409,87,212,213,410,357,411,412,89,107,212,213,107,107,212,213,149,11,149,107,223,409,212,213,87,107,214,212,214,107,107,415,149,11,107,223,409,87,212,213,410,357,411,412,89,415,357,412,149,107,151,150,150,150,410,149,413,414,413,414,415,357,412,107,87,149,107,223,409,212,213,409,409,214,212,214,413,414,222,150,151,149,11,223,214,149,11,223,223,223,222,151,151,107,213,357,410,409,409,107,107,149,11,107,223,409,87,212,213,410,357,411,412,89,107,212,213,107,415,149,11,107,223,409,87,212,213,410,357,411,412,89,415,149,11,107,223,409,87,212,213,410,357,411,412,89,214,212,415,149,11,107,223,409,87,212,213,410,357,411,412,89,107,149,149,214,150,150,222,151,0,226,226,226,226,226,226,226,226,226,226,226,226,226,226,0,0,227,227,227,227,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],4],[[[1,[0]]],5],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],15],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],15],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[19,18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],0,[21,[[3,[2]]]],[21,[[3,[2]]]],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],[[12,[[10,[23,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[24,18]]]],[-1,[[10,[25,9]]],[]],[-1,[[10,[25,9]]],[]],[[[1,[0]]],[[3,[26]]]],[[[1,[0]]],[[10,[[3,[26]],9]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[10,[27,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[29,[28]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[30,18]]]],[[[1,[0]]],[[3,[31]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],33],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[10,[36,9]]]],[[[1,[0]]],18],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[20,[37,18]]]],[[[1,[0]]],17],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[12,[[10,[38,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[3,[39]]]],[[[1,[0]]],[[12,[[10,[[3,[40]],9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[41]]]],[[[1,[0]]],[[43,[42]]]],[[[1,[0]]],17],[[[1,[0]]],[[10,[44,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[3,[45]]]],[[[1,[0]]],17],[[[1,[0]]],[[12,[[10,[46,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[12,[[10,[47,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[3,[[16,[4]]]]]],[[[1,[0]]],[[3,[48]]]],[[[1,[0]]],[[3,[48]]]],[[[1,[0]]],[[3,[49]]]],[[[1,[0]]],[[3,[49]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],17],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[20,[51,18]]]],[-1,[[10,[52,9]]],[]],[-1,[[10,[52,9]]],[]],[-1,[[10,[53,9]]],[]],[-1,[[10,[53,9]]],[]],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[-1,[[10,[54,9]]],[]],[-1,[[10,[54,9]]],[]],[-1,[[10,[55,9]]],[]],[-1,[[10,[55,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[[14,[18]]]]]]]],[[[1,[0]]],[[57,[56,18]]]],[[[1,[0]]],[[20,[58,18]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[[14,[18]]]]]]]],[[[1,[0]]],[[57,[59,18]]]],[[[1,[0]]],[[20,[60,18]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[61]]]]]],[62,5],0,[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],[[43,[63]]]],[[[1,[0]]],17],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[64]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[[14,[18]]]]]]]],[[[1,[0]]],[[57,[65,18]]]],[[[1,[0]]],[[20,[66,18]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[12,[[10,[67,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[3,[68]]]],[21,21],[[[20,[-1,-2]]],[[20,[-1,-2]]],[69,70],[69,71]],[[[57,[-1,-2]]],[[57,[-1,-2]]],[69,70],[69,71]],[9,9],[[[1,[-1]]],[[1,[-1]]],69],[62,62],[72,72],[73,73],[74,74],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[-1,[[10,[76,9]]],[]],[-1,[[10,[76,9]]],[]],[[62,62],77],[[[1,[0]]],[[10,[78,9]]]],[[[1,[0]]],[[10,[78,9]]]],[[[1,[0]]],[[10,[79,9]]]],[[[1,[0]]],[[10,[78,9]]]],[[[1,[0]]],[[10,[79,9]]]],[[[1,[0]]],[[10,[79,9]]]],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[12,[[10,[[3,[80]],9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],[[3,[81]]]],[[[1,[0]]],[[3,[82]]]],[-1,[[10,[83,9]]],[]],[-1,[[10,[83,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[0,[84,69]]]],[[[1,[0]]],[[43,[85]]]],[[[1,[0]]],[[0,[84,69]]]],[[[1,[0]]],86],[[[1,[0]],87,[3,[7]]],[[10,[88,9]]]],[[[1,[0]],87,[3,[7]]],[[10,[89,9]]]],[[],90],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[13]]]]]],[[[1,[0]]],[[20,[91,13]]]],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],[[75,[90,[12,[[3,[2]]]]]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],[[3,[[16,[13]]]]]],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],[[20,[35,13]]]],[-1,[[10,[92,9]]],[]],[-1,[[10,[92,9]]],[]],[[[1,[0]]],93],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]],94],[[10,[95,9]]]],[[[1,[0]],94],[[10,[95,9]]]],[[[1,[0]]],[[3,[2]]]],[[-1,4],[[12,[21]]],[]],[[74,4],[[12,[21]]]],[[],21],[[[1,[0]]],17],[[[1,[0]]],[[12,[[10,[96,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[12,[[10,[97,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],98],[[[1,[0]]],98],[[[1,[0]]],50],[[[1,[0]],17],[[0,[84,69]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],[[10,[[3,[99]],9]]]],[[[1,[0]]],13],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[10,[100,9]]]],[[[1,[0]]],[[12,[[10,[100,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],18],[[[1,[0]]],[[12,[5]]]],[101,[[12,[5]]]],[[[1,[0]]],[[12,[5]]]],[101,[[12,[5]]]],[[[1,[0]]],[[12,[5]]]],[101,[[12,[5]]]],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],22],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],22],[-1,[[10,[102,9]]],[]],[-1,[[10,[102,9]]],[]],[-1,[[10,[103,9]]],[]],[-1,[[10,[103,9]]],[]],[[[1,[0]]],[[12,[104]]]],[[[1,[0]]],[[3,[105]]]],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[106]]]],[[[1,[0]]],107],[[[1,[0]]],107],[[[1,[0]]],17],[[[1,[0]]],17],[108,17],[[62,62],109],[[-1,4],[[10,[21,9]]],[]],[[-1,4],[[10,[21,9]]],[]],[-1,[[10,[-2,9]]],[],[110,111]],[-1,[[10,[-2,9]]],[],[110,111]],[[[1,[0]]],112],[[[1,[0]]],112],[[[1,[[0,[-1]]]]],[[10,[-1,9]]],111],[[[1,[[0,[-1]]]]],[[10,[-1,9]]],111],[[[1,[[0,[-1]]]]],17,[]],[[[1,[[0,[-1]]]]],17,[]],[[[1,[[0,[-1]]]]],13,[]],[[[1,[[0,[-1]]]]],13,[]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[113]]]],[[[1,[0]]],104],[[[1,[0]]],104],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[10,[114,9]]]],[[[1,[0]]],[[10,[114,9]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],[[12,[[10,[115,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[3,[116]]]],[[[1,[0]]],5],[[[1,[0]]],[[3,[117]]]],[[[1,[0]]],[[12,[[10,[118,9]]]]]],[[[1,[0]]],[[12,[[10,[118,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],17],[[[1,[0]]],6],[[[1,[0]]],5],[[[1,[0]]],104],[[[1,[0]]],17],[[[1,[0]]],119],[[[1,[0]]],120],[[[1,[0]]],119],[[[1,[0]]],119],[[[1,[0]]],119],[[[1,[0]]],121],[[21,122],123],[[9,122],123],[[9,122],123],[[62,122],123],[[[1,[0]]],50],[[[1,[0]]],8],[72,[[0,[84,69]]]],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],17],[-1,-1,[]],[[[3,[2]]],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[2]],5],[[10,[74,9]]]],[[[1,[0]]],124],[[[1,[0]]],17],[-1,[[10,[125,9]]],[]],[-1,[[10,[125,9]]],[]],[-1,[[10,[126,9]]],[]],[-1,[[10,[126,9]]],[]],[[[20,[-1,-2]],90],[[10,[-1,9]]],[70,127],[71,128]],[[[57,[-1,-2]],90],[[12,[[10,[-1,9]]]]],[70,127],[71,128]],[[[1,[0]],6],17],[[[1,[0]],6],[[12,[17]]]],[[[1,[0]],90],[[10,[[3,[2]],129]]]],[[[1,[0]],90],[[10,[[3,[2]],129]]]],[[[1,[0]],6],17],[[[1,[0]],6],[[12,[17]]]],[[73,5],[[10,[74,9]]]],[[[1,[0]],90],[[10,[90,129]]]],[[[1,[0]],90],[[10,[90,129]]]],[[[1,[[0,[-1]]]],18],[[10,[-1,9]]],111],[-1,[[10,[130,9]]],[]],[-1,[[10,[130,9]]],[]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[131]]]],[[[1,[0]]],[[12,[[10,[34,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]],6],[[10,[[12,[132]],9]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],50],[[[1,[0]]],[[3,[[16,[5]]]]]],[[[1,[0]]],6],[[[1,[0]]],6],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]],6],[[12,[133]]]],[[[1,[0]]],[[12,[[3,[[16,[17]]]]]]]],[[[1,[0]],6],[[10,[134,9]]]],[[[1,[0]]],5],[[[1,[0]]],[[43,[135]]]],[-1,[[10,[136,9]]],[]],[-1,[[10,[136,9]]],[]],[[[1,[0]]],4],[[[1,[0]]],[[3,[137]]]],[[[1,[0]]],[[3,[138]]]],[[[1,[0]]],[[3,[138]]]],[-1,[[10,[139,9]]],[]],[-1,[[10,[139,9]]],[]],[-1,[[10,[140,9]]],[]],[-1,[[10,[140,9]]],[]],[[[1,[0]]],[[3,[141]]]],[[[1,[0]]],109],[[62,-1],75,142],[[[1,[0]]],2],[-1,[[10,[143,9]]],[]],[-1,[[10,[143,9]]],[]],[[[1,[0]]],2],[-1,[[10,[144,9]]],[]],[-1,[[10,[144,9]]],[]],[-1,[[10,[145,9]]],[]],[-1,[[10,[145,9]]],[]],[[[1,[0]]],[[12,[[10,[146,9]]]]]],[[[1,[0]]],[[14,[18]]]],[-1,[[10,[147,9]]],[]],[-1,[[10,[147,9]]],[]],[[[1,[0]]],[[3,[[16,[50]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],50],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[43,[148]]]],[[[1,[0]]],[[10,[[43,[148]],9]]]],[[[1,[0]]],17],[[[1,[0]]],[[12,[[3,[2]]]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[12,[149]]]],[[[1,[0]]],[[12,[149]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[0]]],[[3,[2]]]],[21,109],[[[20,[-1,-2]]],109,[70,127],[71,128]],[[[57,[-1,-2]]],109,[70,127],[71,128]],[73,109],[[[1,[0]]],5],[[[1,[0]]],8],[[[1,[0]]],17],[[[1,[0]]],[[12,[[10,[150,9]]]]]],[[[1,[0]]],[[12,[[10,[150,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[57,[151,13]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[[14,[13]]]]]]]],[[[1,[0]]],[[10,[150,9]]]],[[[1,[0]]],[[12,[[10,[150,9]]]]]],[[[1,[0]]],[[10,[150,9]]]],[[[1,[0]]],[[12,[[10,[150,9]]]]]],[[[1,[0]]],13],[[[1,[0]]],13],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[14,[18]]]],[[[20,[-1,-2]]],[[0,[84]]],[70,127],[71,128]],[[[57,[-1,-2]]],[[0,[84]]],[70,127],[71,128]],[[[1,[0]]],152],[[[1,[0]]],[[0,[84]]]],[[[1,[0]]],153],[[[1,[0]]],[[0,[84]]]],[[[1,[0]]],[[0,[84]]]],[[[1,[0]]],154],[73,[[0,[84,69]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[155]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[[3,[156]]]]]],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],6],[[[1,[0]]],[[12,[[10,[157,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[12,[[10,[[3,[158]],9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],[[3,[[16,[50]]]]]],[21,90],[[[20,[-1,-2]]],90,[70,127],[71,128]],[[[57,[-1,-2]]],90,[70,127],[71,128]],[73,5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],5],[62,5],0,[[[1,[0]]],[[12,[[10,[159,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[160,18]]]],[[[1,[0]]],[[10,[161,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[162,18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],18],[[[1,[0]]],6],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[163,18]]]],[[[1,[0]]],[[20,[164,18]]]],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],8],[[-1,-2],[[10,[165,9]]],[],[[166,[[12,[109]]]]]],[[-1,-2],[[10,[165,9]]],[],[[166,[[12,[109]]]]]],[[[1,[0]]],[[10,[34,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],[[20,[35,18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[[0,[-1]]]]],17,[]],[[[1,[[0,[-1]]]]],167,[]],[[[1,[0]]],17],[[[1,[0]]],[[10,[168,9]]]],[[[1,[0]]],[[10,[169,9]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[[0,[-1]]]]],[[3,[[16,[18]]]]],[]],[[[1,[[0,[-1]]]]],17,[]],[[[1,[[0,[-1]]]]],[[20,[-1,18]]],111],[[[1,[0]]],17],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],170],[[[1,[0]]],5],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]],-1],[[12,[6]]],[[166,[5]]]],[[[1,[0]],-1],[[12,[6]]],[[166,[5]]]],[[[1,[0]],-1],[[12,[6]]],[[166,[5]]]],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]],-1,-2],[[12,[171]]],[[166,[5]]],[[166,[5]]]],[[[1,[0]]],[[10,[172,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[10,[173,9]]]],[[[1,[0]]],18],[[[1,[0]]],17],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],18],[[[1,[0]]],[[43,[174]]]],[[[1,[0]]],[[10,[172,9]]]],[[[1,[0]]],[[10,[172,9]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],[[12,[[10,[34,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],[[10,[35,9]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[[0,[-1]]]]],17,[]],[[[1,[0]]],17],[[[1,[0]]],[[12,[[10,[175,9]]]]]],[[[1,[0]]],[[12,[[14,[18]]]]]],[[[1,[0]]],[[3,[176]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[[10,[37,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[-1,[[10,[177,9]]],[]],[-1,[[10,[177,9]]],[]],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]],4,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],22],[[[1,[0]]],[[12,[[10,[37,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],22],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],93],[-1,[[10,[178,9]]],[]],[-1,[[10,[178,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],5],[-1,[[10,[179,9]]],[]],[-1,[[10,[179,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],[[3,[180]]]],[[[3,[2]]],21],[[[3,[2]]],[[10,[72,9]]]],[[[3,[2]]],[[10,[73,9]]]],[[[3,[2]]],[[10,[74,9]]]],[[[1,[0]]],8],[-1,[[12,[90]]],[]],[-1,[[12,[90]]],[]],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[101,5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],2],[[[1,[0]]],17],[[[1,[0]]],90],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],90],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[108,17],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],2],[[[1,[0]]],2],[[[1,[0]]],2],[62,5],0,[[[1,[-1]]],21,[]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],[[12,[[10,[181,9]]]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],50],[[[1,[0]]],50],[-1,[[10,[182,9]]],[]],[-1,[[10,[182,9]]],[]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],33],[[[1,[0]]],[[3,[[16,[13]]]]]],[[[1,[0]]],[[20,[32,13]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[183,18]]]],[[[1,[0]]],17],[[[1,[0]]],[[43,[184]]]],[[[1,[0]]],[[12,[[10,[[3,[[16,[104]]]],9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[12,[[10,[[3,[[16,[17]]]],9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[12,[[10,[[3,[[16,[185]]]],9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[3,[2]]]],[[62,62],[[12,[77]]]],[[[1,[0]]],[[12,[149]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],[[0,[84,69]]]],[[[1,[[0,[-1]]]]],17,[]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[-1,[[10,[186,9]]],[]],[-1,[[10,[186,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],15],[[[1,[0]]],15],[[[1,[0]]],15],[[[1,[0]]],15],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],[[3,[187]]]],[[[1,[0]]],17],[[[1,[0]]],17],[108,17],[[[1,[0]]],17],[[[1,[0]]],[[3,[188]]]],[[[1,[0]]],[[3,[189]]]],[[[1,[0]]],[[3,[190]]]],[21,[[10,[-1,9]]],[]],[21,[[10,[21,9]]]],[[21,191,191],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17,17],[[10,[[1,[0]],9]]]],[[21,4],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17,17,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[[21,17],[[10,[[1,[0]],9]]]],[21,[[10,[108,9]]]],[21,[[10,[101,9]]]],[[21,[192,[90]]],[[10,[[3,[-1]],9]]],193],[[21,90],[[10,[-1,9]]],71],[[21,90],[[10,[[16,[-1]],9]]],71],[[[1,[0]],[3,[[194,[88]]]],[3,[195]]],[[10,[75,9]]]],[[21,90],[[10,[-1,9]]],193],[21,[[10,[-1,9]]],[]],[[21,[192,[90]]],[[10,[-1,9]]],127],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],17],[[-1,21],[[10,[-2,9]]],[],111],[[-1,21],[[12,[[10,[-2,9]]]]],[],111],[[[1,[-1]],-2],[[10,[-3,9]]],[],128,111],[[-1,21],[[10,[-2,9]]],[],127],[[-1,21],[[12,[[10,[-2,9]]]]],[],127],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],[[12,[50]]]],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],104],[[[1,[0]]],[[3,[[16,[5]]]]]],[[[1,[0]]],[[3,[[16,[17]]]]]],[-1,[[10,[196,9]]],[]],[-1,[[10,[196,9]]],[]],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],17],[[[1,[0]]],[[10,[197,9]]]],[[[1,[0]]],[[10,[197,9]]]],[[[1,[0]]],18],[[[1,[0]]],18],[[[1,[0]]],[[3,[198]]]],[[[1,[0]]],17],[[[1,[0]]],17],[108,17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],5],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],[[3,[199]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[[14,[18]]]]]]]],[[[1,[0]]],[[57,[200,18]]]],[[[1,[0]]],[[20,[201,18]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[18]]]]]],[[[1,[0]]],[[20,[202,18]]]],[[[1,[0]]],[[10,[21,9]]]],[[[1,[0]]],18],[[[1,[0]]],5],[108,5],[[[1,[0]]],17],[[[1,[0]]],[[10,[203,9]]]],[[[1,[0]]],13],[[[1,[0]]],[[10,[90,9]]]],[[[1,[0]]],[[10,[90,9]]]],[[21,-1],[[12,[21]]],[[204,[90]]]],[[[1,[0]]],[[10,[32,9]]]],[[[1,[0]]],33],[[21,90],[[12,[21]]]],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],5],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[0]]],6],[[[1,[0]]],17],[-1,[[10,[205,9]]],[]],[-1,[[10,[205,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[13]]]]]],[[[1,[0]]],[[20,[206,13]]]],[[[1,[0]]],[[12,[[29,[207]]]]]],[[[1,[0]]],21],[[[1,[0]]],[[3,[[16,[17]]]]]],[[[1,[[0,[-1]]]]],17,[]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[[0,[-1]]]]],17,[]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],[[3,[[16,[6]]]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[208]]]],[[[1,[[0,[-1]]]]],[[3,[[16,[18]]]]],[]],[[[1,[[0,[-1]]]]],[[20,[-1,18]]],111],[[[1,[0]]],[[12,[50]]]],[[74,4],[[12,[21]]]],0,[[[1,[0]]],[[3,[[16,[5]]]]]],[101,[[3,[[16,[5]]]]]],[[[1,[0]]],[[3,[62]]]],[108,[[3,[62]]]],0,[62,4],0,[[21,90],[[12,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,209,[]],[-1,90,[]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],17],[[[1,[0]]],[[3,[[16,[50]]]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[3,[2]]]],[[[1,[0]]],[[10,[210,9]]]],[[[1,[0]]],[[10,[211,9]]]],[[[1,[0]]],33],[[[1,[0]]],33],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],4],[101,4],[[[1,[0]]],212],[[[1,[0]]],213],[[[1,[0]]],[[29,[214]]]],[[[1,[0]]],[[43,[149]]]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],0,[[[1,[0]]],104],[[[1,[0]]],[[12,[5]]]],[[[1,[0]]],[[12,[5]]]],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],17],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],[[12,[17]]]],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[216]]]],[[[1,[0]],6],[[10,[[12,[[192,[90]]]],9]]]],[[[1,[0]],90],[[10,[[75,[6,17]],9]]]],[[[1,[0]],6],[[10,[[12,[[75,[32,217]]]],9]]]],[[[1,[0]],6],[[10,[[12,[218]],9]]]],[[[1,[0]],90],[[10,[[75,[32,217]],9]]]],[[[1,[0]]],[[3,[141]]]],[[[1,[0]],6,[3,[7]]],[[10,[8,9]]]],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[14,[13]]]],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],17],[[[1,[0]]],191],[[[1,[0]]],191],[[[1,[0]]],191],[[[1,[0]]],191],[[[1,[0]]],191],[[[1,[0]]],191],[[[1,[0]]],104],[[[1,[0]]],104],[[[1,[0]]],104],[[[1,[0]]],104],[[[1,[0]]],219],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],[[3,[220]]]],[[[1,[0]]],[[43,[219]]]],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],5],[[[1,[0]]],[[12,[[10,[11,9]]]]]],[[[1,[0]]],[[12,[[14,[13]]]]]],[[[1,[0]]],[[3,[221]]]],[[[1,[0]]],17],[[[1,[0]]],[[10,[222,9]]]],[[[1,[0]]],13],[[[1,[0]]],[[43,[223]]]],[[[1,[0]]],224],[[[1,[0]]],225],[[[1,[0]]],17],[[[1,[0]]],224],[[[1,[0]]],225],[[[1,[0]]],224],[[[1,[0]]],225],[[[1,[0]]],224],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],224],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],17],[[[1,[0]]],17],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[[[1,[0]]],224],[101,224],[[[1,[0]]],[[12,[[10,[146,9]]]]]],[[[1,[0]]],[[14,[18]]]],[-1,[[10,[226,9]]],[]],[-1,[[10,[226,9]]],[]],[-1,[[10,[227,9]]],[]],[-1,[[10,[227,9]]],[]],[-1,[[10,[228,9]]],[]],[-1,[[10,[228,9]]],[]],[[[1,[0]]],17],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],[[12,[[10,[100,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],50],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],[[12,[[10,[100,9]]]]]],[[[1,[0]]],[[14,[18]]]],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],22],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],22],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],7],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],50],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],8],[[[1,[0]]],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],[[43,[-1]]],[69,70]],[[-1,-2],75,[],[]],[[[43,[-1]],122],123,70],[-1,-1,[]],[-1,-1,[]],[[[29,[-1]],90],[[12,[[10,[-1,9]]]]],[111,229]],[[[43,[-1]],90],[[10,[-1,9]]],127],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],109,230],[[[29,[-1]]],[[0,[84]]],[111,229]],[[[43,[-1]]],[[0,[84]]],127],[[[43,[-1]]],90,230],[21,[[43,[-1]]],230],[21,[[10,[[29,[-1]],9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[[43,[-1]],9]]],[230,127]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,8],8],[25,17],[25,[[29,[28]]]],[28,[[3,[231]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,28],[231,231],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[28,28],77],[[231,231],77],[[28,28],109],[[231,231],109],[[28,122],123],[[231,122],123],[-1,-1,[]],[-1,-1,[]],[231,7],0,[[28,-1],75,142],[[231,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[[28,28],[[12,[77]]]],[[231,231],[[12,[77]]]],[28,17],0,[21,[[10,[25,9]]]],[21,[[10,[28,9]]]],[21,[[10,[-1,9]]],[]],[231,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[25,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[47,17],[232,17],[233,17],[234,17],[47,[[3,[[16,[18]]]]]],[233,17],[47,[[20,[37,18]]]],[235,17],[235,[[3,[41]]]],[41,4],0,[[45,21],[[10,[235,9]]]],[44,17],[146,[[10,[44,9]]]],[146,18],[45,18],0,[44,[[3,[45]]]],[45,4],0,[46,17],[146,[[12,[[10,[46,9]]]]]],[146,[[14,[18]]]],[235,[[12,[[10,[47,9]]]]]],[235,[[14,[18]]]],[46,[[3,[[16,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[41,41],[113,113],[37,37],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[232,50],[233,50],[234,50],[47,17],[235,[[12,[[10,[97,9]]]]]],[235,[[14,[18]]]],[234,[[12,[[10,[100,9]]]]]],[234,[[14,[18]]]],[97,17],[97,[[3,[113]]]],[113,4],0,[[45,122],123],[[41,122],123],[[113,122],123],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[236,[[12,[[10,[146,9]]]]]],[236,[[14,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[236,[[12,[[10,[150,9]]]]]],[236,[[12,[[14,[13]]]]]],[97,[[12,[[10,[37,9]]]]]],[[113,21],[[12,[[10,[97,9]]]]]],[97,[[14,[18]]]],[113,[[14,[18]]]],0,[97,[[12,[[10,[37,9]]]]]],[[113,21],[[12,[[10,[97,9]]]]]],[97,[[14,[18]]]],[113,[[14,[18]]]],0,[[41,21],[[10,[97,9]]]],[41,18],0,[21,[[10,[236,9]]]],[21,[[10,[146,9]]]],[21,[[10,[46,9]]]],[21,[[10,[44,9]]]],[21,[[10,[235,9]]]],[21,[[10,[47,9]]]],[21,[[10,[97,9]]]],[21,[[10,[232,9]]]],[21,[[10,[233,9]]]],[21,[[10,[234,9]]]],[21,[[10,[37,9]]]],[21,[[10,[-1,9]]],[]],[233,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[236,224],[236,[[12,[[10,[146,9]]]]]],[236,[[14,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[237,5],[238,2],0,[[],239],[240,241],0,[238,241],0,[238,241],0,[242,[[3,[48]]]],[243,[[3,[48]]]],[49,2],0,0,[[239,239],239],[[239,239],75],[[239,239],239],[[239,239],75],[239,2],[[239,239],239],[[239,239],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[240,241],0,[240,2],0,[240,241],0,[49,49],[240,240],[239,239],[48,48],[238,238],[244,244],[131,131],[245,245],[94,94],[246,246],[247,247],[95,95],[248,248],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[49,49],77],[[240,240],77],[[239,239],77],[[48,48],77],[[238,238],77],[[131,131],77],[[245,245],77],[49,5],0,[[239,239],109],0,0,0,[[],239],[[],94],[240,241],0,[[239,239],239],[[],239],[49,6],0,[[49,49],109],[[240,240],109],[[239,239],109],[[48,48],109],[[238,238],109],[[131,131],109],[[245,245],109],[[246,246],109],[237,6],[49,239],0,[[49,122],123],[[240,122],123],[[239,122],123],[[239,122],123],[[239,122],123],[[239,122],123],[[239,122],123],[[48,122],123],[[238,122],123],[[131,122],123],[[245,122],123],[[246,122],123],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[12,[239]]]],[2,239],[[],239],[249,[[3,[131]]]],[243,[[3,[[16,[6]]]]]],[131,6],[245,6],0,0,[[49,-1],75,142],[[240,-1],75,142],[[239,-1],75,142],[[48,-1],75,142],[[238,-1],75,142],[[131,-1],75,142],[[245,-1],75,142],[48,2],[238,2],0,0,[49,240],0,[48,2],0,[48,241],0,[48,241],0,[250,5],[242,5],[251,5],[249,5],[243,5],[250,17],[242,17],[251,17],[249,17],[243,17],[242,5],[243,5],[250,17],[242,17],[251,17],[249,17],[243,17],[49,5],0,[49,5],0,[[239,239],75],[[239,239],239],[[239,239],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[239,109],[237,6],[[49,21,6],[[10,[94,9]]]],[240,241],0,0,0,[240,241],0,[240,241],0,[240,241],0,[239,239],[249,5],[243,5],[49,5],0,[240,241],0,[240,241],0,[[49,49],[[12,[77]]]],[[240,240],[[12,[77]]]],[[239,239],[[12,[77]]]],[[48,48],[[12,[77]]]],[[238,238],[[12,[77]]]],[[131,131],[[12,[77]]]],[[245,245],[[12,[77]]]],[49,2],0,[49,2],0,[21,[[10,[237,9]]]],[21,[[10,[250,9]]]],[21,[[10,[242,9]]]],[21,[[10,[251,9]]]],[21,[[10,[249,9]]]],[21,[[10,[243,9]]]],[21,[[10,[244,9]]]],[21,[[10,[-1,9]]],[]],[[239,239],75],[131,17],0,[250,[[3,[[16,[5]]]]]],[251,[[3,[[16,[17]]]]]],[49,6],0,[[239,239],239],[[239,239],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[239],[[239,239],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[239,239],239],[49,240],0,[48,2],0,[48,241],0,[48,241],0,[48,2],[238,2],0,0,[240,2],0,[245,241],0,[245,241],0,0,[[52,94],[[10,[95,9]]]],[52,17],[52,17],[21,[[10,[52,9]]]],0,[53,[[3,[49]]]],[53,17],[53,17],[53,5],[21,[[10,[53,9]]]],0,0,[252,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[-1,-2],75,[],[]],[-1,-1,[]],[54,253],[252,2],[54,252],[-1,-2,[],[]],[252,2],[252,2],[[54,90],[[12,[254]]]],[54,253],[252,2],[54,21],[21,[[10,[252,9]]]],[21,[[10,[54,9]]]],[21,[[10,[-1,9]]],[]],[[54,255],[[12,[254]]]],[54,253],[-1,-2,[],[]],[54,253],[252,[[3,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],0,0,[256,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[55,55],[[-1,-2],75,[],[]],[-1,-1,[]],[55,257],[55,256],[256,2],[-1,-2,[],[]],[256,2],[256,2],[55,21],[21,[[10,[256,9]]]],[21,[[10,[55,9]]]],[21,[[10,[-1,9]]],[]],[-1,-2,[],[]],[256,[[3,[2]]]],[55,[[3,[2]]]],[256,17],[256,[[3,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[190,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[258,258],[259,259],[260,260],[138,138],[137,137],[221,221],[216,216],[190,190],[171,171],[153,153],[154,154],[152,152],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[258,258],77],[[260,260],77],[[138,138],77],[[137,137],77],[[216,216],77],[[190,190],77],[[],258],[[221,21],[[12,[[10,[261,9]]]]]],[221,[[14,[13]]]],0,[105,17],0,[76,[[3,[105]]]],[138,5],[137,5],0,0,[262,[[3,[[16,[17]]]]]],[263,17],[260,17],0,[262,17],[[258,258],109],[[260,260],109],[[138,138],109],[[137,137],109],[[216,216],109],[[190,190],109],[[171,171],109],[263,17],[260,17],0,[[105,122],123],[[258,122],123],[[260,122],123],[[138,122],123],[[137,122],123],[[221,122],123],[[216,122],123],[[190,122],123],[[171,122],123],[264,17],[265,17],[262,17],[263,17],[266,17],[267,17],[268,17],[269,17],[270,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],258],[137,5],[216,17],0,0,[264,[[3,[2]]]],[262,[[3,[[16,[17]]]]]],[263,[[3,[[16,[17]]]]]],[267,[[3,[[16,[17]]]]]],[266,[[3,[138]]]],[268,[[3,[138]]]],[269,[[3,[137]]]],[[258,-1],75,142],[[260,-1],75,142],[[138,-1],75,142],[[137,-1],75,142],[[216,-1],75,142],[[190,-1],75,142],[262,[[3,[[16,[50]]]]]],[260,50],0,[260,17],0,[262,[[3,[[16,[17]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[266,[[3,[2]]]],[262,153],[268,154],[270,152],[264,17],[265,17],[262,17],[263,17],[266,5],[267,5],[268,5],[269,5],[264,17],[265,17],[262,17],[263,17],[266,5],[267,5],[268,5],[269,5],[270,5],[[76,-1],[[12,[6]]],[[166,[5]]]],[[262,-1],[[12,[6]]],[[166,[5]]]],[[268,-1],[[12,[6]]],[[166,[5]]]],[[270,-1,-2],[[12,[171]]],[[166,[5]]],[[166,[5]]]],[17,258],[153,12],[154,12],[152,12],[[221,21],[[12,[[10,[271,9]]]]]],[221,[[14,[13]]]],0,[267,5],[266,5],[268,5],[269,5],[76,17],[261,5],[271,5],[270,5],[[258,258],[[12,[77]]]],[[260,260],[[12,[77]]]],[[138,138],[[12,[77]]]],[[137,137],[[12,[77]]]],[[216,216],[[12,[77]]]],[[190,190],[[12,[77]]]],[105,258],0,[262,17],[261,[[3,[190]]]],[21,[[10,[76,9]]]],[21,[[10,[264,9]]]],[21,[[10,[265,9]]]],[21,[[10,[262,9]]]],[21,[[10,[263,9]]]],[21,[[10,[266,9]]]],[21,[[10,[267,9]]]],[21,[[10,[268,9]]]],[21,[[10,[269,9]]]],[21,[[10,[270,9]]]],[21,[[10,[261,9]]]],[21,[[10,[271,9]]]],[21,[[10,[259,9]]]],[21,[[10,[-1,9]]],[]],[262,17],[262,17],[267,5],[138,5],[137,5],0,0,[262,[[3,[[16,[17]]]]]],[138,5],0,[190,61],0,[265,[[3,[[16,[17]]]]]],[[105,21],[[10,[259,9]]]],[105,13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[258],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[216,61],0,[271,[[3,[216]]]],[270,[[3,[221]]]],[221,61],0,[76,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[272,7],[273,7],[274,7],[275,7],[81,7],[82,7],0,0,0,0,[276,7],[277,7],[278,7],[279,7],[280,[[10,[32,9]]]],[280,33],[83,[[12,[[10,[38,9]]]]]],[83,[[12,[[14,[13]]]]]],[38,[[3,[39]]]],[83,[[12,[[10,[[3,[40]],9]]]]]],[83,[[14,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[281,22],[282,22],[283,22],[284,22],[285,22],[286,22],[278,22],[279,22],[287,22],[288,22],[281,22],[282,22],[283,22],[284,22],[285,22],[286,22],[278,22],[279,22],[287,22],[288,22],[[68,21],[[10,[218,9]]]],[68,33],0,[83,[[12,[[10,[67,9]]]]]],[83,[[12,[[14,[13]]]]]],[67,[[3,[68]]]],[40,40],[158,158],[39,39],[68,68],[218,218],[274,274],[275,275],[81,81],[82,82],[112,112],[32,32],[86,86],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[40,40],77],[[158,158],77],[[274,274],77],[[275,275],77],[[81,81],77],[[82,82],77],[[112,112],77],[[86,86],77],[289,[[10,[78,9]]]],[290,[[10,[79,9]]]],[291,[[10,[78,9]]]],[292,[[10,[79,9]]]],[281,[[10,[78,9]]]],[282,[[10,[79,9]]]],[289,33],[290,33],[291,33],[292,33],[281,33],[282,33],[78,[[3,[81]]]],[79,[[3,[82]]]],[280,86],[[],112],[[],86],[211,8],[210,8],[293,22],[294,22],[211,8],[210,8],[293,22],[294,22],[281,7],[282,7],[68,6],0,[[40,40],109],[[158,158],109],[[274,274],109],[[275,275],109],[[81,81],109],[[82,82],109],[[112,112],109],[[86,86],109],[78,112],[79,112],[295,5],[40,17],0,[[40,122],123],[[158,122],123],[[39,122],123],[[68,122],123],[[274,122],123],[[275,122],123],[[81,122],123],[[82,122],123],[[112,122],123],[[86,122],123],[67,2],[296,2],[297,2],[295,2],[272,2],[273,2],[289,2],[290,2],[291,2],[292,2],[281,2],[282,2],[298,2],[299,2],[300,2],[301,2],[293,2],[294,2],[302,2],[303,2],[283,2],[284,2],[304,2],[305,2],[285,2],[286,2],[276,2],[277,2],[278,2],[279,2],[306,2],[307,2],[287,2],[288,2],[280,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],112],[[],86],[298,6],[299,6],[40,6],[158,6],[39,6],0,0,0,[[40,-1],75,142],[[158,-1],75,142],[[274,-1],75,142],[[275,-1],75,142],[[81,-1],75,142],[[82,-1],75,142],[[112,-1],75,142],[[86,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[83,[[12,[[10,[150,9]]]]]],[83,[[12,[[14,[13]]]]]],[83,[[12,[[10,[157,9]]]]]],[83,[[12,[[14,[13]]]]]],[83,[[12,[[10,[[3,[158]],9]]]]]],[83,[[14,[13]]]],[2,112],[2,86],[38,5],[83,17],[67,5],[83,17],[157,5],[295,2],[40,17],0,[78,17],[79,17],[298,[[10,[32,9]]]],[300,[[10,[32,9]]]],[301,[[10,[32,9]]]],[293,[[10,[32,9]]]],[294,[[10,[32,9]]]],[302,[[10,[32,9]]]],[303,[[10,[32,9]]]],[283,[[10,[32,9]]]],[284,[[10,[32,9]]]],[304,[[10,[32,9]]]],[305,[[10,[32,9]]]],[285,[[10,[32,9]]]],[286,[[10,[32,9]]]],[276,[[10,[32,9]]]],[277,[[10,[32,9]]]],[278,[[10,[32,9]]]],[279,[[10,[32,9]]]],[306,[[10,[32,9]]]],[307,[[10,[32,9]]]],[287,[[10,[32,9]]]],[288,[[10,[32,9]]]],[[39,21],[[10,[32,9]]]],[298,33],[300,33],[301,33],[293,33],[294,33],[302,33],[303,33],[283,33],[284,33],[304,33],[305,33],[285,33],[286,33],[276,33],[277,33],[278,33],[279,33],[306,33],[307,33],[287,33],[288,33],[39,13],0,[157,[[3,[[16,[13]]]]]],[157,[[20,[32,13]]]],[272,17],[273,17],[158,17],[274,17],[275,17],[81,17],[82,17],0,0,0,0,0,[[40,40],[[12,[77]]]],[[158,158],[[12,[77]]]],[[274,274],[[12,[77]]]],[[275,275],[[12,[77]]]],[[81,81],[[12,[77]]]],[[82,82],[[12,[77]]]],[[112,112],[[12,[77]]]],[[86,86],[[12,[77]]]],[291,15],[292,15],[291,15],[292,15],[21,[[10,[83,9]]]],[21,[[10,[38,9]]]],[21,[[10,[157,9]]]],[21,[[10,[67,9]]]],[21,[[10,[296,9]]]],[21,[[10,[297,9]]]],[21,[[10,[78,9]]]],[21,[[10,[79,9]]]],[21,[[10,[295,9]]]],[21,[[10,[272,9]]]],[21,[[10,[273,9]]]],[21,[[10,[289,9]]]],[21,[[10,[290,9]]]],[21,[[10,[291,9]]]],[21,[[10,[292,9]]]],[21,[[10,[281,9]]]],[21,[[10,[282,9]]]],[21,[[10,[298,9]]]],[21,[[10,[299,9]]]],[21,[[10,[300,9]]]],[21,[[10,[301,9]]]],[21,[[10,[211,9]]]],[21,[[10,[210,9]]]],[21,[[10,[293,9]]]],[21,[[10,[294,9]]]],[21,[[10,[302,9]]]],[21,[[10,[303,9]]]],[21,[[10,[283,9]]]],[21,[[10,[284,9]]]],[21,[[10,[304,9]]]],[21,[[10,[305,9]]]],[21,[[10,[285,9]]]],[21,[[10,[286,9]]]],[21,[[10,[276,9]]]],[21,[[10,[277,9]]]],[21,[[10,[278,9]]]],[21,[[10,[279,9]]]],[21,[[10,[306,9]]]],[21,[[10,[307,9]]]],[21,[[10,[287,9]]]],[21,[[10,[288,9]]]],[21,[[10,[280,9]]]],[21,[[10,[218,9]]]],[21,[[10,[32,9]]]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[304,7],[305,7],[285,7],[286,7],[302,7],[303,7],[283,7],[284,7],[302,7],[303,7],[283,7],[284,7],[280,[[10,[32,9]]]],[280,33],[281,7],[282,7],[68,6],0,[81,7],[82,7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112],[86],[300,[[10,[211,9]]]],[301,[[10,[210,9]]]],[300,33],[301,33],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[83,6],[[10,[[12,[[192,[90]]]],9]]]],[[83,90],[[10,[[75,[6,17]],9]]]],[[83,6],[[10,[[12,[[75,[32,217]]]],9]]]],[[83,6],[[10,[[12,[218]],9]]]],[[83,90],[[10,[[75,[32,217]],9]]]],[297,5],[273,5],[290,5],[292,5],[282,5],[210,5],[294,5],[303,5],[284,5],[305,5],[286,5],[277,5],[279,5],[307,5],[288,5],[275,5],[82,5],0,0,[83,[[12,[[10,[11,9]]]]]],[83,[[12,[[14,[13]]]]]],[83,17],[289,22],[290,22],[291,22],[292,22],[289,22],[290,22],[291,22],[292,22],[289,22],[290,22],[296,22],[297,22],[296,22],[297,22],[306,7],[307,7],[287,7],[288,7],[211,8],[210,8],[211,8],[210,8],[289,22],[290,22],[291,22],[292,22],[289,22],[290,22],[291,22],[292,22],[289,22],[290,22],[296,22],[297,22],[296,22],[297,22],[306,7],[307,7],[287,7],[288,7],[211,8],[210,8],[211,8],[210,8],0,0,0,0,0,[[],185],[80,2],0,[[185,185],185],[[185,185],75],[[185,185],185],[[185,185],75],[185,5],[[185,185],185],[[185,185],75],[80,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[185,185],[80,80],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[185,185],77],[[80,80],77],[92,[[3,[[16,[17]]]]]],[92,[[12,[[10,[[3,[80]],9]]]]]],[92,[[14,[13]]]],[[185,185],109],[[],185],[[185,185],185],[[],185],[[185,185],109],[[80,80],109],[[185,122],123],[[185,122],123],[[185,122],123],[[185,122],123],[[185,122],123],[[80,122],123],[-1,-1,[]],[-1,-1,[]],[5,[[12,[185]]]],[5,185],[[],185],[80,2],0,[[185,-1],75,142],[[80,-1],75,142],[[185,185],75],[[185,185],185],[[185,185],109],[-1,-2,[],[]],[-1,-2,[],[]],[185,109],[185,185],[92,17],[92,17],[92,17],[92,[[12,[[10,[[3,[[16,[104]]]],9]]]]]],[92,[[12,[[14,[13]]]]]],[92,[[12,[[10,[[3,[[16,[17]]]],9]]]]]],[92,[[12,[[14,[13]]]]]],[92,[[12,[[10,[[3,[[16,[185]]]],9]]]]]],[92,[[12,[[14,[13]]]]]],[[185,185],[[12,[77]]]],[[80,80],[[12,[77]]]],[21,[[10,[92,9]]]],[80,2],0,[[185,185],75],[[185,185],185],[[185,185],75],[-1,-2,[],[]],[-1,-2,[],[]],[185],[[185,185],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[[185,185],185],[92,17],0,[[102,94],[[10,[95,9]]]],[102,17],[102,17],[21,[[10,[102,9]]]],0,[103,[[3,[49]]]],[103,17],[103,17],[103,5],[21,[[10,[103,9]]]],0,0,0,0,[125,[[10,[[3,[26]],9]]]],[27,[[3,[26]]]],[125,17],[125,[[10,[27,9]]]],[125,18],[26,104],0,[125,17],[26,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[148,148],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[26,26],77],[[[75,[17,17]]],90],0,[26,8],0,[[26,26],109],[26,17],0,0,[[26,122],123],[[148,122],123],[-1,-1,[]],[-1,-1,[]],[[26,-1],75,142],[125,17],[125,17],[125,[[10,[[43,[148]],9]]]],[27,[[43,[148]]]],[-1,-2,[],[]],[-1,-2,[],[]],[26,8],0,[26,8],0,[[26,8],8],[[26,26],[[12,[77]]]],0,[21,[[10,[125,9]]]],[[21,17,17,17],[[10,[27,9]]]],[[21,17,17],[[10,[148,9]]]],[[21,[75,[17,17,17]]],[[10,[27,9]]]],[21,[[10,[148,9]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[125,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[126,[[12,[[10,[23,9]]]]]],[126,[[14,[18]]]],[23,[[3,[[16,[18]]]]]],[23,[[20,[24,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[160,17],[308,17],[309,17],[310,17],[160,[[3,[[16,[18]]]]]],[309,17],[160,[[20,[51,18]]]],[311,311],[51,51],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[311,311],77],[308,50],[310,50],[23,[[10,[35,9]]]],[159,[[10,[35,9]]]],[23,18],[159,18],[175,[[3,[[16,[13]]]]]],[175,[[20,[35,13]]]],[[],311],[310,[[10,[100,9]]]],[310,18],[[311,311],109],[[311,122],123],[175,17],[-1,-1,[]],[-1,-1,[]],[[],311],[126,[[12,[[10,[34,9]]]]]],[126,[[14,[18]]]],[23,17],[[311,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[126,[[12,[[10,[150,9]]]]]],[126,[[12,[[14,[13]]]]]],[126,[[12,[[10,[159,9]]]]]],[126,[[14,[18]]]],[159,17],[159,[[3,[[16,[18]]]]]],[159,[[20,[160,18]]]],[126,[[12,[[10,[34,9]]]]]],[126,[[14,[18]]]],[175,17],[126,[[12,[[10,[175,9]]]]]],[126,[[12,[[14,[18]]]]]],[17,311],[[311,311],[[12,[77]]]],[24,17],[24,[[3,[[16,[17]]]]]],[21,[[10,[126,9]]]],[21,[[10,[23,9]]]],[21,[[10,[24,9]]]],[21,[[10,[159,9]]]],[21,[[10,[160,9]]]],[21,[[10,[308,9]]]],[21,[[10,[309,9]]]],[21,[[10,[310,9]]]],[21,[[10,[175,9]]]],[21,[[10,[51,9]]]],[21,[[10,[-1,9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[311],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[126,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],312],[[],313],0,[[312,312],312],[[313,313],313],[[312,312],75],[[313,313],75],[[312,312],312],[[313,313],313],[[312,312],75],[[313,313],75],[312,2],[313,17],[[312,312],312],[[313,313],313],[[312,312],75],[[313,313],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[195,314],75],[195,75],[312,312],[313,313],[315,315],[314,314],[195,195],[316,316],[317,317],[318,318],[319,319],[320,320],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[312,312],77],[[313,313],77],[321,[[3,[2]]]],[321,[[0,[84,69]]]],[321,[[0,[84,69]]]],[317,313],[319,313],[[312,312],109],[[313,313],109],[321,[[75,[90,[12,[[3,[2]]]]]]]],[[],312],[[],313],[[],314],[[],195],[[],317],[[312,312],312],[[313,313],313],[[],312],[[],313],[322,[[3,[[16,[17]]]]]],[[312,312],109],[[313,313],109],[[314,314],109],[[195,195],109],[[316,316],109],[[317,317],109],[[318,318],109],[[319,319],109],0,[195,75],[[312,122],123],[[312,122],123],[[312,122],123],[[312,122],123],[[312,122],123],[[313,122],123],[[313,122],123],[[313,122],123],[[313,122],123],[[313,122],123],[[314,122],123],[[195,122],123],[[316,122],123],[[317,122],123],[[318,122],123],[[319,122],123],[[320,122],123],[[320,122],123],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[12,[312]]]],[17,[[12,[313]]]],[2,195],[2,312],[17,313],[[],312],[[],313],0,[322,[[3,[2]]]],[[195,314],109],[322,109],[[312,-1],75,142],[[313,-1],75,142],[[312,312],75],[[313,313],75],[322,17],[322,[[3,[2]]]],[321,[[12,[[3,[2]]]]]],[[312,312],312],[[313,313],313],[[312,312],109],[[313,313],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[312,109],[313,109],[195,109],[195,109],[195,109],[[50,50,109],316],[312,312],[313,313],[322,90],[322,50],[321,50],[315,50],[[50,50],316],[[],195],[[],195],[[],195],[[50,50],316],0,[[312,312],[[12,[77]]]],[[313,313],[[12,[77]]]],[322,[[0,[84,69]]]],[21,[[10,[130,9]]]],[21,[[10,[322,9]]]],[21,[[10,[321,9]]]],[21,[[10,[315,9]]]],[[322,[3,[[194,[88]]]],[3,[195]]],[[10,[75,9]]]],[21,[[10,[-1,9]]],[]],[[312,312],75],[[313,313],75],[[195,314],75],[195,75],[[312,312],312],[[313,313],313],[[312,312],75],[[313,313],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[[194,[323]]]],[3,[195]],[3,[17]],-1],[[10,[75,320]]],324],[312],[313],[-1,209,[]],[[312,312],75],[[313,313],75],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[312,312],312],[[313,313],313],0,[322,50],[321,50],[315,50],[322,50],[321,50],[315,50],0,0,0,[322,50],[321,50],[315,50],[322,50],[321,50],[315,50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],191],[325,17],[326,17],[327,17],[326,17],[42,[[3,[[16,[[14,[18]]]]]]]],0,[[42,21],[[57,[328,18]]]],[329,[[10,[36,9]]]],[329,18],[36,17],[329,[[10,[35,9]]]],[329,18],[36,[[43,[42]]]],[[191,191],191],[[191,191],75],[[191,191],191],[[191,191],75],[191,17],[[191,191],191],[[191,191],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[330,17],[330,[[43,[63]]]],[330,17],[63,[[43,[331]]]],0,[330,[[10,[34,9]]]],[330,18],[330,[[10,[34,9]]]],[330,18],[219,219],[191,191],[328,328],[176,176],[332,332],[333,333],[184,184],[63,63],[331,331],[106,106],[42,42],[85,85],[174,174],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[191,191],77],[162,17],[162,[[43,[85]]]],[191,90],[[[75,[191,191]]],90],[[[75,[17,191,191]]],90],[[[75,[191,191]]],90],[17,90],[17,90],[17,90],[[191,191],109],[334,[[10,[35,9]]]],[335,[[10,[35,9]]]],[336,[[10,[35,9]]]],[330,[[10,[35,9]]]],[337,[[10,[35,9]]]],[334,18],[335,18],[336,18],[330,18],[337,18],[[],219],[[],191],[[191,191],191],[[],191],[[106,21],[[12,[[10,[328,9]]]]]],[106,[[14,[18]]]],0,[337,17],[337,[[3,[106]]]],[[219,219],109],[[191,191],109],[[106,21],[[12,[[10,[328,9]]]]]],[106,[[14,[18]]]],0,[[[338,[-1]]],[[10,[-1,9]]],111],[[[338,[-1]]],17,[]],[[[338,[-1]]],13,[]],[136,[[10,[114,9]]]],[136,18],[136,[[12,[[10,[118,9]]]]]],[136,[[12,[[14,[13]]]]]],[[219,122],123],[[191,122],123],[[191,122],123],[[191,122],123],[[191,122],123],[[191,122],123],[[176,122],123],[[184,122],123],[[63,122],123],[[331,122],123],[[106,122],123],[[42,122],123],[[85,122],123],[[174,122],123],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[12,[191]]]],[17,191],[[],191],[[191,-1],75,142],[[191,191],75],[[191,191],191],[[191,191],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[191,109],[85,[[3,[[16,[[14,[18]]]]]]]],0,[[85,21],[[57,[328,18]]]],[339,[[10,[161,9]]]],[339,18],[161,[[3,[[16,[18]]]]]],[161,[[20,[162,18]]]],[161,17],[339,[[10,[35,9]]]],[339,18],[136,[[10,[169,9]]]],[136,18],[340,[[10,[172,9]]]],[340,18],[340,[[10,[35,9]]]],[340,18],[174,[[3,[[16,[[14,[18]]]]]]]],0,[[174,21],[[57,[328,18]]]],[340,[[10,[173,9]]]],[340,18],[173,17],[340,[[10,[35,9]]]],[340,18],[173,[[43,[174]]]],[[176,21],[[10,[328,9]]]],[176,18],0,[329,[[10,[172,9]]]],[339,[[10,[172,9]]]],[329,18],[339,18],[176,17],0,[329,17],[339,17],[340,17],[172,17],[329,[[10,[35,9]]]],[339,[[10,[35,9]]]],[329,18],[339,18],[172,[[3,[176]]]],[191,191],[336,17],[336,[[3,[[16,[18]]]]]],[336,[[20,[183,18]]]],[183,17],[183,[[43,[184]]]],[[191,191],[[12,[77]]]],[334,17],[335,17],[336,17],[330,17],[337,17],[329,17],[339,17],[340,17],[[[338,[-1]]],17,[]],[[21,191],[[10,[219,9]]]],[21,[[10,[136,9]]]],[21,[[10,[341,9]]]],[21,[[10,[325,9]]]],[21,[[10,[326,9]]]],[21,[[10,[327,9]]]],[21,[[10,[172,9]]]],[21,[[10,[334,9]]]],[21,[[10,[335,9]]]],[21,[[10,[336,9]]]],[[21,191,191],[[10,[183,9]]]],[21,[[10,[330,9]]]],[21,[[10,[337,9]]]],[21,[[10,[329,9]]]],[[21,17],[[10,[36,9]]]],[21,[[10,[339,9]]]],[[21,17],[[10,[161,9]]]],[[21,17],[[10,[162,9]]]],[21,[[10,[340,9]]]],[[21,17],[[10,[173,9]]]],[21,[[10,[[338,[-1]],9]]],[]],[21,[[10,[342,9]]]],[21,[[10,[328,9]]]],[21,[[10,[332,9]]]],[21,[[10,[333,9]]]],[[21,191,191],[[10,[184,9]]]],[[21,17,191,191],[[10,[63,9]]]],[[21,191,191],[[10,[331,9]]]],[[21,17],[[10,[42,9]]]],[[21,17],[[10,[85,9]]]],[[21,17],[[10,[174,9]]]],[[[3,[2]],191],[[10,[219,9]]]],[21,[[10,[219,9]]]],[21,[[10,[-1,9]]],[]],[[21,[75,[191,191]]],[[10,[183,9]]]],[[21,17],[[10,[36,9]]]],[[21,17],[[10,[161,9]]]],[[21,17],[[10,[162,9]]]],[[21,17],[[10,[173,9]]]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[[21,[75,[191,191]]],[[10,[184,9]]]],[[21,[75,[17,191,191]]],[[10,[63,9]]]],[[21,[75,[191,191]]],[[10,[331,9]]]],[[21,17],[[10,[42,9]]]],[[21,17],[[10,[85,9]]]],[[21,17],[[10,[174,9]]]],[191,90],[[191,191],75],[136,[[10,[197,9]]]],[136,18],[184,6],0,[[191,191],191],[[191,191],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[191],[[191,191],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[191,191],191],[335,17],[334,191],[335,191],[336,191],[330,191],[336,191],[330,191],[334,219],[184,219],[331,219],0,0,[184,219],[331,219],0,0,[335,[[43,[219]]]],[136,224],[219,[[12,[50]]]],0,[[219,21],[[12,[[10,[100,9]]]]]],0,[325,50],[326,50],[327,50],[328,50],[327,[[12,[[10,[100,9]]]]]],[328,[[12,[[10,[100,9]]]]]],[327,[[14,[18]]]],[219,[[12,[50]]]],0,[[219,21],[[12,[[10,[100,9]]]]]],0,[219,[[12,[50]]]],0,[[219,21],[[12,[[10,[100,9]]]]]],0,[325,50],[326,50],[327,50],[328,50],[327,[[12,[[10,[100,9]]]]]],[328,[[12,[[10,[100,9]]]]]],[327,[[14,[18]]]],[219,[[12,[50]]]],0,[[219,21],[[12,[[10,[100,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,[[3,[[16,[6]]]]]],[343,17],[343,[[3,[[16,[18]]]]]],[343,[[20,[19,18]]]],[344,[[3,[[16,[18]]]]]],[344,[[20,[35,18]]]],[344,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[345,345],[[-1,-2],75,[],[]],[164,17],[164,[[3,[[16,[6]]]]]],[346,[[10,[35,9]]]],[347,[[10,[35,9]]]],[348,[[10,[35,9]]]],[343,[[10,[35,9]]]],[349,[[10,[35,9]]]],[344,[[10,[35,9]]]],[346,18],[347,18],[348,18],[343,18],[349,18],[344,18],[346,50],[[[350,[-1]]],[[10,[-1,9]]],111],[[[350,[-1]]],17,[]],[[[350,[-1]]],13,[]],[139,[[10,[114,9]]]],[139,18],[139,[[12,[[10,[118,9]]]]]],[139,[[12,[[14,[13]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[347,17],[202,17],[19,17],[344,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[163,17],[164,6],[163,[[3,[[16,[18]]]]]],[349,17],[349,[[3,[[16,[18]]]]]],[349,[[20,[163,18]]]],[163,[[20,[164,18]]]],[344,[[3,[[16,[18]]]]]],[344,[[20,[35,18]]]],[344,17],[139,[[10,[168,9]]]],[139,18],[21,[[10,[139,9]]]],[21,[[10,[351,9]]]],[21,[[10,[346,9]]]],[21,[[10,[347,9]]]],[21,[[10,[348,9]]]],[21,[[10,[202,9]]]],[21,[[10,[343,9]]]],[21,[[10,[19,9]]]],[21,[[10,[349,9]]]],[21,[[10,[163,9]]]],[21,[[10,[164,9]]]],[21,[[10,[[350,[-1]],9]]],[]],[21,[[10,[352,9]]]],[21,[[10,[344,9]]]],[21,[[10,[345,9]]]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[139,[[10,[197,9]]]],[139,18],[348,17],[348,[[3,[[16,[18]]]]]],[348,[[20,[202,18]]]],[346,17],[347,17],[348,17],[343,17],[349,17],[[[350,[-1]]],17,[]],[344,17],[347,[[3,[[16,[6]]]]]],[202,[[3,[[16,[6]]]]]],[344,[[3,[[16,[6]]]]]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[139,224],0,0,0,0,0,0,0,0,0,0,0,[[134,[3,[7]]],[[0,[84]]]],[[],120],[[353,8],[[194,[8]]]],[140,17],[[120,120],120],[[120,120],75],[[120,120],120],[[120,120],75],[120,17],[[120,120],120],[[120,120],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,120],[135,135],[134,134],[354,354],[355,355],[353,353],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[120,120],77],[[354,[3,[7]]],[[12,[8]]]],[120,90],[[120,120],109],0,[[],120],[354,355],[[120,120],120],[[],120],[[120,120],109],[[353,353],109],[140,120],[[120,122],123],[[120,122],123],[[120,122],123],[[120,122],123],[[120,122],123],[[135,122],123],[[355,122],123],[[353,122],123],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[12,[120]]]],[17,120],[[],120],[135,5],[140,17],[[140,6],[[10,[134,9]]]],[140,5],[140,[[43,[135]]]],[354,109],[[120,-1],75,142],[[120,120],75],[[120,120],120],[[120,120],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,109],[356,12],[355,12],[120,120],[[120,120],[[12,[77]]]],[354,149],[354,357],0,[21,[[10,[140,9]]]],[[21,17,17],[[10,[203,9]]]],[21,[[10,[358,9]]]],[[21,[75,[17,17]]],[[10,[203,9]]]],[21,[[10,[135,9]]]],[[120,120],75],[358,[[10,[21,9]]]],[358,18],[140,17],[140,[[10,[203,9]]]],[140,13],[[120,120],120],[[120,120],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120],[[120,120],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[358,213],[358,[[29,[214]]]],[203,[[43,[149]]]],[134,356],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[120,120],120],[140,224],0,0,0,0,0,0,0,0,0,0,0,[[],170],[[170,170],170],[[170,170],75],[[170,170],170],[[170,170],75],[170,17],[[170,170],170],[[170,170],75],[-1,-2,[],[]],[-1,-2,[],[]],[143,5],[170,170],[[-1,-2],75,[],[]],[[170,170],77],[[170,170],109],[143,93],[[],170],[[170,170],170],[[],170],[[170,170],109],[143,17],[[170,122],123],[[170,122],123],[[170,122],123],[[170,122],123],[[170,122],123],[143,50],[143,8],[-1,-1,[]],[17,[[12,[170]]]],[17,170],[[],170],[143,50],[[170,-1],75,142],[143,50],[[170,170],75],[[170,170],170],[[170,170],109],[-1,-2,[],[]],[170,109],[143,17],[143,170],[143,5],[143,93],[170,170],[[170,170],[[12,[77]]]],[21,[[10,[143,9]]]],[[170,170],75],[[170,170],170],[[170,170],75],[-1,-2,[],[]],[170],[[170,170],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[[170,170],170],[143,17],[143,224],[143,50],[143,50],[143,50],[143,50],0,[144,15],[144,22],[144,50],[144,50],[144,50],[144,22],[144,22],[144,50],[144,22],[144,22],[144,17],[21,[[10,[144,9]]]],[144,224],[144,22],0,0,[141,17],0,[-1,-2,[],[]],[-1,-2,[],[]],[141,141],[[-1,-2],75,[],[]],[[141,141],77],[[141,141],109],[[141,122],123],[-1,-1,[]],[145,[[3,[141]]]],[[141,-1],75,142],[-1,-2,[],[]],[145,[[3,[[16,[50]]]]]],[[141,141],[[12,[77]]]],[[21,17,17],[[10,[145,9]]]],[[21,[75,[17,17]]],[[10,[145,9]]]],[141,50],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],0,[[147,6,[3,[7]]],[[10,[8,9]]]],[147,[[12,[[10,[11,9]]]]]],[147,[[14,[13]]]],[147,[[10,[150,9]]]],[147,13],[[147,6,[3,[7]]],[[10,[8,9]]]],[147,[[12,[[10,[11,9]]]]]],[147,[[14,[13]]]],[21,[[10,[147,9]]]],[[147,6,[3,[7]]],[[10,[8,9]]]],[147,[[12,[[10,[11,9]]]]]],[147,[[14,[13]]]],[147,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[208,21],[[10,[359,9]]]],[208,13],0,[91,17],[360,[[10,[34,9]]]],[360,18],[361,[[3,[[16,[18]]]]]],[361,[[20,[35,18]]]],[60,17],[58,17],[361,17],[60,[[3,[[16,[6]]]]]],[58,[[3,[[16,[17]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,17],[56,[[3,[[16,[18]]]]]],[360,17],[360,[[3,[[16,[[14,[18]]]]]]]],[360,[[57,[56,18]]]],[56,[[20,[58,18]]]],[59,17],[59,[[3,[[16,[18]]]]]],[362,17],[362,[[3,[[16,[[14,[18]]]]]]]],[362,[[57,[59,18]]]],[59,[[20,[60,18]]]],[363,17],[363,[[3,[[16,[61]]]]]],[64,17],0,[364,[[10,[34,9]]]],[364,18],[365,17],[366,17],[366,17],[366,[[3,[64]]]],[65,17],[65,[[3,[[16,[18]]]]]],[364,17],[364,[[3,[[16,[[14,[18]]]]]]]],[364,[[57,[65,18]]]],[65,[[20,[66,18]]]],[365,[[3,[[16,[17]]]]]],[167,167],[198,198],[155,155],[116,116],[187,187],[35,35],[64,64],[34,34],[199,199],[367,367],[368,368],[98,98],[100,100],[117,117],[208,208],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[167,167],77],[[187,187],77],[[64,64],77],[[199,199],77],[[98,98],77],[369,17],[369,[[3,[[16,[13]]]]]],[[117,21],[[12,[[10,[369,9]]]]]],[117,[[14,[13]]]],0,[369,[[20,[91,13]]]],[370,[[10,[35,9]]]],[364,[[10,[35,9]]]],[362,[[10,[35,9]]]],[360,[[10,[35,9]]]],[371,17],[372,17],[370,18],[364,18],[362,18],[360,18],[373,[[3,[[16,[18]]]]]],[373,[[20,[35,18]]]],[[],167],[[],98],[374,[[12,[[10,[96,9]]]]]],[374,[[14,[18]]]],[375,98],[376,98],[376,17],[376,17],[375,[[3,[[16,[17]]]]]],[377,17],[[],167],[187,6],[64,6],0,0,[375,17],[[167,167],109],[[187,187],109],[[64,64],109],[[199,199],109],[[98,98],109],[363,104],[363,104],[[116,21],[[10,[359,9]]]],[114,17],[208,17],0,[96,17],[96,[[3,[[16,[17]]]]]],[116,18],0,[359,[[12,[[10,[115,9]]]]]],[359,[[14,[18]]]],[114,[[3,[116]]]],[[117,21],[[12,[[10,[378,9]]]]]],[117,[[14,[13]]]],0,[116,4],0,[118,5],[118,[[3,[117]]]],[91,7],[91,7],[363,104],[[167,122],123],[[198,122],123],[[155,122],123],[[116,122],123],[[187,122],123],[[64,122],123],[[199,122],123],[[98,122],123],[[117,122],123],[[208,122],123],[370,17],[364,17],[373,17],[362,17],[360,17],[361,17],[91,17],[363,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,167],[[],167],[[],98],[[371,6],[[12,[17]]]],[[372,6],[[12,[17]]]],[[365,6],17],[[366,6],17],[[35,6],[[12,[17]]]],[[34,6],17],[[[379,[-1]],18],[[10,[-1,9]]],111],[371,[[3,[[16,[6]]]]]],[371,17],[365,17],[201,17],[66,17],[373,17],[[167,-1],75,142],[[187,-1],75,142],[[64,-1],75,142],[[199,-1],75,142],[[98,-1],75,142],[377,17],[167,109],[167,109],[167,109],[360,[[10,[34,9]]]],[360,18],[361,[[3,[[16,[18]]]]]],[361,[[20,[35,18]]]],[60,17],[58,17],[361,17],[201,[[3,[[16,[6]]]]]],[66,[[3,[[16,[17]]]]]],[60,[[3,[[16,[6]]]]]],[58,[[3,[[16,[17]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[365,[[0,[84]]]],[366,[[0,[84]]]],[375,[[0,[84]]]],[35,[[0,[84]]]],[34,[[0,[84]]]],[[155,21],[[10,[96,9]]]],[374,17],[155,18],0,[374,[[3,[155]]]],[155,4],0,[360,[[10,[34,9]]]],[360,18],[361,[[3,[[16,[18]]]]]],[361,[[20,[35,18]]]],[60,17],[58,17],[361,17],[60,[[3,[[16,[6]]]]]],[58,[[3,[[16,[17]]]]]],[[[380,[-1]]],17,[]],[[[379,[-1]]],167,[]],[359,17],[199,17],0,[359,[[3,[[16,[17]]]]]],[[[380,[-1]]],[[3,[[16,[18]]]]],[]],[[[379,[-1]]],17,[]],[[[380,[-1]]],[[20,[-1,18]]],111],[167,[[12,[17]]]],[[[379,[-1]]],17,[]],[377,17],[17,98],[363,17],[[167,167],[[12,[77]]]],[[187,187],[[12,[77]]]],[[64,64],[[12,[77]]]],[[199,199],[[12,[77]]]],[[98,98],[[12,[77]]]],[372,17],[377,17],[372,[[3,[187]]]],[377,17],[21,[[10,[197,9]]]],[21,[[10,[374,9]]]],[21,[[10,[96,9]]]],[21,[[10,[114,9]]]],[[21,4],[[10,[359,9]]]],[21,[[10,[[380,[-1]],9]]],[]],[21,[[10,[[379,[-1]],9]]],[]],[21,[[10,[371,9]]]],[21,[[10,[372,9]]]],[21,[[10,[365,9]]]],[21,[[10,[366,9]]]],[21,[[10,[370,9]]]],[21,[[10,[200,9]]]],[21,[[10,[201,9]]]],[21,[[10,[364,9]]]],[21,[[10,[65,9]]]],[21,[[10,[66,9]]]],[21,[[10,[373,9]]]],[21,[[10,[362,9]]]],[21,[[10,[59,9]]]],[21,[[10,[60,9]]]],[21,[[10,[360,9]]]],[21,[[10,[56,9]]]],[21,[[10,[58,9]]]],[21,[[10,[361,9]]]],[21,[[10,[375,9]]]],[21,[[10,[376,9]]]],[21,[[10,[118,9]]]],[21,[[10,[369,9]]]],[21,[[10,[91,9]]]],[21,[[10,[378,9]]]],[21,[[10,[377,9]]]],[21,[[10,[381,9]]]],[21,[[10,[363,9]]]],[21,[[10,[35,9]]]],[21,[[10,[34,9]]]],[21,[[10,[367,9]]]],[21,[[10,[368,9]]]],[21,[[10,[100,9]]]],[[21,4],[[10,[115,9]]]],[[21,4],[[10,[359,9]]]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[21,[[10,[-1,9]]],[]],[96,17],[167,109],[363,104],[[198,21],[[10,[374,9]]]],[197,17],[198,18],0,[197,[[3,[198]]]],[198,4],0,[201,17],[66,17],[373,17],[60,17],[58,17],[361,17],[201,[[3,[199]]]],[66,[[3,[199]]]],[373,[[3,[199]]]],[60,[[3,[199]]]],[58,[[3,[199]]]],[361,[[3,[199]]]],[200,17],[200,[[3,[[16,[18]]]]]],[370,17],[370,[[3,[[16,[[14,[18]]]]]]]],[370,[[57,[200,18]]]],[200,[[20,[201,18]]]],[199,17],0,[[167,109],75],[[167,109],75],[[167,109],75],[[167,17],75],[[167,109],75],[[167,109],75],[187,17],0,[365,6],[187,6],[64,6],0,0,[375,17],[[[379,[-1]]],17,[]],[378,17],[378,[[3,[208]]]],[[[379,[-1]]],[[3,[[16,[18]]]]],[]],[[[379,[-1]]],[[20,[-1,18]]],111],[167,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167],[98],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[381,104],[167,109],[118,224],[378,224],[381,17],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[165,165],[[-1,-2],75,[],[]],[-1,-1,[]],[[165,6,130],[[10,[[12,[315]],9]]]],[[165,90],[[12,[5]]]],[-1,-2,[],[]],[165,109],[165,90],[[21,109],[[10,[165,9]]]],[21,[[10,[165,9]]]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],0,[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,[[12,[17]]]],[177,17],[21,[[10,[177,9]]]],[177,225],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[220,220],[[-1,-2],75,[],[]],[[220,220],77],[220,17],0,[220,17],0,[[220,220],109],[[220,122],123],[-1,-1,[]],[[220,-1],75,142],[-1,-2,[],[]],[178,[[12,[[10,[150,9]]]]]],[178,[[14,[18]]]],[[178,4,[3,[7]]],[[10,[8,9]]]],[[220,220],[[12,[77]]]],[21,[[10,[178,9]]]],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[178,17],[178,17],[178,[[3,[220]]]],[220,4],0,[178,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[382,383],[104,104],[156,156],[180,180],[382,382],[383,383],[384,384],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[104,104],77],[179,17],[[385,2],386],[[],104],[[385,386],[[12,[2]]]],[180,17],0,[[104,104],109],[[382,382],109],[[384,384],109],[[104,122],[[10,[75,387]]]],[[104,122],[[10,[75,387]]]],[[156,122],123],[[180,122],123],[[382,122],123],[[382,122],123],[17,104],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[388,[2]]],104],[[104,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[382],[-1,-2,[],[]],[[156,21],[[10,[382,9]]]],[179,[[12,[17]]]],[156,18],0,[179,[[12,[[3,[156]]]]]],[180,17],0,[156,17],[180,17],0,0,[180,104],0,[179,[[3,[180]]]],[17,104],[[17,17],384],[383,12],[[104,104],[[12,[77]]]],[180,17],0,[[],[[0,[84,69]]]],[21,[[10,[179,9]]]],[179,17],[[180,21],[[10,[382,9]]]],[179,21],[180,18],0,[104,[[388,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,[[388,[2]]]],[-1,209,[]],[-1,209,[]],[104,17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[179,17],0,0,0,0,0,0,0,0,0,0,0,0,[182,4],[[],124],[[124,124],124],[[124,124],75],[[124,124],124],[[124,124],75],[124,17],[[124,124],124],[[124,124],75],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[[-1,-2],75,[],[]],[[124,124],77],[[124,124],109],[[],124],[[124,124],124],[[],124],[[124,124],109],[[124,122],123],[[124,122],123],[[124,122],123],[[124,122],123],[[124,122],123],[-1,-1,[]],[17,[[12,[124]]]],[17,124],[[],124],[182,124],[182,17],[[124,-1],75,142],[[124,124],75],[[124,124],124],[[124,124],109],[-1,-2,[],[]],[124,109],[124,124],[182,[[3,[2]]]],[[124,124],[[12,[77]]]],[21,[[10,[182,9]]]],[[124,124],75],[182,[[12,[50]]]],[182,50],[182,50],[182,50],[182,50],[[124,124],124],[[124,124],75],[182,[[12,[50]]]],[-1,-2,[],[]],[124],[[124,124],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[182,[[12,[5]]]],[182,[[12,[5]]]],[182,5],[182,5],[182,5],[182,5],[[124,124],124],[182,[[12,[17]]]],[182,[[12,[17]]]],[182,17],[182,17],[182,[[12,[17]]]],[182,[[12,[17]]]],[182,[[12,[17]]]],[182,17],[182,17],[182,17],[182,17],[182,17],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],[182,50],0,0,0,[207,133],[-1,-2,[],[]],[-1,-2,[],[]],[207,207],[[-1,-2],75,[],[]],[207],[[207,207],109],[[207,133],109],[[207,122],123],[-1,-1,[]],[[186,6],[[12,[133]]]],[186,[[12,[[3,[[16,[17]]]]]]]],[-1,-2,[],[]],[186,5],[186,8],[186,5],[186,5],[186,5],[186,5],[186,[[12,[17]]]],[186,90],[21,[[10,[186,9]]]],[21,[[10,[207,9]]]],[21,[[10,[-1,9]]],[]],[186,[[12,[[29,[207]]]]]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[186,22],[186,22],[186,225],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[389,390],[[10,[75,129]]]],[389,75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[254,[[0,[84,69]]]],0,[389,75],[391,391],[392,392],[255,255],[254,254],[393,393],[188,188],[189,189],[129,129],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[392,392],77],[[188,188],77],[[189,189],77],[391,5],[253,17],[257,5],[253,[[3,[2]]]],[257,[[3,[2]]]],[[],389],0,[[392,392],109],[[255,255],109],[[254,254],109],[[254,133],109],[[188,188],109],[[189,189],109],[188,2],[189,17],0,0,[394,[[3,[2]]]],[188,17],[189,5],0,0,[[389,90],[[10,[[388,[8]],129]]]],[389,[[0,[84]]]],[[392,122],123],[[392,122],123],[[255,122],123],[[254,122],123],[[254,122],123],[[188,122],123],[[189,122],123],[[129,122],123],[[129,122],123],[[393,6],[[12,[17]]]],[394,2],[395,2],[396,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,392],[88,392],[88,255],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,129],[[391,90],[[10,[[3,[2]],129]]]],[[253,90],[[10,[[3,[2]],129]]]],[[257,90],[[10,[[3,[2]],129]]]],[[389,90],[[10,[8,129]]]],[[389,90],[[10,[88,129]]]],[[391,90],[[10,[90,129]]]],[[253,90],[[10,[90,129]]]],[[257,90],[[10,[90,129]]]],[[255,-1],75,142],[[188,-1],75,142],[[189,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[389,109],[389,90],[389,109],[395,17],[396,5],[[150,[3,[7]],17],[[10,[390,129]]]],[[],389],[[[3,[2]],109],[[10,[391,129]]]],[17,255],[[[3,[2]]],254],[389,[[0,[84]]]],[253,2],[257,2],[253,[[3,[2]]]],[257,[[3,[2]]]],[[392,392],[[12,[77]]]],[[188,188],[[12,[77]]]],[[189,189],[[12,[77]]]],[389,[[10,[8,129]]]],[389,[[10,[88,129]]]],[[389,-1],[[10,[75,129]]],[[166,[392]]]],[395,[[3,[188]]]],[396,[[3,[189]]]],[21,[[10,[253,9]]]],[21,[[10,[257,9]]]],[21,[[10,[394,9]]]],[21,[[10,[395,9]]]],[21,[[10,[396,9]]]],[21,[[10,[393,9]]]],[21,[[10,[-1,9]]],[]],[390,[[10,[90,129]]]],[389,75],[390,[[10,[[0,[84]],129]]]],[395,17],[396,5],[[390,17],[[10,[75,129]]]],[391,[[10,[90,9]]]],[253,[[10,[90,9]]]],[257,[[10,[90,9]]]],[255,[[10,[254,90]]]],[391,88],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,209,[]],[-1,209,[]],[-1,209,[]],[255,17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[389,90],[[10,[75,129]]]],[[389,90],[[10,[75,129]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[[[397,[-1]]],75,324],[[-1,[3,[2]]],75,[]],[[-1,8,8,8,8,8,8],75,[]],[[[397,[-1]],8,8,8,8,8,8],75,324],[[[3,[2]],391,[12,[391]],[12,[390]],-1],[[10,[75,129]]],398],[-1,-1,[]],[[-1,[3,[2]]],75,[]],[[-1,8,8],75,[]],[-1,-2,[],[]],[[-1,8,8],75,[]],[[[397,[-1]],8,8],75,324],[[-1,8,8],75,[]],[[[397,[-1]],8,8],75,324],[-1,[[397,[-1]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[[-1,8,8],75,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[399,399],[400,400],[401,401],[402,402],[403,403],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[],402],[[],403],[[[3,[2]],[12,[390]]],[[0,[84]]]],[[399,399],109],[[400,400],109],[[401,401],109],[[402,402],109],[[403,403],109],[[399,122],123],[[400,122],123],[[401,122],123],[[402,122],123],[[403,122],123],[-1,-1,[]],[399,400],[-1,400,[[166,[392]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[399,-1],75,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,402,84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[2]]],[[0,[84,69]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[402,[[3,[[75,[8,8]]]]]],[403,[[3,[8]]]],0,0,0,0,0,0,0,0,0,[[],121],[[121,121],121],[[121,121],75],[[121,121],121],[[121,121],75],[121,17],[[121,121],121],[[121,121],75],[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[[-1,-2],75,[],[]],[[121,121],77],[[121,121],109],[132,[[3,[2]]]],[[],121],[[121,121],121],[[],121],[[121,121],109],[196,121],[[121,122],123],[[121,122],123],[[121,122],123],[[121,122],123],[[121,122],123],[-1,-1,[]],[17,[[12,[121]]]],[17,121],[[],121],[[206,6],[[10,[[12,[132]],9]]]],[206,[[3,[[16,[5]]]]]],[132,4],[[121,-1],75,142],[[121,121],75],[[121,121],121],[[121,121],109],[-1,-2,[],[]],[121,109],[121,121],[196,5],[132,50],[132,50],[[121,121],[[12,[77]]]],[206,17],[206,17],[[21,17],[[10,[196,9]]]],[[21,17],[[10,[206,9]]]],[21,[[10,[132,9]]]],[[21,17],[[10,[196,9]]]],[[21,17],[[10,[206,9]]]],[[121,121],75],[196,[[3,[[16,[13]]]]]],[196,[[20,[206,13]]]],[[121,121],121],[[121,121],75],[-1,-2,[],[]],[121],[[121,121],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[[121,121],121],[196,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],119],[404,17],[405,17],[406,17],[407,17],[31,17],0,[99,104],0,[99,17],0,[99,4],0,[205,17],[181,[[3,[[16,[18]]]]]],[181,[[20,[30,18]]]],[404,[[3,[31]]]],[[119,119],119],[[119,119],75],[[119,119],119],[[119,119],75],[119,17],[[119,119],119],[[119,119],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,99],[30,30],[31,31],[119,119],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[99,99],77],[[31,31],77],[[119,119],77],[[119,119],109],[[],119],[205,[[10,[[3,[99]],9]]]],[205,13],[205,17],[205,17],[[119,119],119],[205,[[12,[104]]]],[[],119],[[99,99],109],[[31,31],109],[[119,119],109],[405,119],[406,119],[407,119],[404,119],[[99,122],123],[[31,122],123],[[119,122],123],[[119,122],123],[[119,122],123],[[119,122],123],[[119,122],123],[405,17],[406,17],[407,17],[404,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[12,[119]]]],[17,119],[[],119],[[99,-1],75,142],[[31,-1],75,142],[[119,-1],75,142],[[119,119],75],[[119,119],119],[[119,119],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,109],[407,8],[406,8],[119,119],[205,[[14,[13]]]],[205,[[12,[[10,[181,9]]]]]],[[99,99],[[12,[77]]]],[[31,31],[[12,[77]]]],[[119,119],[[12,[77]]]],[406,8],[406,8],[21,[[10,[205,9]]]],[[21,17],[[10,[181,9]]]],[21,[[10,[405,9]]]],[21,[[10,[406,9]]]],[21,[[10,[407,9]]]],[21,[[10,[404,9]]]],[21,[[10,[30,9]]]],[[21,17],[[10,[181,9]]]],[21,[[10,[-1,9]]],[]],[[119,119],75],[[119,119],119],[[119,119],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119],[[119,119],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[119,119],119],[405,8],[407,8],[31,8],0,[405,104],[406,104],[407,104],[404,104],[205,224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],107],[[-1,89],408,[]],[222,17],[107,2],[[107,107],107],[[107,107],75],[[107,107],107],[[107,107],75],[107,2],[212,17],[213,17],[[107,107],107],[[107,107],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[149,149],[11,11],[107,107],[223,223],[409,409],[87,87],[212,212],[213,213],[410,410],[357,357],[411,411],[412,412],[89,89],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[-1,-2],75,[],[]],[[149,149],77],[[107,107],77],[[223,223],77],[[409,409],77],[[212,212],77],[[213,213],77],[[150,87,[3,[7]]],[[10,[88,9]]]],[[150,87,[3,[7]]],[[10,[89,9]]]],[[223,[3,[7]]],8],[[223,[3,[7]]],408],[17,90],[17,90],[[107,107],109],[213,17],[410,17],[[],149],[[],107],[[],212],[[],213],[[],89],[[151,17],[[0,[84,69]]]],[151,[[3,[2]]]],[[107,107],107],[212,109],[[],107],[409,7],0,[413,107],[414,107],[107,2],[[149,149],109],[[107,107],109],[[223,223],109],[[409,409],109],[[212,212],109],[[213,213],109],[[149,122],123],[[107,122],123],[[107,122],123],[[107,122],123],[[107,122],123],[[107,122],123],[[223,122],123],[[409,122],123],[[87,122],123],[[212,122],123],[[213,122],123],[[410,122],123],[[357,122],123],[[411,122],123],[[412,122],123],[[89,122],123],[413,2],[414,2],[150,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[12,[107]]]],[17,212],[17,213],[2,107],[[],107],[[],212],[[],213],[[149,90],[[12,[7]]]],[[11,5],[[10,[87,9]]]],[[149,-1],75,142],[[107,-1],75,142],[[223,-1],75,142],[[409,-1],75,142],[[212,-1],75,142],[[213,-1],75,142],0,[[107,107],75],[214,[[12,[149]]]],[212,109],[214,[[12,[149]]]],[[107,107],107],[[107,107],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[149,109],[107,109],[151,17],[150,[[57,[151,13]]]],[150,17],[150,[[3,[[16,[[14,[13]]]]]]]],[410,357],[149,90],[413,17],[414,5],[413,[[3,[2]]]],[414,[[3,[2]]]],[415,12],[357,12],[412,12],[107,107],0,[[149,149],[[12,[77]]]],[[107,107],[[12,[77]]]],[[223,223],[[12,[77]]]],[[409,409],[[12,[77]]]],[[212,212],[[12,[77]]]],[[213,213],[[12,[77]]]],[409,7],0,[214,[[12,[149]]]],[212,109],[[21,17],[[10,[214,9]]]],[21,[[10,[413,9]]]],[21,[[10,[414,9]]]],[21,[[10,[222,9]]]],[21,[[10,[150,9]]]],[21,[[10,[151,9]]]],[[21,17],[[10,[149,9]]]],[21,[[10,[11,9]]]],[[21,17],[[10,[223,9]]]],[[21,17],[[10,[214,9]]]],[[21,17],[[10,[149,9]]]],[21,[[10,[-1,9]]],[]],[[21,17],[[10,[223,9]]]],[223,[[3,[409]]]],0,[222,17],[151,17],[151,[[3,[[16,[17]]]]]],[[107,107],75],[213,109],[357,[[75,[90,[12,[90]]]]]],[21,[[75,[410,21]]]],[409,7],0,[[107,107],107],[[107,107],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107],[212],[213],[[107,107],75],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[214,212],[212,[[12,[17]]]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[-1,215,[]],[[107,107],107],[149,[[3,[[16,[7]]]]]],0,[214,17],[150,[[10,[222,9]]]],[150,13],[222,[[43,[223]]]],[151,17],0,[226,15],[226,22],[226,50],[226,50],[226,50],[226,22],[226,22],[226,50],[226,22],[226,22],[226,17],[21,[[10,[226,9]]]],[226,225],[226,22],0,0,[[21,17,17],[[10,[227,9]]]],[[21,[75,[17,17]]],[[10,[227,9]]]],[227,[[3,[[16,[50]]]]]],[227,[[3,[141]]]],0,[[228,6,[3,[7]]],[[10,[8,9]]]],[228,[[12,[[10,[11,9]]]]]],[228,[[14,[13]]]],[[228,6,[3,[7]]],[[10,[8,9]]]],[228,[[12,[[10,[11,9]]]]]],[228,[[14,[13]]]],[228,[[10,[150,9]]]],[228,13],[21,[[10,[228,9]]]],[[228,6,[3,[7]]],[[10,[8,9]]]],[228,[[12,[[10,[11,9]]]]]],[228,[[14,[13]]]],[[228,6,[3,[7]]],[[10,[8,9]]]],[228,[[12,[[10,[11,9]]]]]],[228,[[14,[13]]]],[228,224]],"c":[],"p":[[3,"TableRef",0],[15,"u8"],[15,"slice"],[3,"Tag",6527],[15,"u32"],[3,"GlyphId",6528],[3,"F2Dot14",6529],[3,"Fixed",6529],[4,"ReadError",0],[4,"Result",6530],[4,"DeltaSetIndexMap",6160],[4,"Option",6531],[3,"Offset32",6532],[3,"Nullable",6532],[3,"UfWord",6533],[3,"BigEndian",6534],[15,"u16"],[3,"Offset16",6532],[6,"AlternateSet",4117],[3,"ArrayOfOffsets",0],[3,"FontData",0],[3,"FWord",6533],[6,"AttachList",3220],[6,"AttachPoint",3220],[6,"Avar",1482],[3,"VariationAxisRecord",3156],[6,"AxisInstanceArrays",3156],[3,"SegmentMaps",1482],[3,"VarLenArray",1416],[4,"AxisValue",6006],[3,"AxisValueRecord",6006],[4,"Paint",2424],[3,"Offset24",6532],[4,"ClassDef",4552],[4,"CoverageTable",4552],[6,"BaseArray",3628],[4,"BaseCoord",1530],[6,"BaseGlyphList",2424],[3,"BaseGlyphPaint",2424],[3,"BaseGlyph",2424],[3,"BaseLangSysRecord",1530],[3,"BaseRecord",3628],[3,"ComputedArray",1416],[6,"BaseScriptList",1530],[3,"BaseScriptRecord",1530],[6,"BaseTagList",1530],[6,"BaseValues",1530],[3,"BigGlyphMetrics",1661],[3,"BitmapSize",1661],[15,"i16"],[4,"CaretValue",3220],[6,"Cbdt",2020],[6,"Cblc",2025],[3,"Cff",2031],[3,"Cff2",2060],[6,"ChainedClassSequenceRuleSet",4552],[3,"ArrayOfNullableOffsets",0],[6,"ChainedClassSequenceRule",4552],[6,"ChainedSequenceRuleSet",4552],[6,"ChainedSequenceRule",4552],[3,"Uint24",6535],[3,"TableRecord",0],[3,"Class1Record",3628],[3,"ClassRangeRecord",4552],[6,"ClassSequenceRuleSet",4552],[6,"ClassSequenceRule",4552],[6,"ClipList",2424],[3,"Clip",2424],[8,"Clone",6536],[8,"ReadArgs",0],[8,"Scalar",6534],[4,"FileRef",0],[3,"CollectionRef",0],[3,"FontRef",0],[15,"tuple"],[6,"Cmap",2086],[4,"Ordering",6537],[6,"ColorLine",2424],[6,"VarColorLine",2424],[3,"ColorRecord",3058],[3,"ColorStop",2424],[3,"VarColorStop",2424],[6,"Colr",2424],[8,"Iterator",6538],[3,"ComponentRecord",3628],[4,"CompositeMode",2424],[3,"DeltaSetIndex",6160],[15,"i32"],[3,"FloatItemDelta",6160],[15,"usize"],[6,"ConditionFormat1",4552],[6,"Cpal",3058],[3,"LongDateTime",6539],[3,"BitmapLocation",1661],[3,"BitmapData",1661],[6,"LangSys",4552],[6,"MinMax",1530],[4,"DeltaFormat",4552],[3,"AxisRecord",6006],[4,"DeviceOrVariationIndex",4552],[6,"TTCHeader",0],[6,"Ebdt",3145],[6,"Eblc",3150],[3,"NameId",5194],[3,"EncodingRecord",2086],[3,"EntryExitRecord",3628],[3,"EntryFormat",6160],[6,"TableDirectory",0],[15,"bool"],[8,"TopLevelTable",0],[8,"FontRead",0],[4,"Extend",2424],[3,"FeatMinMaxRecord",1530],[6,"FeatureList",4552],[4,"FeatureParams",4552],[3,"FeatureRecord",4552],[3,"FeatureVariationRecord",4552],[6,"FeatureVariations",4552],[3,"AxisValueTableFlags",6006],[3,"GvarFlags",4271],[3,"HeaderFlags",5937],[3,"Formatter",6540],[6,"Result",6540],[3,"SelectionFlags",5352],[6,"Fvar",3156],[6,"Gdef",3220],[8,"FontReadWithArgs",0],[8,"Offset",0],[4,"Error",5484],[6,"Glyf",3329],[3,"GlyphIdOffsetPair",1661],[6,"GlyphData",5937],[15,"str"],[3,"GlyphVariationData",4271],[3,"U16Or32",4271],[6,"Gpos",3628],[3,"ConstantMapGroup",2086],[3,"SequentialMapGroup",2086],[6,"Gsub",4117],[6,"Gvar",4271],[3,"LongMetric",4513],[8,"Hasher",6541],[6,"Head",4426],[6,"Hhea",4498],[6,"Hmtx",4513],[6,"Axis",1530],[6,"Hvar",4538],[3,"InstanceRecord",3156],[3,"Tuple",6160],[6,"ItemVariationStore",6160],[6,"ItemVariationData",6160],[3,"Cmap14Iter",2086],[3,"Cmap4Iter",2086],[3,"Cmap12Iter",2086],[3,"LangSysRecord",4552],[3,"LangTagRecord",5194],[6,"LayerList",2424],[3,"Layer",2424],[6,"LigCaretList",3220],[6,"LigGlyph",3220],[6,"LigatureArray",3628],[6,"LigatureAttach",3628],[6,"LigatureSet",4117],[6,"Ligature",4117],[4,"Loca",5088],[8,"Into",6542],[3,"LookupFlag",4552],[6,"SubstitutionLookupList",4117],[6,"PositionLookupList",3628],[3,"MacStyle",4426],[4,"MapVariant",2086],[6,"MarkArray",3628],[6,"Mark2Array",3628],[3,"Mark2Record",3628],[6,"MarkGlyphSets",3220],[3,"MarkRecord",3628],[6,"Maxp",5107],[6,"Mvar",5124],[6,"Name",5194],[3,"NameRecord",5194],[6,"AxisValueArray",6006],[6,"Os2",5352],[6,"PairSet",3628],[3,"PairValueRecord",3628],[3,"PaletteType",3058],[6,"Post",5449],[3,"RangeRecord",4552],[3,"FdSelectRange3",5484],[3,"FdSelectRange4",5484],[3,"UnicodeRange",2086],[3,"ValueFormat",3628],[3,"Range",6543],[8,"FromBytes",0],[3,"Point",6544],[3,"PointFlags",3329],[6,"Sbix",5937],[6,"ScriptList",4552],[3,"ScriptRecord",4552],[3,"SequenceLookupRecord",4552],[6,"SequenceRuleSet",4552],[6,"SequenceRule",4552],[6,"Sequence",4117],[6,"SharedTuples",4271],[8,"RangeBounds",6543],[6,"Stat",6006],[6,"Strike",5937],[3,"PString",5449],[3,"FeatureTableSubstitutionRecord",4552],[3,"String",6545],[6,"VarAffine2x3",2424],[6,"Affine2x3",2424],[3,"TupleIndex",6160],[3,"TupleVariationCount",6160],[6,"TupleVariationHeader",6160],[3,"TypeId",6546],[3,"UvsMapping",2086],[6,"PaintId",2424],[4,"ClipBox",2424],[3,"ValueRecord",3628],[3,"ValueRecord",5124],[3,"VariationSelector",2086],[6,"VariationRegionList",6160],[3,"VariationRegion",6160],[3,"MajorMinor",6547],[3,"Version16Dot16",6547],[6,"Vhea",6489],[6,"Vmtx",6504],[6,"Vvar",6510],[8,"VarSize",0],[8,"ComputeSize",0],[3,"AxisValueMap",1482],[6,"BaseCoordFormat1",1530],[6,"BaseCoordFormat2",1530],[6,"BaseCoordFormat3",1530],[6,"BaseScript",1530],[6,"Base",1530],[6,"IndexSubtableArray",1661],[3,"SmallGlyphMetrics",1661],[3,"BitmapFlags",1661],[3,"SbitLineMetrics",1661],[15,"i8"],[6,"IndexSubtable2",1661],[6,"IndexSubtable5",1661],[4,"IndexSubtable",1661],[3,"BdtComponent",1661],[4,"BitmapDataFormat",1661],[4,"BitmapMetrics",1661],[4,"BitmapContent",1661],[6,"IndexSubtable4",1661],[6,"IndexSubtable1",1661],[6,"IndexSubtable3",1661],[6,"CffHeader",2031],[6,"Index1",5484],[3,"Latin1String",5484],[3,"StringId",5484],[6,"Cff2Header",2060],[6,"Index2",5484],[4,"PlatformId",2086],[4,"CmapSubtable",2086],[3,"SubHeader",2086],[6,"DefaultUvs",2086],[6,"Cmap4",2086],[6,"Cmap6",2086],[6,"Cmap0",2086],[6,"Cmap2",2086],[6,"Cmap8",2086],[6,"Cmap10",2086],[6,"Cmap12",2086],[6,"Cmap13",2086],[6,"Cmap14",2086],[6,"NonDefaultUvs",2086],[6,"PaintSolid",2424],[6,"PaintVarSolid",2424],[3,"ColorIndex",2424],[3,"VarColorIndex",2424],[6,"PaintRotate",2424],[6,"PaintVarRotate",2424],[6,"PaintRotateAroundCenter",2424],[6,"PaintVarRotateAroundCenter",2424],[6,"PaintComposite",2424],[6,"PaintSweepGradient",2424],[6,"PaintVarSweepGradient",2424],[6,"PaintScaleAroundCenter",2424],[6,"PaintVarScaleAroundCenter",2424],[6,"PaintScaleUniformAroundCenter",2424],[6,"PaintVarScaleUniformAroundCenter",2424],[6,"PaintSkewAroundCenter",2424],[6,"PaintVarSkewAroundCenter",2424],[6,"PaintLinearGradient",2424],[6,"PaintVarLinearGradient",2424],[6,"PaintRadialGradient",2424],[6,"PaintVarRadialGradient",2424],[6,"PaintTranslate",2424],[6,"PaintVarTranslate",2424],[6,"PaintColrLayers",2424],[6,"ClipBoxFormat1",2424],[6,"ClipBoxFormat2",2424],[6,"PaintGlyph",2424],[6,"PaintColrGlyph",2424],[6,"PaintTransform",2424],[6,"PaintVarTransform",2424],[6,"PaintScale",2424],[6,"PaintVarScale",2424],[6,"PaintScaleUniform",2424],[6,"PaintVarScaleUniform",2424],[6,"PaintSkew",2424],[6,"PaintVarSkew",2424],[6,"CaretValueFormat1",3220],[6,"CaretValueFormat2",3220],[6,"CaretValueFormat3",3220],[4,"GlyphClassDef",3220],[3,"SimpleGlyphFlags",3329],[3,"CompositeGlyphFlags",3329],[3,"PointMarker",3329],[4,"Glyph",3329],[3,"CurvePoint",3329],[3,"Transform",3329],[3,"Component",3329],[4,"Anchor",3329],[4,"ToPathError",3329],[6,"CompositeGlyph",3329],[6,"SimpleGlyph",3329],[3,"F26Dot6",6529],[8,"Pen",6548],[6,"AnchorFormat1",3628],[6,"AnchorFormat2",3628],[6,"AnchorFormat3",3628],[4,"AnchorTable",3628],[6,"MarkBasePosFormat1",3628],[6,"PairPosFormat2",3628],[3,"Class2Record",3628],[4,"SinglePos",3628],[4,"PairPos",3628],[6,"SinglePosFormat1",3628],[6,"SinglePosFormat2",3628],[6,"PairPosFormat1",3628],[6,"CursivePosFormat1",3628],[6,"ExtensionPosFormat1",3628],[6,"MarkLigPosFormat1",3628],[6,"MarkMarkPosFormat1",3628],[4,"PositionLookup",3628],[4,"ExtensionSubtable",3628],[6,"AlternateSubstFormat1",4117],[6,"ReverseChainSingleSubstFormat1",4117],[4,"SingleSubst",4117],[6,"SingleSubstFormat1",4117],[6,"SingleSubstFormat2",4117],[6,"MultipleSubstFormat1",4117],[6,"LigatureSubstFormat1",4117],[6,"ExtensionSubstFormat1",4117],[4,"SubstitutionLookup",4117],[4,"ExtensionSubtable",4117],[3,"GlyphDelta",4271],[3,"TupleVariation",4271],[3,"DeltaIter",4271],[3,"TupleVariationIter",4271],[3,"PackedPointNumbersIter",6160],[6,"GlyphVariationDataHeader",4271],[6,"Feature",4552],[6,"ChainedSequenceContextFormat2",4552],[6,"ChainedSequenceContextFormat3",4552],[6,"ChainedSequenceContextFormat1",4552],[6,"CharacterVariantParams",4552],[6,"SequenceContextFormat2",4552],[6,"ClassDefFormat1",4552],[6,"ClassDefFormat2",4552],[4,"SequenceContext",4552],[4,"ChainedSequenceContext",4552],[6,"ConditionSet",4552],[6,"SequenceContextFormat1",4552],[6,"CoverageFormat1",4552],[6,"CoverageFormat2",4552],[6,"SequenceContextFormat3",4552],[6,"Script",4552],[6,"Device",4552],[6,"VariationIndex",4552],[6,"SizeParams",4552],[6,"FeatureTableSubstitution",4552],[6,"Lookup",4552],[6,"LookupList",4552],[6,"StylisticSetParams",4552],[3,"NameString",5194],[3,"CharIter",5194],[4,"Encoding",5194],[3,"MacRomanMapping",5194],[15,"char"],[3,"Error",6540],[15,"array"],[3,"Stack",5484],[3,"BlendState",5484],[4,"Index",5484],[4,"Number",5484],[4,"FdSelect",5484],[6,"FdSelectFormat0",5484],[6,"FdSelectFormat3",5484],[6,"FdSelectFormat4",5484],[3,"PenSink",5724],[8,"CommandSink",5724],[4,"Operator",5748],[4,"Token",5748],[4,"Entry",5748],[3,"Blues",5748],[3,"StemSnaps",5748],[6,"AxisValueFormat4",6006],[6,"AxisValueFormat1",6006],[6,"AxisValueFormat2",6006],[6,"AxisValueFormat3",6006],[15,"f32"],[3,"RegionAxisCoordinates",6160],[3,"PackedPointNumbers",6160],[3,"PackedDeltas",6160],[3,"DeltaRunIter",6160],[6,"DeltaSetIndexMapFormat0",6160],[6,"DeltaSetIndexMapFormat1",6160],[3,"TupleVariationHeaderIter",6160],[8,"TableProvider",0],[8,"ResolveOffset",0],[8,"ResolveNullableOffset",0],[13,"Point",3624],[13,"Offset",3624],[6,"PositionSequenceContext",3628],[6,"PositionChainContext",3628],[6,"SubstitutionSequenceContext",4117],[6,"SubstitutionChainContext",4117],[13,"Ros",5934],[8,"FloatItemDeltaTarget",6160]],"b":[[38,"impl-TableRef%3C\'a,+Cff2HeaderMarker%3E"],[39,"impl-TableRef%3C\'a,+CffHeaderMarker%3E"],[50,"impl-TableRef%3C\'a,+PaintVarSolidMarker%3E"],[51,"impl-TableRef%3C\'a,+PaintSolidMarker%3E"],[56,"impl-TableRef%3C\'a,+AnchorFormat1Marker%3E"],[57,"impl-TableRef%3C\'a,+AnchorFormat2Marker%3E"],[58,"impl-TableRef%3C\'a,+AnchorFormat3Marker%3E"],[60,"impl-TableRef%3C\'a,+PaintRotateMarker%3E"],[61,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[62,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[63,"impl-TableRef%3C\'a,+PaintVarRotateMarker%3E"],[67,"impl-TableRef%3C\'a,+HheaMarker%3E"],[68,"impl-TableRef%3C\'a,+VheaMarker%3E"],[75,"impl-TableRef%3C\'a,+AxisInstanceArraysMarker%3E"],[76,"impl-TableRef%3C\'a,+FvarMarker%3E"],[77,"impl-TableRef%3C\'a,+AxisValueFormat4Marker%3E"],[78,"impl-TableRef%3C\'a,+VariationRegionListMarker%3E"],[79,"impl-TableRef%3C\'a,+GvarMarker%3E"],[80,"impl-TableRef%3C\'a,+AvarMarker%3E"],[81,"impl-TableRef%3C\'a,+FvarMarker%3E"],[82,"impl-TableRef%3C\'a,+AxisValueFormat1Marker%3E"],[83,"impl-TableRef%3C\'a,+AxisValueFormat3Marker%3E"],[84,"impl-TableRef%3C\'a,+AxisValueFormat2Marker%3E"],[85,"impl-TableRef%3C\'a,+ConditionFormat1Marker%3E"],[92,"impl-TableRef%3C\'a,+AxisValueArrayMarker%3E"],[93,"impl-TableRef%3C\'a,+AxisValueFormat4Marker%3E"],[98,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[99,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[100,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[101,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[102,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[103,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[104,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[105,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[106,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[107,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[111,"impl-TableRef%3C\'a,+BaseCoordFormat3Marker%3E"],[112,"impl-TableRef%3C\'a,+BaseCoordFormat2Marker%3E"],[113,"impl-TableRef%3C\'a,+BaseCoordFormat1Marker%3E"],[138,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[139,"impl-TableRef%3C\'a,+IndexSubtable2Marker%3E"],[140,"impl-TableRef%3C\'a,+EblcMarker%3E"],[141,"impl-TableRef%3C\'a,+CblcMarker%3E"],[164,"impl-TableRef%3C\'a,+VheaMarker%3E"],[165,"impl-TableRef%3C\'a,+HheaMarker%3E"],[166,"impl-TableRef%3C\'a,+HheaMarker%3E"],[167,"impl-TableRef%3C\'a,+VheaMarker%3E"],[168,"impl-TableRef%3C\'a,+HheaMarker%3E"],[169,"impl-TableRef%3C\'a,+VheaMarker%3E"],[170,"impl-TableRef%3C\'a,+CaretValueFormat3Marker%3E"],[171,"impl-TableRef%3C\'a,+CaretValueFormat2Marker%3E"],[172,"impl-TableRef%3C\'a,+CaretValueFormat1Marker%3E"],[180,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[181,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[182,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[183,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[184,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[185,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[186,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[187,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[188,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[189,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[190,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[191,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[192,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[193,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[194,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[195,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[196,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[197,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[198,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[199,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[230,"impl-TableRef%3C\'a,+ClassDefFormat1Marker%3E"],[231,"impl-TableRef%3C\'a,+ClassDefFormat2Marker%3E"],[265,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[266,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[267,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[268,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[269,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[270,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[271,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[272,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[273,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[274,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[275,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[276,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[280,"impl-TableRef%3C\'a,+ColorLineMarker%3E"],[281,"impl-TableRef%3C\'a,+VarColorLineMarker%3E"],[284,"impl-TableRef%3C\'a,+LigatureAttachMarker%3E"],[285,"impl-TableRef%3C\'a,+LigatureMarker%3E"],[298,"impl-TableRef%3C\'a,+BaseCoordFormat2Marker%3E"],[299,"impl-TableRef%3C\'a,+BaseCoordFormat1Marker%3E"],[300,"impl-TableRef%3C\'a,+BaseCoordFormat3Marker%3E"],[301,"impl-TableRef%3C\'a,+CaretValueFormat3Marker%3E"],[302,"impl-TableRef%3C\'a,+CaretValueFormat1Marker%3E"],[303,"impl-TableRef%3C\'a,+NameMarker%3E"],[304,"impl-TableRef%3C\'a,+Index1Marker%3E"],[305,"impl-TableRef%3C\'a,+Index2Marker%3E"],[307,"impl-TableRef%3C\'a,+PairPosFormat1Marker%3E"],[308,"impl-TableRef%3C\'a,+MultipleSubstFormat1Marker%3E"],[309,"impl-TableRef%3C\'a,+SequenceContextFormat2Marker%3E"],[310,"impl-TableRef%3C\'a,+SingleSubstFormat2Marker%3E"],[311,"impl-TableRef%3C\'a,+SequenceContextFormat1Marker%3E"],[312,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat2Marker%3E"],[313,"impl-TableRef%3C\'a,+AttachListMarker%3E"],[314,"impl-TableRef%3C\'a,+CursivePosFormat1Marker%3E"],[315,"impl-TableRef%3C\'a,+LigCaretListMarker%3E"],[316,"impl-TableRef%3C\'a,+SingleSubstFormat1Marker%3E"],[317,"impl-TableRef%3C\'a,+SinglePosFormat1Marker%3E"],[318,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[319,"impl-TableRef%3C\'a,+SinglePosFormat2Marker%3E"],[320,"impl-TableRef%3C\'a,+AlternateSubstFormat1Marker%3E"],[321,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat1Marker%3E"],[322,"impl-TableRef%3C\'a,+LigatureSubstFormat1Marker%3E"],[323,"impl-TableRef%3C\'a,+PairPosFormat2Marker%3E"],[324,"impl-TableRef%3C\'a,+CoverageFormat1Marker%3E"],[325,"impl-TableRef%3C\'a,+CoverageFormat2Marker%3E"],[326,"impl-TableRef%3C\'a,+SinglePosFormat2Marker%3E"],[327,"impl-TableRef%3C\'a,+AlternateSubstFormat1Marker%3E"],[328,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[329,"impl-TableRef%3C\'a,+SingleSubstFormat1Marker%3E"],[330,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat1Marker%3E"],[331,"impl-TableRef%3C\'a,+MultipleSubstFormat1Marker%3E"],[332,"impl-TableRef%3C\'a,+CursivePosFormat1Marker%3E"],[333,"impl-TableRef%3C\'a,+LigCaretListMarker%3E"],[334,"impl-TableRef%3C\'a,+PairPosFormat1Marker%3E"],[335,"impl-TableRef%3C\'a,+SinglePosFormat1Marker%3E"],[336,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat2Marker%3E"],[337,"impl-TableRef%3C\'a,+AttachListMarker%3E"],[338,"impl-TableRef%3C\'a,+PairPosFormat2Marker%3E"],[339,"impl-TableRef%3C\'a,+SequenceContextFormat1Marker%3E"],[340,"impl-TableRef%3C\'a,+SingleSubstFormat2Marker%3E"],[341,"impl-TableRef%3C\'a,+SequenceContextFormat2Marker%3E"],[342,"impl-TableRef%3C\'a,+LigatureSubstFormat1Marker%3E"],[343,"impl-TableRef%3C\'a,+MarkGlyphSetsMarker%3E"],[344,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[345,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[346,"impl-TableRef%3C\'a,+MarkGlyphSetsMarker%3E"],[350,"impl-TableRef%3C\'a,+GlyphDataMarker%3E"],[351,"impl-TableRef%3C\'a,+Index2Marker%3E"],[352,"impl-TableRef%3C\'a,+EbdtMarker%3E"],[353,"impl-TableRef%3C\'a,+CbdtMarker%3E"],[354,"impl-TableRef%3C\'a,+Index1Marker%3E"],[363,"impl-TableRef%3C\'a,+DeviceMarker%3E"],[364,"impl-TableRef%3C\'a,+VariationIndexMarker%3E"],[371,"impl-TableRef%3C\'a,+VheaMarker%3E"],[372,"impl-TableRef%3C\'a,+HheaMarker%3E"],[378,"impl-TableRef%3C\'a,+CaretValueFormat3Marker%3E"],[379,"impl-TableRef%3C\'a,+BaseCoordFormat3Marker%3E"],[380,"impl-TableRef%3C\'a,+BaseCoordFormat3Marker%3E"],[381,"impl-TableRef%3C\'a,+CaretValueFormat3Marker%3E"],[388,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[389,"impl-TableRef%3C\'a,+PaintTranslateMarker%3E"],[390,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[391,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[392,"impl-TableRef%3C\'a,+PaintTranslateMarker%3E"],[393,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[394,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[395,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[402,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[403,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[410,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat1Marker%3E"],[411,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat0Marker%3E"],[412,"impl-TableRef%3C\'a,+TableDirectoryMarker%3E"],[413,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[420,"impl-TableRef%3C\'a,+ColorLineMarker%3E"],[421,"impl-TableRef%3C\'a,+VarColorLineMarker%3E"],[422,"impl-TableRef%3C\'a,+ExtensionPosFormat1Marker%3CT%3E%3E"],[423,"impl-TableRef%3C\'a,+ExtensionSubstFormat1Marker%3CT%3E%3E"],[424,"impl-TableRef%3C\'a,+ExtensionSubstFormat1Marker%3CT%3E%3E"],[425,"impl-TableRef%3C\'a,+ExtensionPosFormat1Marker%3CT%3E%3E"],[426,"impl-TableRef%3C\'a,+ExtensionPosFormat1Marker%3CT%3E%3E"],[427,"impl-TableRef%3C\'a,+ExtensionSubstFormat1Marker%3CT%3E%3E"],[436,"impl-TableRef%3C\'a,+GsubMarker%3E"],[437,"impl-TableRef%3C\'a,+GposMarker%3E"],[438,"impl-TableRef%3C\'a,+GsubMarker%3E"],[439,"impl-TableRef%3C\'a,+GposMarker%3E"],[445,"impl-TableRef%3C\'a,+GsubMarker%3E"],[446,"impl-TableRef%3C\'a,+GposMarker%3E"],[447,"impl-TableRef%3C\'a,+GsubMarker%3E"],[448,"impl-TableRef%3C\'a,+GposMarker%3E"],[455,"impl-TableRef%3C\'a,+HeadMarker%3E"],[456,"impl-TableRef%3C\'a,+AxisValueFormat1Marker%3E"],[457,"impl-TableRef%3C\'a,+GvarMarker%3E"],[458,"impl-TableRef%3C\'a,+AxisValueFormat4Marker%3E"],[459,"impl-TableRef%3C\'a,+AxisValueFormat2Marker%3E"],[460,"impl-TableRef%3C\'a,+AxisValueFormat3Marker%3E"],[461,"impl-TableRef%3C\'a,+SbixMarker%3E"],[463,"impl-Debug-for-ReadError"],[464,"impl-Display-for-ReadError"],[469,"impl-TableRef%3C\'a,+PaintColrLayersMarker%3E"],[470,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[471,"impl-TableRef%3C\'a,+Cmap0Marker%3E"],[472,"impl-TableRef%3C\'a,+PaintSolidMarker%3E"],[473,"impl-TableRef%3C\'a,+PaintVarScaleUniformMarker%3E"],[474,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[475,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[476,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat1Marker%3E"],[477,"impl-TableRef%3C\'a,+Cmap8Marker%3E"],[478,"impl-TableRef%3C\'a,+PaintVarSolidMarker%3E"],[479,"impl-TableRef%3C\'a,+ConditionFormat1Marker%3E"],[480,"impl-TableRef%3C\'a,+Cmap10Marker%3E"],[481,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat2Marker%3E"],[482,"impl-TableRef%3C\'a,+CharacterVariantParamsMarker%3E"],[483,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[484,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[485,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[486,"impl-TableRef%3C\'a,+SequenceContextFormat2Marker%3E"],[487,"impl-TableRef%3C\'a,+Cmap2Marker%3E"],[488,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[489,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[490,"impl-TableRef%3C\'a,+Cmap6Marker%3E"],[491,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[492,"impl-TableRef%3C\'a,+PaintScaleUniformMarker%3E"],[493,"impl-TableRef%3C\'a,+PaintCompositeMarker%3E"],[494,"impl-TableRef%3C\'a,+Cmap14Marker%3E"],[495,"impl-TableRef%3C\'a,+ClipListMarker%3E"],[496,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[497,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[498,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[499,"impl-TableRef%3C\'a,+ClipBoxFormat1Marker%3E"],[500,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[501,"impl-TableRef%3C\'a,+ItemVariationStoreMarker%3E"],[502,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[503,"impl-TableRef%3C\'a,+PaintGlyphMarker%3E"],[504,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat1Marker%3E"],[505,"impl-TableRef%3C\'a,+PaintColrGlyphMarker%3E"],[506,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat0Marker%3E"],[507,"impl-TableRef%3C\'a,+PaintTransformMarker%3E"],[508,"impl-TableRef%3C\'a,+PaintVarTransformMarker%3E"],[509,"impl-TableRef%3C\'a,+AxisValueFormat4Marker%3E"],[510,"impl-TableRef%3C\'a,+AxisValueFormat3Marker%3E"],[511,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[512,"impl-TableRef%3C\'a,+PaintVarRotateMarker%3E"],[513,"impl-TableRef%3C\'a,+FdSelectFormat0Marker%3E"],[514,"impl-TableRef%3C\'a,+AxisValueFormat2Marker%3E"],[515,"impl-TableRef%3C\'a,+PaintScaleMarker%3E"],[516,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[517,"impl-TableRef%3C\'a,+Cmap13Marker%3E"],[518,"impl-TableRef%3C\'a,+FdSelectFormat3Marker%3E"],[519,"impl-TableRef%3C\'a,+AxisValueFormat1Marker%3E"],[520,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[521,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[522,"impl-TableRef%3C\'a,+FdSelectFormat4Marker%3E"],[523,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[524,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[525,"impl-TableRef%3C\'a,+PaintSkewMarker%3E"],[526,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[527,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[528,"impl-TableRef%3C\'a,+SequenceContextFormat1Marker%3E"],[529,"impl-TableRef%3C\'a,+PaintRotateMarker%3E"],[530,"impl-TableRef%3C\'a,+PaintTranslateMarker%3E"],[531,"impl-TableRef%3C\'a,+MarkGlyphSetsMarker%3E"],[551,"impl-TableRef%3C\'a,+ClassDefFormat2Marker%3E"],[552,"impl-TableRef%3C\'_,+CoverageFormat1Marker%3E"],[553,"impl-TableRef%3C\'a,+Index2Marker%3E"],[554,"impl-TableRef%3C\'a,+Index1Marker%3E"],[555,"impl-TableRef%3C\'a,+ClassDefFormat1Marker%3E"],[556,"impl-TableRef%3C\'_,+CoverageFormat2Marker%3E"],[558,"impl-TableRef%3C\'a,+Index2Marker%3E"],[559,"impl-TableRef%3C\'a,+Index1Marker%3E"],[563,"impl-TableRef%3C\'a,+CoverageFormat1Marker%3E"],[564,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[565,"impl-TableRef%3C\'a,+IndexSubtable4Marker%3E"],[568,"impl-TableRef%3C\'a,+SequenceMarker%3E"],[569,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[570,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[571,"impl-TableRef%3C\'a,+ClassSequenceRuleMarker%3E"],[572,"impl-TableRef%3C\'a,+ClassDefFormat1Marker%3E"],[573,"impl-TableRef%3C\'a,+CoverageFormat1Marker%3E"],[574,"impl-TableRef%3C\'a,+AttachListMarker%3E"],[575,"impl-TableRef%3C\'a,+AlternateSetMarker%3E"],[576,"impl-TableRef%3C\'a,+GvarMarker%3E"],[577,"impl-TableRef%3C\'a,+SingleSubstFormat2Marker%3E"],[578,"impl-TableRef%3C\'a,+SequenceRuleMarker%3E"],[579,"impl-TableRef%3C\'a,+StrikeMarker%3E"],[580,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[583,"impl-TableRef%3C\'a,+PaintColrGlyphMarker%3E"],[584,"impl-TableRef%3C\'a,+PaintGlyphMarker%3E"],[585,"impl-TableRef%3C\'a,+Cmap0Marker%3E"],[586,"impl-TableRef%3C\'a,+Cmap10Marker%3E"],[587,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[588,"impl-TableRef%3C\'a,+Cmap6Marker%3E"],[597,"impl-TableRef%3C\'a,+Cmap13Marker%3E"],[598,"impl-TableRef%3C\'a,+Cmap8Marker%3E"],[599,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[622,"impl-TableRef%3C\'a,+IndexSubtable4Marker%3E"],[623,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[624,"impl-TableRef%3C\'a,+IndexSubtable3Marker%3E"],[625,"impl-TableRef%3C\'a,+IndexSubtable2Marker%3E"],[626,"impl-TableRef%3C\'a,+IndexSubtable1Marker%3E"],[627,"impl-TableRef%3C\'a,+IndexSubtable3Marker%3E"],[628,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[629,"impl-TableRef%3C\'a,+IndexSubtable4Marker%3E"],[630,"impl-TableRef%3C\'a,+IndexSubtable1Marker%3E"],[631,"impl-TableRef%3C\'a,+IndexSubtable2Marker%3E"],[632,"impl-TableRef%3C\'a,+IndexSubtable2Marker%3E"],[633,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[634,"impl-TableRef%3C\'a,+IndexSubtable4Marker%3E"],[635,"impl-TableRef%3C\'a,+IndexSubtable3Marker%3E"],[636,"impl-TableRef%3C\'a,+IndexSubtable1Marker%3E"],[637,"impl-TableRef%3C\'a,+IndexSubtable2Marker%3E"],[638,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[644,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[645,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[646,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[647,"impl-TableRef%3C\'a,+SequenceRuleMarker%3E"],[648,"impl-TableRef%3C\'a,+ClassSequenceRuleMarker%3E"],[649,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[650,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[653,"impl-TableRef%3C\'a,+AxisInstanceArraysMarker%3E"],[654,"impl-TableRef%3C\'a,+FvarMarker%3E"],[656,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[657,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[677,"impl-TableRef%3C\'a,+GdefMarker%3E"],[678,"impl-TableRef%3C\'a,+BaseMarker%3E"],[679,"impl-TableRef%3C\'a,+GdefMarker%3E"],[680,"impl-TableRef%3C\'a,+BaseMarker%3E"],[684,"impl-TableRef%3C\'a,+HvarMarker%3E"],[685,"impl-TableRef%3C\'a,+ColrMarker%3E"],[686,"impl-TableRef%3C\'a,+VvarMarker%3E"],[687,"impl-TableRef%3C\'a,+MvarMarker%3E"],[688,"impl-TableRef%3C\'a,+HvarMarker%3E"],[689,"impl-TableRef%3C\'a,+VvarMarker%3E"],[690,"impl-TableRef%3C\'a,+ColrMarker%3E"],[691,"impl-TableRef%3C\'a,+MvarMarker%3E"],[694,"impl-TableRef%3C\'a,+Cmap14Marker%3E"],[695,"impl-TableRef%3C\'a,+ClassDefFormat1Marker%3E"],[696,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[697,"impl-TableRef%3C\'a,+ClassDefFormat2Marker%3E"],[698,"impl-TableRef%3C\'a,+DeviceMarker%3E"],[699,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[705,"impl-TableRef%3C\'a,+Cmap10Marker%3E"],[706,"impl-TableRef%3C\'a,+Cmap0Marker%3E"],[707,"impl-TableRef%3C\'a,+Cmap13Marker%3E"],[708,"impl-TableRef%3C\'a,+Cmap6Marker%3E"],[709,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[710,"impl-TableRef%3C\'a,+Cmap8Marker%3E"],[711,"impl-TableRef%3C\'a,+Cmap2Marker%3E"],[712,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[723,"impl-TableRef%3C\'a,+Cmap2Marker%3E"],[724,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[725,"impl-TableRef%3C\'a,+Cmap10Marker%3E"],[726,"impl-TableRef%3C\'a,+Cmap6Marker%3E"],[727,"impl-TableRef%3C\'a,+Cmap14Marker%3E"],[728,"impl-TableRef%3C\'a,+Cmap0Marker%3E"],[729,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[730,"impl-TableRef%3C\'a,+Cmap8Marker%3E"],[731,"impl-TableRef%3C\'a,+Cmap13Marker%3E"],[743,"impl-TableRef%3C\'a,+LigatureArrayMarker%3E"],[744,"impl-TableRef%3C\'a,+LigatureSetMarker%3E"],[753,"impl-TableRef%3C\'a,+HheaMarker%3E"],[754,"impl-TableRef%3C\'a,+VheaMarker%3E"],[760,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[761,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[762,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[763,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[764,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[765,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[766,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[767,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[768,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[769,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[773,"impl-TableRef%3C\'a,+GsubMarker%3E"],[774,"impl-TableRef%3C\'a,+GposMarker%3E"],[776,"impl-TableRef%3C\'a,+GsubMarker%3E"],[777,"impl-TableRef%3C\'a,+GposMarker%3E"],[788,"impl-TableRef%3C\'a,+EblcMarker%3E"],[789,"impl-TableRef%3C\'a,+CbdtMarker%3E"],[790,"impl-TableRef%3C\'a,+CblcMarker%3E"],[791,"impl-TableRef%3C\'a,+Cff2HeaderMarker%3E"],[792,"impl-TableRef%3C\'a,+EbdtMarker%3E"],[793,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[794,"impl-TableRef%3C\'a,+CmapMarker%3E"],[795,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[796,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat1Marker%3E"],[797,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat0Marker%3E"],[798,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat1Marker%3E"],[799,"impl-TableRef%3C\'a,+DeltaSetIndexMapFormat0Marker%3E"],[811,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[812,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[813,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[814,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[817,"impl-TableRef%3C\'a,+MarkMarkPosFormat1Marker%3E"],[818,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[819,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[821,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[822,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[823,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[824,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[849,"impl-TableRef%3C\'a,+VheaMarker%3E"],[850,"impl-TableRef%3C\'a,+HheaMarker%3E"],[861,"impl-TableRef%3C\'a,+EbdtMarker%3E"],[862,"impl-TableRef%3C\'a,+EblcMarker%3E"],[863,"impl-TableRef%3C\'a,+CblcMarker%3E"],[864,"impl-TableRef%3C\'a,+CbdtMarker%3E"],[865,"impl-TableRef%3C\'a,+Cff2HeaderMarker%3E"],[869,"impl-TableRef%3C\'a,+FdSelectFormat3Marker%3E"],[870,"impl-TableRef%3C\'a,+FdSelectFormat4Marker%3E"],[889,"impl-TableRef%3C\'a,+MaxpMarker%3E"],[890,"impl-TableRef%3C\'a,+IndexSubtable5Marker%3E"],[891,"impl-TableRef%3C\'a,+PostMarker%3E"],[892,"impl-TableRef%3C\'a,+IndexSubtable4Marker%3E"],[893,"impl-TableRef%3C\'a,+Cmap13Marker%3E"],[894,"impl-TableRef%3C\'a,+Cmap8Marker%3E"],[895,"impl-TableRef%3C\'a,+Cmap12Marker%3E"],[897,"impl-TableRef%3C\'a,+LayerListMarker%3E"],[898,"impl-TableRef%3C\'a,+PaintColrLayersMarker%3E"],[904,"impl-TableRef%3C\'a,+EblcMarker%3E"],[905,"impl-TableRef%3C\'a,+CblcMarker%3E"],[906,"impl-TableRef%3C\'a,+ColorLineMarker%3E"],[907,"impl-TableRef%3C\'a,+VarColorLineMarker%3E"],[909,"impl-TableRef%3C\'a,+CmapMarker%3E"],[910,"impl-TableRef%3C\'a,+TableDirectoryMarker%3E"],[915,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[916,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[919,"impl-TableRef%3C\'a,+Index2Marker%3E"],[920,"impl-TableRef%3C\'a,+CffHeaderMarker%3E"],[921,"impl-TableRef%3C\'a,+Index1Marker%3E"],[927,"impl-TableRef%3C\'a,+Index1Marker%3E"],[928,"impl-TableRef%3C\'a,+Index2Marker%3E"],[933,"impl-TableRef%3C\'a,+PaintRotateMarker%3E"],[934,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[935,"impl-TableRef%3C\'a,+PaintSkewMarker%3E"],[936,"impl-TableRef%3C\'a,+PaintVarRotateMarker%3E"],[937,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[938,"impl-TableRef%3C\'a,+PaintTranslateMarker%3E"],[939,"impl-TableRef%3C\'a,+PaintVarTransformMarker%3E"],[940,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[941,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[942,"impl-TableRef%3C\'a,+PaintScaleMarker%3E"],[943,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[944,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[945,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[946,"impl-TableRef%3C\'a,+PaintTransformMarker%3E"],[947,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[948,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[949,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[950,"impl-TableRef%3C\'a,+PaintGlyphMarker%3E"],[951,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[952,"impl-TableRef%3C\'a,+PaintVarScaleUniformMarker%3E"],[953,"impl-TableRef%3C\'a,+PaintScaleUniformMarker%3E"],[954,"impl-TableRef%3C\'a,+PaintTransformMarker%3E"],[955,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[956,"impl-TableRef%3C\'a,+PaintVarRotateMarker%3E"],[957,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[958,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[959,"impl-TableRef%3C\'a,+PaintRotateAroundCenterMarker%3E"],[960,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[961,"impl-TableRef%3C\'a,+PaintSkewMarker%3E"],[962,"impl-TableRef%3C\'a,+PaintVarScaleUniformMarker%3E"],[963,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[964,"impl-TableRef%3C\'a,+PaintRotateMarker%3E"],[965,"impl-TableRef%3C\'a,+PaintGlyphMarker%3E"],[966,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[967,"impl-TableRef%3C\'a,+PaintTranslateMarker%3E"],[968,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[969,"impl-TableRef%3C\'a,+PaintScaleUniformMarker%3E"],[970,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[971,"impl-TableRef%3C\'a,+PaintVarTransformMarker%3E"],[972,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[973,"impl-TableRef%3C\'a,+PaintScaleMarker%3E"],[974,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[984,"impl-TableRef%3C\'a,+PaintSolidMarker%3E"],[985,"impl-TableRef%3C\'a,+PaintVarSolidMarker%3E"],[996,"impl-TableRef%3C\'a,+ExtensionPosFormat1Marker%3CT%3E%3E"],[997,"impl-TableRef%3C\'a,+PairPosFormat2Marker%3E"],[998,"impl-TableRef%3C\'a,+CursivePosFormat1Marker%3E"],[999,"impl-TableRef%3C\'a,+MarkBasePosFormat1Marker%3E"],[1000,"impl-TableRef%3C\'a,+SinglePosFormat1Marker%3E"],[1001,"impl-TableRef%3C\'a,+MarkMarkPosFormat1Marker%3E"],[1002,"impl-TableRef%3C\'a,+MarkLigPosFormat1Marker%3E"],[1003,"impl-TableRef%3C\'a,+SinglePosFormat2Marker%3E"],[1004,"impl-TableRef%3C\'a,+PairPosFormat1Marker%3E"],[1009,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1010,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1011,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1012,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1018,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[1019,"impl-TableRef%3C\'a,+TableDirectoryMarker%3E"],[1022,"impl-TableRef%3C\'a,+FdSelectFormat3Marker%3E"],[1023,"impl-TableRef%3C\'a,+FdSelectFormat4Marker%3E"],[1024,"impl-TableRef%3C\'a,+DefaultUvsMarker%3E"],[1027,"impl-TableRef%3C\'a,+PairSetMarker%3E"],[1028,"impl-TableRef%3C\'a,+LigatureArrayMarker%3E"],[1029,"impl-TableRef%3C\'a,+SharedTuplesMarker%3E"],[1030,"impl-TableRef%3C\'a,+Mark2ArrayMarker%3E"],[1031,"impl-TableRef%3C\'a,+TupleVariationHeaderMarker%3E"],[1032,"impl-TableRef%3C\'a,+VmtxMarker%3E"],[1033,"impl-TableRef%3C\'a,+FeatureMarker%3E"],[1034,"impl-TableRef%3C\'a,+AxisValueArrayMarker%3E"],[1035,"impl-TableRef%3C\'a,+BaseArrayMarker%3E"],[1036,"impl-TableRef%3C\'a,+AxisInstanceArraysMarker%3E"],[1037,"impl-TableRef%3C\'a,+StrikeMarker%3E"],[1038,"impl-TableRef%3C\'a,+HmtxMarker%3E"],[1039,"impl-TableRef%3C\'a,+SbixMarker%3E"],[1040,"impl-TableRef%3C\'a,+LigatureAttachMarker%3E"],[1071,"impl-TableRef%3C\'a,+IndexSubtable1Marker%3E"],[1072,"impl-TableRef%3C\'a,+IndexSubtable3Marker%3E"],[1075,"impl-TableRef%3C\'a,+PaintScaleUniformMarker%3E"],[1076,"impl-TableRef%3C\'a,+PaintVarScaleUniformMarker%3E"],[1077,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[1078,"impl-TableRef%3C\'a,+PaintScaleUniformAroundCenterMarker%3E"],[1079,"impl-TableRef%3C\'a,+PaintScaleMarker%3E"],[1080,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[1081,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[1082,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[1083,"impl-TableRef%3C\'a,+PaintScaleMarker%3E"],[1084,"impl-TableRef%3C\'a,+PaintScaleAroundCenterMarker%3E"],[1085,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[1086,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[1088,"impl-TableRef%3C\'a,+GsubMarker%3E"],[1089,"impl-TableRef%3C\'a,+GposMarker%3E"],[1090,"impl-TableRef%3C\'a,+GposMarker%3E"],[1091,"impl-TableRef%3C\'a,+GsubMarker%3E"],[1093,"impl-TableRef%3C\'a,+Cmap4Marker%3E"],[1094,"impl-TableRef%3C\'a,+TableDirectoryMarker%3E"],[1097,"impl-TableRef%3C\'a,+FdSelectFormat3Marker%3E"],[1098,"impl-TableRef%3C\'a,+FdSelectFormat4Marker%3E"],[1099,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[1100,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[1101,"impl-TableRef%3C\'a,+SequenceRuleMarker%3E"],[1102,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[1103,"impl-TableRef%3C\'a,+ClassSequenceRuleMarker%3E"],[1104,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[1105,"impl-TableRef%3C\'a,+ChainedSequenceContextFormat3Marker%3E"],[1106,"impl-TableRef%3C\'a,+ChainedSequenceRuleMarker%3E"],[1107,"impl-TableRef%3C\'a,+SequenceContextFormat3Marker%3E"],[1108,"impl-TableRef%3C\'a,+ClassSequenceRuleMarker%3E"],[1109,"impl-TableRef%3C\'a,+SequenceRuleMarker%3E"],[1110,"impl-TableRef%3C\'a,+ChainedClassSequenceRuleMarker%3E"],[1127,"impl-TableRef%3C\'a,+Index1Marker%3E"],[1128,"impl-TableRef%3C\'a,+Index2Marker%3E"],[1133,"impl-TableRef%3C\'a,+PaintSweepGradientMarker%3E"],[1134,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[1144,"impl-TableRef%3C\'a,+PostMarker%3E"],[1145,"impl-TableRef%3C\'a,+NameMarker%3E"],[1148,"impl-TableRef%3C\'a,+SingleSubstFormat2Marker%3E"],[1149,"impl-TableRef%3C\'a,+AlternateSubstFormat1Marker%3E"],[1150,"impl-TableRef%3C\'a,+LigatureSubstFormat1Marker%3E"],[1151,"impl-TableRef%3C\'a,+SingleSubstFormat1Marker%3E"],[1152,"impl-TableRef%3C\'a,+MultipleSubstFormat1Marker%3E"],[1153,"impl-TableRef%3C\'a,+ExtensionSubstFormat1Marker%3CT%3E%3E"],[1154,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[1155,"impl-TableRef%3C\'a,+SequenceMarker%3E"],[1156,"impl-TableRef%3C\'a,+ReverseChainSingleSubstFormat1Marker%3E"],[1157,"impl-TableRef%3C\'a,+SingleSubstFormat2Marker%3E"],[1187,"impl-TableRef%3C\'a,+Cff2HeaderMarker%3E"],[1188,"impl-TableRef%3C\'a,+CffHeaderMarker%3E"],[1189,"impl-TableRef%3C\'a,+PaintVarTransformMarker%3E"],[1190,"impl-TableRef%3C\'a,+PaintTransformMarker%3E"],[1191,"impl-TableRef%3C\'a,+PaintTransformMarker%3E"],[1192,"impl-TableRef%3C\'a,+PaintVarTransformMarker%3E"],[1261,"impl-TableRef%3C\'a,+AxisValueFormat1Marker%3E"],[1262,"impl-TableRef%3C\'a,+AxisValueFormat3Marker%3E"],[1264,"impl-TableRef%3C\'a,+SinglePosFormat2Marker%3E"],[1265,"impl-TableRef%3C\'a,+SinglePosFormat1Marker%3E"],[1266,"impl-TableRef%3C\'a,+PairPosFormat1Marker%3E"],[1267,"impl-TableRef%3C\'a,+PairPosFormat2Marker%3E"],[1268,"impl-TableRef%3C\'a,+PairPosFormat1Marker%3E"],[1269,"impl-TableRef%3C\'a,+PairPosFormat2Marker%3E"],[1270,"impl-TableRef%3C\'a,+AxisValueFormat4Marker%3E"],[1271,"impl-TableRef%3C\'a,+AxisValueFormat3Marker%3E"],[1272,"impl-TableRef%3C\'a,+AxisValueFormat2Marker%3E"],[1273,"impl-TableRef%3C\'a,+AxisValueFormat1Marker%3E"],[1277,"impl-TableRef%3C\'a,+MvarMarker%3E"],[1278,"impl-TableRef%3C\'a,+SinglePosFormat2Marker%3E"],[1279,"impl-TableRef%3C\'a,+PaintVarScaleAroundCenterMarker%3E"],[1280,"impl-TableRef%3C\'a,+PaintVarSweepGradientMarker%3E"],[1281,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1282,"impl-TableRef%3C\'a,+PaintVarSolidMarker%3E"],[1283,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[1284,"impl-TableRef%3C\'a,+PaintVarTranslateMarker%3E"],[1285,"impl-TableRef%3C\'a,+PaintVarScaleMarker%3E"],[1286,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[1287,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[1288,"impl-TableRef%3C\'a,+PaintVarScaleUniformMarker%3E"],[1289,"impl-TableRef%3C\'a,+PaintVarScaleUniformAroundCenterMarker%3E"],[1290,"impl-TableRef%3C\'a,+PaintVarRotateMarker%3E"],[1291,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1292,"impl-TableRef%3C\'a,+PaintVarRotateAroundCenterMarker%3E"],[1293,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[1301,"impl-TableRef%3C\'a,+HvarMarker%3E"],[1302,"impl-TableRef%3C\'a,+VheaMarker%3E"],[1303,"impl-TableRef%3C\'a,+NameMarker%3E"],[1304,"impl-TableRef%3C\'a,+VvarMarker%3E"],[1305,"impl-TableRef%3C\'a,+MaxpMarker%3E"],[1306,"impl-TableRef%3C\'a,+GdefMarker%3E"],[1307,"impl-TableRef%3C\'a,+PostMarker%3E"],[1308,"impl-TableRef%3C\'a,+GposMarker%3E"],[1309,"impl-TableRef%3C\'a,+CmapMarker%3E"],[1310,"impl-TableRef%3C\'a,+Os2Marker%3E"],[1311,"impl-TableRef%3C\'a,+HeadMarker%3E"],[1312,"impl-TableRef%3C\'a,+SbixMarker%3E"],[1313,"impl-TableRef%3C\'a,+CpalMarker%3E"],[1314,"impl-TableRef%3C\'a,+StatMarker%3E"],[1315,"impl-TableRef%3C\'a,+GsubMarker%3E"],[1316,"impl-TableRef%3C\'a,+ColrMarker%3E"],[1317,"impl-TableRef%3C\'a,+StylisticSetParamsMarker%3E"],[1318,"impl-TableRef%3C\'a,+GvarMarker%3E"],[1319,"impl-TableRef%3C\'a,+FeatureTableSubstitutionMarker%3E"],[1320,"impl-TableRef%3C\'a,+FeatureVariationsMarker%3E"],[1321,"impl-TableRef%3C\'a,+AvarMarker%3E"],[1322,"impl-TableRef%3C\'a,+TTCHeaderMarker%3E"],[1323,"impl-TableRef%3C\'a,+BaseMarker%3E"],[1324,"impl-TableRef%3C\'a,+FvarMarker%3E"],[1325,"impl-TableRef%3C\'a,+HheaMarker%3E"],[1326,"impl-TableRef%3C\'a,+MvarMarker%3E"],[1337,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1338,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1339,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1340,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1341,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1342,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1343,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1344,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1345,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1346,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1348,"impl-TableRef%3C\'a,+AnchorFormat1Marker%3E"],[1349,"impl-TableRef%3C\'a,+AnchorFormat2Marker%3E"],[1350,"impl-TableRef%3C\'a,+AnchorFormat3Marker%3E"],[1353,"impl-TableRef%3C\'a,+HeadMarker%3E"],[1354,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[1355,"impl-TableRef%3C\'a,+ClipBoxFormat1Marker%3E"],[1356,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[1357,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[1359,"impl-TableRef%3C\'a,+ClipBoxFormat1Marker%3E"],[1360,"impl-TableRef%3C\'a,+HeadMarker%3E"],[1361,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[1362,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[1363,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[1364,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[1365,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[1366,"impl-TableRef%3C\'a,+PaintSkewMarker%3E"],[1367,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[1368,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[1369,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[1370,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[1371,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[1372,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1373,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1374,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1375,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1376,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1377,"impl-TableRef%3C\'a,+PaintVarRadialGradientMarker%3E"],[1378,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1379,"impl-TableRef%3C\'a,+PaintRadialGradientMarker%3E"],[1380,"impl-TableRef%3C\'a,+PaintLinearGradientMarker%3E"],[1381,"impl-TableRef%3C\'a,+PaintVarLinearGradientMarker%3E"],[1382,"impl-TableRef%3C\'a,+AnchorFormat1Marker%3E"],[1383,"impl-TableRef%3C\'a,+AnchorFormat2Marker%3E"],[1384,"impl-TableRef%3C\'a,+AnchorFormat3Marker%3E"],[1387,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[1388,"impl-TableRef%3C\'a,+HeadMarker%3E"],[1389,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[1390,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[1391,"impl-TableRef%3C\'a,+ClipBoxFormat1Marker%3E"],[1393,"impl-TableRef%3C\'a,+ClipBoxFormat1Marker%3E"],[1394,"impl-TableRef%3C\'a,+HeadMarker%3E"],[1395,"impl-TableRef%3C\'a,+CompositeGlyphMarker%3E"],[1396,"impl-TableRef%3C\'a,+SimpleGlyphMarker%3E"],[1397,"impl-TableRef%3C\'a,+ClipBoxFormat2Marker%3E"],[1398,"impl-TableRef%3C\'a,+PaintSkewAroundCenterMarker%3E"],[1399,"impl-TableRef%3C\'a,+PaintVarSkewMarker%3E"],[1400,"impl-TableRef%3C\'a,+PaintSkewMarker%3E"],[1401,"impl-TableRef%3C\'a,+PaintVarSkewAroundCenterMarker%3E"],[1412,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[1413,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[1414,"impl-TableRef%3C\'a,+VarAffine2x3Marker%3E"],[1415,"impl-TableRef%3C\'a,+Affine2x3Marker%3E"],[1808,"impl-Binary-for-BitmapFlags"],[1809,"impl-LowerHex-for-BitmapFlags"],[1810,"impl-Debug-for-BitmapFlags"],[1811,"impl-Octal-for-BitmapFlags"],[1812,"impl-UpperHex-for-BitmapFlags"],[3094,"impl-UpperHex-for-PaletteType"],[3095,"impl-Binary-for-PaletteType"],[3096,"impl-Debug-for-PaletteType"],[3097,"impl-Octal-for-PaletteType"],[3098,"impl-LowerHex-for-PaletteType"],[3462,"impl-LowerHex-for-SimpleGlyphFlags"],[3463,"impl-UpperHex-for-SimpleGlyphFlags"],[3464,"impl-Debug-for-SimpleGlyphFlags"],[3465,"impl-Octal-for-SimpleGlyphFlags"],[3466,"impl-Binary-for-SimpleGlyphFlags"],[3467,"impl-Binary-for-CompositeGlyphFlags"],[3468,"impl-UpperHex-for-CompositeGlyphFlags"],[3469,"impl-LowerHex-for-CompositeGlyphFlags"],[3470,"impl-Octal-for-CompositeGlyphFlags"],[3471,"impl-Debug-for-CompositeGlyphFlags"],[3478,"impl-Debug-for-ToPathError"],[3479,"impl-Display-for-ToPathError"],[3841,"impl-Binary-for-ValueFormat"],[3842,"impl-UpperHex-for-ValueFormat"],[3843,"impl-LowerHex-for-ValueFormat"],[3844,"impl-Debug-for-ValueFormat"],[3845,"impl-Octal-for-ValueFormat"],[4331,"impl-Debug-for-GvarFlags"],[4332,"impl-UpperHex-for-GvarFlags"],[4333,"impl-Binary-for-GvarFlags"],[4334,"impl-Octal-for-GvarFlags"],[4335,"impl-LowerHex-for-GvarFlags"],[4456,"impl-Debug-for-MacStyle"],[4457,"impl-Binary-for-MacStyle"],[4458,"impl-LowerHex-for-MacStyle"],[4459,"impl-Octal-for-MacStyle"],[4460,"impl-UpperHex-for-MacStyle"],[5267,"impl-Debug-for-NameId"],[5268,"impl-Display-for-NameId"],[5271,"impl-Debug-for-NameString%3C\'a%3E"],[5272,"impl-Display-for-NameString%3C\'a%3E"],[5383,"impl-LowerHex-for-SelectionFlags"],[5384,"impl-UpperHex-for-SelectionFlags"],[5385,"impl-Binary-for-SelectionFlags"],[5386,"impl-Octal-for-SelectionFlags"],[5387,"impl-Debug-for-SelectionFlags"],[5458,"impl-PartialEq-for-PString%3C\'a%3E"],[5459,"impl-PartialEq%3C%26str%3E-for-PString%3C\'_%3E"],[5576,"impl-PartialEq-for-Latin1String%3C\'a%3E"],[5577,"impl-PartialEq%3C%26str%3E-for-Latin1String%3C\'_%3E"],[5591,"impl-Debug-for-Number"],[5592,"impl-Display-for-Number"],[5594,"impl-Display-for-Latin1String%3C\'_%3E"],[5595,"impl-Debug-for-Latin1String%3C\'a%3E"],[5598,"impl-Display-for-Error"],[5599,"impl-Debug-for-Error"],[5608,"impl-From%3CFixed%3E-for-Number"],[5609,"impl-From%3Ci32%3E-for-Number"],[5898,"impl-From%3COperator%3E-for-Token"],[5899,"impl-From%3CT%3E-for-Token"],[5963,"impl-LowerHex-for-HeaderFlags"],[5964,"impl-UpperHex-for-HeaderFlags"],[5965,"impl-Binary-for-HeaderFlags"],[5966,"impl-Octal-for-HeaderFlags"],[5967,"impl-Debug-for-HeaderFlags"],[6083,"impl-Octal-for-AxisValueTableFlags"],[6084,"impl-UpperHex-for-AxisValueTableFlags"],[6085,"impl-Debug-for-AxisValueTableFlags"],[6086,"impl-Binary-for-AxisValueTableFlags"],[6087,"impl-LowerHex-for-AxisValueTableFlags"],[6296,"impl-Debug-for-EntryFormat"],[6297,"impl-Octal-for-EntryFormat"],[6298,"impl-UpperHex-for-EntryFormat"],[6299,"impl-Binary-for-EntryFormat"],[6300,"impl-LowerHex-for-EntryFormat"]]},\
"roxmltree":{"doc":"Represent an XML 1.0 document as a read-only tree.","t":"DDNDNDNDDNNNNNEDNNNNNNNNNNNRRDDNNDDENNNDNDNENDNNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLML","n":["Attribute","Attributes","AttributesLimitReached","AxisIter","Borrowed","Children","Comment","Descendants","Document","DtdDetected","DuplicatedAttribute","DuplicatedNamespace","Element","EntityReferenceLoop","Error","ExpandedName","InvalidAttributeValue","InvalidChar","InvalidChar2","InvalidCharacterData","InvalidComment","InvalidElementNamePrefix","InvalidExternalID","InvalidName","InvalidString","InvalidXmlPrefixUri","MalformedEntityReference","NS_XMLNS_URI","NS_XML_URI","Namespace","NamespaceIter","NamespacesLimitReached","NoRootNode","Node","NodeId","NodeType","NodesLimitReached","NonXmlChar","Owned","PI","PI","ParsingOptions","Root","StringStorage","Text","TextPos","UnclosedRootNode","UnexpectedCloseTag","UnexpectedDeclaration","UnexpectedEndOfStream","UnexpectedEntityCloseTag","UnexpectedXmlUri","UnexpectedXmlnsUri","UnknownEntityReference","UnknownNamespace","UnknownToken","allow_dtd","ancestors","as_str","attribute","attribute_node","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","col","default","default_namespace","deref","descendants","descendants","description","document","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","first_child","first_children","first_element_child","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","get","get_node","get_usize","has_attribute","has_children","has_siblings","has_tag_name","hash","hash","hash","hash","id","input_text","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_comment","is_element","is_pi","is_root","is_text","last_child","last_children","last_element_child","lookup_namespace_uri","lookup_prefix","name","name","name","namespace","namespace","namespaces","new","new","new_owned","next","next","next","next","next","next_back","next_back","next_back","next_back","next_sibling","next_sibling_element","next_siblings","node_type","nodes_limit","nth","nth","nth","parent","parent_element","parse","parse_with_options","partial_cmp","pi","pos","position","prev_sibling","prev_sibling_element","prev_siblings","range","root","root_element","row","size_hint","size_hint","size_hint","tag_name","tail","tail_storage","target","text","text_pos_at","text_storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","value","value","value_storage"],"q":[[0,"roxmltree"],[364,"core::option"],[365,"core::convert"],[366,"core::cmp"],[367,"core::fmt"],[368,"core::fmt"],[369,"core::fmt"],[370,"alloc::sync"],[371,"core::ops::range"],[372,"alloc::string"],[373,"core::any"]],"d":["An attribute.","Iterator over a node’s attributes","Indicates that too many attributes were parsed.","Iterator over specified axis.","A raw slice of the input string.","Iterator over children.","A comment node.","Iterator over a node and its descendants.","An XML tree container.","An XML with DTD detected.","An element has a duplicated attributes.","A namespace was already defined on this element.","An element node.","A possible entity reference loop.","A list of all possible errors.","An expanded name.","Attribute value cannot have a <code>&lt;</code> character.","An invalid/unexpected character.","An invalid/unexpected character.","A Character Data node contains an invalid data.","A comment cannot contain <code>--</code> or end with <code>-</code>.","<code>xmlns</code> can’t be used as an element prefix.","An invalid ExternalID in the DTD.","An invalid name.","An unexpected string.","The <code>xmlns:xml</code> attribute must have an …","A malformed entity reference.","The http://www.w3.org/2000/xmlns/ URI.","The http://www.w3.org/XML/1998/namespace URI.","A namespace.","Iterator over the namespaces attached to a node.","Indicates that too many namespaces were parsed.","The XML document must have at least one element.","A node in a document.","A node ID stored as <code>u32</code>.","A list of supported node types.","Indicates that the <code>ParsingOptions::nodes_limit</code> was reached.","A non-XML character has occurred.","A reference-counted string.","A processing instruction.","A processing instruction.","Parsing options.","The root node of the <code>Document</code>.","A string storage.","A text node.","Position in text.","The root node was opened but never closed.","Incorrect tree structure.","An XML document can have only one XML declaration and it …","The steam ended earlier than we expected.","Entity value starts with a close tag.","Only the <code>xmlns:xml</code> attribute can have the …","The http://www.w3.org/2000/xmlns/ URI must not be declared.","A reference to an entity that was not defined in the DTD.","An unknown namespace.","An unknown token.","Allow DTD parsing.","Returns an iterator over ancestor nodes starting at this …","Returns a string slice.","Returns element’s attribute value.","Returns element’s attribute object.","Returns element’s attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over children nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns node’s default namespace URI.","","Returns an iterator over document’s descendant nodes.","Returns an iterator over this node and its descendants.","","Returns node’s document.","","","","","","","","","","","","Returns the first child of this node.","Returns an iterator over first children nodes starting at …","Returns the first element child of this node.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new instance from static data.","Returns the <code>u32</code> representation of the <code>NodeId</code>.","Returns the node of the tree with the given NodeId.","Returns the <code>usize</code> representation of the <code>NodeId</code>.","Checks that element has a specified attribute.","Returns true if this node has children.","Returns true if this node has siblings.","Checks that node has a specified tag name.","","","","","Returns node’s NodeId","Returns the input text of the original document.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Checks that node is a comment node.","Checks that node is an element node.","Checks that node is a processing instruction node.","Checks that node is a root node.","Checks that node is a text node.","Returns the last child of this node.","Returns an iterator over last children nodes starting at …","Returns the last element child of this node.","Returns an URI for a given prefix.","Returns a prefix for a given namespace URI.","Returns attribute’s name.","Returns namespace name/prefix.","Returns a local name.","Returns attribute’s namespace URI.","Returns a namespace URI.","Returns element’s namespaces.","Constructs a new <code>TextPos</code>.","Construct a new <code>NodeId</code> from a <code>u32</code>.","Creates a new owned string from <code>&amp;str</code> or <code>String</code>.","","","","","","","","","","Returns the next sibling of this node.","Returns the next sibling element of this node.","Returns an iterator over next sibling nodes starting at …","Returns node’s type.","Sets the maximum number of nodes to parse.","","","","Returns the parent of this node.","Returns the parent element of this node.","Parses the input XML string.","Parses the input XML string using to selected options.","","Returns node as Processing Instruction.","Returns the error position.","Returns attribute’s position in bytes in the original …","Returns the previous sibling of this node.","Returns the previous sibling element of this node.","Returns an iterator over previous sibling nodes starting …","Returns node’s range in bytes in the original document.","Returns the root node.","Returns the root element of the document.","","","","","Returns node’s tag name.","Returns element’s tail text.","Returns element’s tail text storage.","","Returns node’s text.","Calculates <code>TextPos</code> in the original document from position …","Returns node’s text storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns namespace URI.","Returns attribute’s value.","","Returns attribute’s value storage."],"i":[0,0,11,0,3,0,14,0,0,11,11,11,14,11,0,0,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,0,0,0,11,11,3,0,14,0,14,0,14,0,11,11,11,11,11,11,11,11,11,11,12,1,3,1,1,1,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,1,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,1,13,12,1,3,22,1,11,1,11,12,13,14,15,16,3,8,17,6,1,1,1,1,22,11,11,12,13,13,14,15,16,3,3,8,17,6,1,9,2,10,18,19,22,11,12,13,14,15,16,16,16,3,8,17,6,6,6,1,9,2,10,18,19,6,16,22,16,1,1,1,1,11,13,16,1,1,22,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,9,2,10,18,19,1,1,1,1,1,1,1,1,1,1,8,17,6,8,6,1,13,16,3,9,2,10,18,19,9,10,18,19,1,1,1,1,12,9,18,19,1,1,22,22,1,1,11,8,1,1,1,1,22,22,13,9,18,19,1,1,1,15,1,22,1,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,11,13,3,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,22,11,12,13,14,15,16,3,8,17,6,1,9,2,10,18,19,17,8,15,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[[1,-1],[[5,[4]]],[[7,[6]]]],[[1,-1],[[5,[8]]],[[7,[6]]]],[1,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[3,3],[8,8],[17,17],[6,6],[1,1],[9,9],[2,2],[10,10],[18,18],[19,19],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[1,1],21],0,[[],12],[1,[[5,[4]]]],[3],[22,18],[1,18],[11,4],[1,22],[[11,11],23],[[12,12],23],[[13,13],23],[[14,14],23],[[15,15],23],[[16,16],23],[[3,3],23],[[8,8],23],[[17,17],23],[[6,6],23],[[1,1],23],[1,[[5,[1]]]],[1,2],[1,[[5,[1]]]],[[22,24],[[26,[20,25]]]],[[11,24],27],[[11,24],27],[[12,24],27],[[13,24],27],[[13,24],27],[[14,24],27],[[15,24],27],[[16,24],27],[[3,24],27],[[3,24],27],[[8,24],[[26,[20,25]]]],[[17,24],27],[[6,24],[[26,[20,25]]]],[[1,24],[[26,[20,25]]]],[[9,24],[[26,[20,25]]]],[[2,24],[[26,[20,25]]]],[[10,24],27],[[18,24],[[26,[20,25]]]],[[19,24],[[26,[20,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,16],[-1,-1,[]],[29,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[20,[4,4]]],6],[-1,-1,[]],[4,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,4],6],[16,28],[[22,16],[[5,[1]]]],[16,29],[[1,-1],23,[[7,[6]]]],[1,23],[1,23],[[1,-1],23,[[7,[6]]]],[[11,-1],20,30],[[13,-1],20,30],[[16,-1],20,30],[[1,-1],20,30],[1,16],[22,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,23],[1,23],[1,23],[1,23],[1,23],[1,[[5,[1]]]],[1,2],[1,[[5,[1]]]],[[1,[5,[4]]],[[5,[4]]]],[[1,4],[[5,[4]]]],[8,4],[17,[[5,[4]]]],[6,4],[8,[[5,[4]]]],[6,[[5,[4]]]],[1,19],[[28,28],13],[28,16],[-1,3,[[7,[[31,[4]]]]]],[9,5],[2,5],[10,5],[18,5],[19,5],[9,5],[10,5],[18,5],[19,5],[1,[[5,[1]]]],[1,[[5,[1]]]],[1,2],[1,14],0,[[9,29],5],[[18,29],5],[[19,29],5],[1,[[5,[1]]]],[1,[[5,[1]]]],[4,[[26,[22,11]]]],[[4,12],[[26,[22,11]]]],[[1,1],[[5,[21]]]],[1,[[5,[15]]]],[11,13],[8,29],[1,[[5,[1]]]],[1,[[5,[1]]]],[1,2],[1,[[32,[29]]]],[22,1],[22,1],0,[9,[[20,[29,[5,[29]]]]]],[18,[[20,[29,[5,[29]]]]]],[19,[[20,[29,[5,[29]]]]]],[1,6],[1,[[5,[4]]]],[1,[[5,[3]]]],0,[1,[[5,[4]]]],[[22,29],13],[1,[[5,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[17,4],[8,4],0,[8,3]],"c":[],"p":[[3,"Node",0],[3,"AxisIter",0],[4,"StringStorage",0],[15,"str"],[4,"Option",364],[3,"ExpandedName",0],[8,"Into",365],[3,"Attribute",0],[3,"Attributes",0],[3,"Children",0],[4,"Error",0],[3,"ParsingOptions",0],[3,"TextPos",0],[4,"NodeType",0],[3,"PI",0],[3,"NodeId",0],[3,"Namespace",0],[3,"Descendants",0],[3,"NamespaceIter",0],[15,"tuple"],[4,"Ordering",366],[3,"Document",0],[15,"bool"],[3,"Formatter",367],[3,"Error",367],[4,"Result",368],[6,"Result",367],[15,"u32"],[15,"usize"],[8,"Hasher",369],[3,"Arc",370],[3,"Range",371],[3,"String",372],[3,"TypeId",373]],"b":[[153,"impl-Display-for-Error"],[154,"impl-Debug-for-Error"],[156,"impl-Debug-for-TextPos"],[157,"impl-Display-for-TextPos"],[161,"impl-Debug-for-StringStorage%3C\'input%3E"],[162,"impl-Display-for-StringStorage%3C\'_%3E"],[178,"impl-From%3Cu32%3E-for-NodeId"],[180,"impl-From%3Cusize%3E-for-NodeId"],[184,"impl-From%3C(%26str,+%26str)%3E-for-ExpandedName%3C\'a,+\'b%3E"],[186,"impl-From%3C%26str%3E-for-ExpandedName%3C\'a,+\'b%3E"]]},\
"rustc_hash":{"doc":"Fast, non-cryptographic hash used by rustc and Firefox.","t":"DLLLLLLLLLLLLLLL","n":["FxHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","write","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":[[0,"rustc_hash"],[16,"core::result"],[17,"core::any"]],"d":["A speedy hash algorithm for use within rustc. The hashmap …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[1,2],[-1,-1,[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[[1,[6,[5]]],7],[[1,8],7],[[1,9],7],[[1,2],7],[[1,5],7],[[1,10],7]],"c":[],"p":[[3,"FxHasher",0],[15,"u64"],[4,"Result",16],[3,"TypeId",17],[15,"u8"],[15,"slice"],[15,"tuple"],[15,"u16"],[15,"u32"],[15,"usize"]],"b":[]},\
"rustybuzz":{"doc":"A complete harfbuzz shaping algorithm port to Rust.","t":"SNEDNSESDDSSDDDNDNNNSSSSSSNDDDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLFFMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["BEGINNING_OF_TEXT","BottomToTop","BufferClusterLevel","BufferFlags","Characters","DO_NOT_INSERT_DOTTED_CIRCLE","Direction","END_OF_TEXT","Face","Feature","GLYPH_EXTENTS","GLYPH_FLAGS","GlyphBuffer","GlyphInfo","GlyphPosition","Invalid","Language","LeftToRight","MonotoneCharacters","MonotoneGraphemes","NO_ADVANCES","NO_CLUSTERS","NO_GLYPH_NAMES","NO_POSITIONS","PRESERVE_DEFAULT_IGNORABLES","REMOVE_DEFAULT_IGNORABLES","RightToLeft","Script","SerializeFlags","ShapePlan","Tag","TopToBottom","UnicodeBuffer","Variation","add","all","all","as_mut","as_ref","as_str","as_u32","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cluster","cluster_level","cmp","cmp","complement","complement","contains","contains","default","default","default","default","default","default","default","deref","deref_mut","difference","difference","direction","empty","empty","end","eq","eq","eq","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bytes","from_bytes_lossy","from_face","from_iso15924_tag","from_iter","from_iter","from_name","from_name","from_slice","from_str","from_str","from_str","from_str","from_str","glyph_id","glyph_infos","glyph_positions","guess_segment_properties","hash","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_null","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","iter_names","iter_names","language","len","len","new","new","new","not","not","parse","partial_cmp","partial_cmp","push_str","remove","remove","reset_clusters","script","script","serialize","set","set","set_cluster_level","set_direction","set_flags","set_language","set_pixels_per_em","set_points_per_em","set_post_context","set_pre_context","set_script","set_variations","shape","shape_with_plan","start","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","tag","tag","tag","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttf_parser","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","units_per_em","unsafe_to_break","value","value","x_advance","x_offset","y_advance","y_offset","ADLAM","AHOM","ANATOLIAN_HIEROGLYPHS","ARABIC","ARMENIAN","AVESTAN","BALINESE","BAMUM","BASSA_VAH","BATAK","BENGALI","BHAIKSUKI","BOPOMOFO","BRAHMI","BRAILLE","BUGINESE","BUHID","CANADIAN_SYLLABICS","CARIAN","CAUCASIAN_ALBANIAN","CHAKMA","CHAM","CHEROKEE","CHORASMIAN","COMMON","COPTIC","CUNEIFORM","CYPRIOT","CYRILLIC","DESERET","DEVANAGARI","DIVES_AKURU","DOGRA","DUPLOYAN","EGYPTIAN_HIEROGLYPHS","ELBASAN","ELYMAIC","ETHIOPIC","GEORGIAN","GLAGOLITIC","GOTHIC","GRANTHA","GREEK","GUJARATI","GUNJALA_GONDI","GURMUKHI","HAN","HANGUL","HANIFI_ROHINGYA","HANUNOO","HATRAN","HEBREW","HIRAGANA","IMPERIAL_ARAMAIC","INHERITED","INSCRIPTIONAL_PAHLAVI","INSCRIPTIONAL_PARTHIAN","JAVANESE","KAITHI","KANNADA","KATAKANA","KAYAH_LI","KHAROSHTHI","KHITAN_SMALL_SCRIPT","KHMER","KHOJKI","KHUDAWADI","LAO","LATIN","LEPCHA","LIMBU","LINEAR_A","LINEAR_B","LISU","LYCIAN","LYDIAN","MAHAJANI","MAKASAR","MALAYALAM","MANDAIC","MANICHAEAN","MARCHEN","MASARAM_GONDI","MEDEFAIDRIN","MEETEI_MAYEK","MENDE_KIKAKUI","MEROITIC_CURSIVE","MEROITIC_HIEROGLYPHS","MIAO","MODI","MONGOLIAN","MRO","MULTANI","MYANMAR","MYANMAR_ZAWGYI","NABATAEAN","NANDINAGARI","NEWA","NEW_TAI_LUE","NKO","NUSHU","NYIAKENG_PUACHUE_HMONG","OGHAM","OLD_HUNGARIAN","OLD_ITALIC","OLD_NORTH_ARABIAN","OLD_PERMIC","OLD_PERSIAN","OLD_SOGDIAN","OLD_SOUTH_ARABIAN","OLD_TURKIC","OL_CHIKI","ORIYA","OSAGE","OSMANYA","PAHAWH_HMONG","PALMYRENE","PAU_CIN_HAU","PHAGS_PA","PHOENICIAN","PSALTER_PAHLAVI","REJANG","RUNIC","SAMARITAN","SAURASHTRA","SHARADA","SHAVIAN","SIDDHAM","SIGNWRITING","SINHALA","SOGDIAN","SORA_SOMPENG","SOYOMBO","SUNDANESE","SYLOTI_NAGRI","SYRIAC","TAGALOG","TAGBANWA","TAI_LE","TAI_THAM","TAI_VIET","TAKRI","TAMIL","TANGUT","TELUGU","THAANA","THAI","TIBETAN","TIFINAGH","TIRHUTA","UGARITIC","UNKNOWN","VAI","WANCHO","WARANG_CITI","YEZIDI","YI","ZANABAZAR_SQUARE"],"q":[[0,"rustybuzz"],[362,"rustybuzz::script"],[520,"ttf_parser"],[521,"core::cmp"],[522,"core::iter::traits::collect"],[523,"core::fmt"],[524,"core::fmt"],[525,"core::option"],[526,"core::hash"],[527,"bitflags::iter"],[528,"bitflags::iter"],[529,"alloc::string"],[530,"core::any"]],"d":["Indicates that special handling of the beginning of text …","Text is set vertically from bottom to top.","A cluster level.","Flags for buffers.","","Indicates that a dotted circle should not be inserted in …","Defines the direction in which text is to be read.","Indicates that special handling of the end of text …","A font face handle.","A feature tag with an accompanying range specifying on …","Serialize glyph extents.","Serialize glyph flags.","A buffer that contains the results of the shaping process.","A glyph info.","Holds the positions of the glyph in both horizontal and …","Initial, unset direction.","A script language.","Text is set horizontally from left to right.","","","Do not serialize glyph advances, glyph offsets will …","Do not serialize glyph cluster.","Do no serialize glyph name.","Do not serialize glyph position information.","Indicates that characters with <code>Default_Ignorable</code> Unicode …","Indicates that characters with <code>Default_Ignorable</code> Unicode …","Text is set horizontally from right to left.","A text script.","Flags used for serialization with a <code>BufferSerializer</code>.","A reusable plan for shaping a text buffer.","A 4-byte tag.","Text is set vertically from top to bottom.","A buffer that contains an input string ready for shaping.","A font variation.","Appends a character to a buffer with the given cluster …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","Returns the language as a string.","Returns tag value as <code>u32</code> number.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the contents of the buffer.","Clears the content of the glyph buffer and returns an empty","","","","","","","","","","","","","","","","","","","","","","","An index to the start of the grapheme cluster in the …","Retrieve the cluster level of the buffer.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the <code>Buffer</code>’s text direction.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get the flags for this buffer.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from <code>ttf_parser::Face</code>.","Converts an ISO 15924 script tag to a corresponding <code>Script</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Creates a new <code>Face</code> from data.","","","","Parses a <code>Feature</code> form a string.","","A selected glyph.","Get the glyph infos.","Get the glyph positions.","Guess the segment properties (direction, language, script) …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the buffer contains no elements.","Returns <code>true</code> if the buffer contains no elements.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the buffer language.","Returns the length of the data of the buffer.","Returns the length of the data of the buffer.","Create a new <code>UnicodeBuffer</code>.","Returns a plan that can be used for shaping any buffer …","Create a new <code>Feature</code> struct.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Pushes a string to a buffer.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Resets clusters.","Predefined scripts.","Get the ISO15924 script tag.","Converts the glyph buffer content into a string.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set the cluster level of the buffer.","Set the text direction of the <code>Buffer</code>’s contents.","Set the flags for this buffer.","Set the buffer language.","Sets pixels per EM.","Sets point size per EM.","Sets the post-context for this buffer.","Sets the pre-context for this buffer.","Set the script from an ISO15924 tag.","Sets font variations.","Shapes the buffer content using provided font and features.","Shapes the buffer content using the provided font and plan.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns script’s tag.","","","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns face’s units per EM.","Indicates that if input text is broken at the beginning of …","","","How much the line advances after drawing this glyph when …","How much the glyph moves on the X-axis before drawing it, …","How much the line advances after drawing this glyph when …","How much the glyph moves on the Y-axis before drawing it, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,17,0,0,16,5,0,5,0,0,6,6,0,0,0,17,0,17,16,16,6,6,6,6,5,5,17,0,0,0,0,17,0,0,1,5,6,7,7,9,11,5,6,5,6,5,6,5,6,5,5,6,6,5,6,5,6,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,1,13,14,15,16,5,17,9,18,19,20,7,11,14,15,16,5,17,9,18,19,20,7,11,15,1,18,11,5,6,5,6,1,14,15,16,5,6,17,7,7,5,6,1,5,6,19,16,17,9,18,19,20,11,5,6,1,1,13,14,15,16,5,5,5,5,5,6,6,6,6,17,9,18,19,20,11,11,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,5,6,5,5,6,6,5,6,11,11,7,18,5,6,5,6,7,17,9,18,19,20,15,13,13,1,16,17,9,18,19,11,5,6,5,6,5,6,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,5,6,5,6,1,13,5,6,11,14,15,5,6,5,6,1,1,13,1,35,19,5,6,11,18,11,1,5,6,1,0,1,13,5,6,1,1,1,1,7,7,1,1,1,7,0,0,19,5,6,5,6,5,6,18,19,20,11,11,14,15,16,5,17,9,18,19,20,7,11,11,5,6,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,0,1,13,35,14,15,16,5,6,17,9,18,19,20,7,11,5,6,7,15,19,20,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],[[],5],[[],6],[7,8],[7,8],[9,10],[11,3],[[5,5],5],[[6,6],6],[[5,5],4],[[6,6],4],[[5,5],5],[[6,6],6],[[5,5],4],[[6,6],4],[5,3],[5,3],[6,12],[6,12],[[5,5],5],[[6,6],6],[[5,5],4],[[6,6],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,4],[13,1],[14,14],[15,15],[16,16],[5,5],[17,17],[9,9],[18,18],[19,19],[20,20],[7,7],[11,11],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[1,16],[[18,18],21],[[11,11],21],[5,5],[6,6],[[5,5],22],[[6,6],22],[[],1],[[],14],[[],15],[[],16],[[],5],[[],6],[[],17],[7],[7],[[5,5],5],[[6,6],6],[1,17],[[],5],[[],6],0,[[16,16],22],[[17,17],22],[[9,9],22],[[18,18],22],[[19,19],22],[[20,20],22],[[11,11],22],[[5,-1],4,23],[[6,-1],4,23],[1,5],[[1,24],25],[[13,24],25],[[14,24],25],[[15,24],25],[[16,24],25],[[5,24],25],[[5,24],25],[[5,24],25],[[5,24],25],[[5,24],25],[[6,24],25],[[6,24],25],[[6,24],25],[[6,24],25],[[17,24],25],[[9,24],25],[[18,24],25],[[19,24],25],[[20,24],25],[[11,24],[[27,[4,26]]]],[[11,24],[[27,[4,26]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,[[28,[5]]]],[12,[[28,[6]]]],[3,5],[3,5],[12,6],[12,6],[3,5],[12,6],[[[29,[12]]],11],[[[30,[12]]],11],[8,7],[11,[[28,[18]]]],[-1,5,23],[-1,6,23],[10,[[28,[5]]]],[10,[[28,[6]]]],[[[30,[12]],3],[[28,[7]]]],[10,[[27,[17]]]],[10,[[27,[9]]]],[10,[[27,[18]]]],[10,[[27,[19]]]],[10,[[27,[20]]]],0,[13,[[30,[15]]]],[13,[[30,[14]]]],[1,4],[[16,-1],4,31],[[17,-1],4,31],[[9,-1],4,31],[[18,-1],4,31],[[19,-1],4,31],[[11,-1],4,31],[[5,5],4],[[6,6],4],[[5,5],5],[[6,6],6],[[5,5],22],[[6,6],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5],[6],[5,22],[6,22],[1,22],[13,22],[5,22],[6,22],[11,22],[-1,22,[]],[-1,22,[]],[5,[[32,[5]]]],[6,[[32,[6]]]],[5,[[33,[5]]]],[6,[[33,[6]]]],[1,[[28,[9]]]],[1,34],[13,34],[[],1],[[7,17,[28,[18]],[28,[9]],[30,[19]]],35],[[11,3,-1],19,[[36,[34]]]],[5,5],[6,6],[[[30,[12]]],[[28,[11]]]],[[18,18],[[28,[21]]]],[[11,11],[[28,[21]]]],[[1,10],4],[[5,5],4],[[6,6],4],[1,4],0,[1,18],[[13,7,6],37],[[5,5,22],4],[[6,6,22],4],[[1,16],4],[[1,17],4],[[1,5],4],[[1,9],4],[[7,[28,[[4,[38,38]]]]],4],[[7,[28,[39]]],4],[[1,10],4],[[1,10],4],[[1,18],4],[[7,[30,[20]]],4],[[7,[30,[19]],1],13],[[7,35,1],13],0,[[5,5],5],[[6,6],6],[[5,5],4],[[6,6],4],[[5,5],5],[[6,6],6],[18,11],0,0,[11,[[29,[12]]]],[11,[[29,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[[5,5],4],[[6,6],4],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],0,[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[[5,5],5],[[6,6],6],[7,41],[15,22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"UnicodeBuffer",0],[15,"char"],[15,"u32"],[15,"tuple"],[3,"BufferFlags",0],[3,"SerializeFlags",0],[3,"Face",0],[3,"Face",520],[3,"Language",0],[15,"str"],[3,"Tag",0],[15,"u8"],[3,"GlyphBuffer",0],[3,"GlyphPosition",0],[3,"GlyphInfo",0],[4,"BufferClusterLevel",0],[4,"Direction",0],[3,"Script",0],[3,"Feature",0],[3,"Variation",0],[4,"Ordering",521],[15,"bool"],[8,"IntoIterator",522],[3,"Formatter",523],[6,"Result",523],[3,"Error",523],[4,"Result",524],[4,"Option",525],[15,"array"],[15,"slice"],[8,"Hasher",526],[3,"Iter",527],[3,"IterNames",527],[15,"usize"],[3,"ShapePlan",0],[8,"RangeBounds",528],[3,"String",529],[15,"u16"],[15,"f32"],[3,"TypeId",530],[15,"i32"]],"b":[[49,"impl-Flags-for-BufferFlags"],[50,"impl-BufferFlags"],[51,"impl-Flags-for-SerializeFlags"],[52,"impl-SerializeFlags"],[149,"impl-LowerHex-for-BufferFlags"],[150,"impl-Binary-for-BufferFlags"],[151,"impl-Octal-for-BufferFlags"],[152,"impl-Debug-for-BufferFlags"],[153,"impl-UpperHex-for-BufferFlags"],[154,"impl-Binary-for-SerializeFlags"],[155,"impl-LowerHex-for-SerializeFlags"],[156,"impl-UpperHex-for-SerializeFlags"],[157,"impl-Octal-for-SerializeFlags"],[163,"impl-Debug-for-Tag"],[164,"impl-Display-for-Tag"],[182,"impl-BufferFlags"],[183,"impl-Flags-for-BufferFlags"],[184,"impl-SerializeFlags"],[185,"impl-Flags-for-SerializeFlags"]]},\
"self_cell":{"doc":"Overview","t":"O","n":["self_cell"],"q":[[0,"self_cell"]],"d":["This macro declares a new struct of <code>$StructName</code> and …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"slotmap":{"doc":"slotmap","t":"DDDIDDDLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLALLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLALLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDDNDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultKey","DenseSlotMap","HopSlotMap","Key","KeyData","SecondaryMap","SlotMap","as_ffi","basic","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_from","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data","data","default","default","default","default","default","default","dense","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ffi","from_iter","hash","hash","hop","index","index","index","index","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_null","new_key_type","null","partial_cmp","partial_cmp","secondary","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","Keys","SlotMap","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_with_key","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","DenseSlotMap","Drain","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_with_key","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","HopSlotMap","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_with_key","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","SecondaryMap","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone_into","clone_into","clone_into","contains_key","drain","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","new","next","next","next","next","next","next","next","or_default","or_insert","or_insert_with","remove","remove","remove_entry","retain","set_capacity","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity"],"q":[[0,"slotmap"],[126,"slotmap::basic"],[251,"slotmap::dense"],[376,"slotmap::hop"],[501,"slotmap::secondary"],[663,"core::clone"],[664,"core::cmp"],[665,"core::cmp"],[666,"core::iter::traits::collect"],[667,"core::fmt"],[668,"core::fmt"],[669,"core::option"],[670,"core::result"],[671,"core::any"],[672,"core::ops::function"],[673,"core::ops::function"]],"d":["The default slot map key type.","Dense slot map, storage with stable unique keys.","Hop slot map, storage with stable unique keys.","Key used to access stored values in a slot map.","The actual data stored in a <code>Key</code>.","Secondary map, associate data with previously stored …","Slot map, storage with stable unique keys.","Returns the key data as a 64-bit integer. No guarantees …","Contains the slot map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the <code>KeyData</code> stored in this key.","","","","","","","","Contains the dense slot map implementation.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Iff <code>value</code> is a value received from <code>k.as_ffi()</code>, returns a …","","","","Contains the faster iteration, slower insertion/removal …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Checks if a key is null. There is only a single null key, …","A helper macro to create new key types. If you use a new …","Creates a new key that is always invalid and distinct from …","","","Contains the secondary map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","A draining iterator for <code>SlotMap</code>.","An iterator that moves key-value pairs out of a <code>SlotMap</code>.","An iterator over the key-value pairs in a <code>SlotMap</code>.","A mutable iterator over the key-value pairs in a <code>SlotMap</code>.","An iterator over the keys in a <code>SlotMap</code>.","Slot map, storage with stable unique keys.","An iterator over the values in a <code>SlotMap</code>.","A mutable iterator over the values in a <code>SlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>SlotMap</code> can hold without","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>SlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","Inserts a value given by <code>f</code> into the slot map. The key …","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SlotMap</code> with the given capacity.","Creates an empty <code>SlotMap</code> with the given capacity and a …","Constructs a new, empty <code>SlotMap</code> with a custom key type.","Dense slot map, storage with stable unique keys.","A draining iterator for <code>DenseSlotMap</code>.","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>DenseSlotMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>DenseSlotMap</code>.","An iterator over the values in a <code>DenseSlotMap</code>.","A mutable iterator over the values in a <code>DenseSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>DenseSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Construct a new, empty <code>DenseSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","Inserts a value given by <code>f</code> into the slot map. The key …","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>DenseSlotMap</code> with the given capacity.","Creates an empty <code>DenseSlotMap</code> with the given capacity and …","Constructs a new, empty <code>DenseSlotMap</code> with a custom key …","A draining iterator for <code>HopSlotMap</code>.","Hop slot map, storage with stable unique keys.","An iterator that moves key-value pairs out of a <code>HopSlotMap</code>.","An iterator over the key-value pairs in a <code>HopSlotMap</code>.","A mutable iterator over the key-value pairs in a <code>HopSlotMap</code>…","An iterator over the keys in a <code>HopSlotMap</code>.","An iterator over the values in a <code>HopSlotMap</code>.","A mutable iterator over the values in a <code>HopSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>HopSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>HopSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","Inserts a value given by <code>f</code> into the slot map. The key …","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>HopSlotMap</code> with the given capacity.","Creates an empty <code>HopSlotMap</code> with the given capacity and a …","Constructs a new, empty <code>HopSlotMap</code> with a custom key type.","A draining iterator for <code>SecondaryMap</code>.","A view into a single entry in a <code>SecondaryMap</code>, which may …","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>SecondaryMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>SecondaryMap</code>.","An occupied entry.","A view into a occupied entry in a <code>SecondaryMap</code>. It is part …","Secondary map, associate data with previously stored …","A vacant entry.","A view into a vacant entry in a <code>SecondaryMap</code>. It is part …","An iterator over the values in a <code>SecondaryMap</code>.","A mutable iterator over the values in a <code>SecondaryMap</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>SecondaryMap</code> can hold …","Clears the secondary map. Keeps the allocated memory for …","","","","","","","Returns <code>true</code> if the secondary map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","Gets the given key’s corresponding <code>Entry</code> in the map for …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the secondary map at the given <code>key</code>. …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Converts the <code>OccupiedEntry</code> into a mutable reference to the …","Returns if the secondary map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns this entry’s key.","Gets the key that would be used when inserting a value …","Returns this entry’s key.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the secondary map.","Constructs a new, empty <code>SecondaryMap</code>.","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the secondary map, returning the value …","Takes the value out of the entry, and returns it.","Removes the entry from the slot map and returns the key …","Retains only the elements specified by the predicate.","Sets the capacity of the <code>SecondaryMap</code> to <code>new_capacity</code>, if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SecondaryMap</code> with the given capacity of …"],"i":[0,0,0,0,0,0,0,1,0,3,6,7,8,1,9,3,6,7,8,1,9,3,6,7,8,1,9,3,6,7,3,6,7,8,1,9,1,9,4,9,3,6,7,8,1,9,0,8,1,9,8,8,3,6,7,8,1,9,3,6,7,8,1,9,9,1,8,1,9,0,3,6,7,8,3,6,7,8,3,6,7,8,1,9,3,3,3,6,6,6,7,7,7,8,8,8,4,0,4,1,9,0,3,6,7,8,1,9,3,6,7,8,1,9,3,6,7,8,1,9,3,6,7,8,1,9,0,0,0,0,0,0,0,0,28,24,25,29,26,27,30,28,24,25,29,26,27,30,3,3,24,25,26,27,24,25,26,27,3,3,28,28,24,25,29,26,27,30,28,24,25,29,26,27,30,3,3,3,3,3,3,3,3,28,24,25,29,26,27,30,28,24,25,29,26,27,30,3,3,3,3,3,3,28,24,25,29,26,27,30,3,3,3,28,24,25,29,26,27,30,24,25,26,27,28,24,25,29,26,27,30,3,28,24,25,29,26,27,30,28,24,25,29,26,27,30,3,3,3,3,3,0,0,0,0,0,0,0,0,38,34,35,39,36,37,40,38,34,35,39,36,37,40,6,6,34,35,36,37,34,35,36,37,6,6,38,38,34,35,39,36,37,40,38,34,35,39,36,37,40,6,6,6,6,6,6,6,6,38,34,35,39,36,37,40,38,34,35,39,36,37,40,6,6,6,6,6,6,38,34,35,39,36,37,40,6,6,6,38,34,35,39,36,37,40,34,35,36,37,38,34,35,39,36,37,40,6,38,34,35,39,36,37,40,38,34,35,39,36,37,40,6,6,6,6,6,0,0,0,0,0,0,0,0,45,41,42,46,43,44,47,45,41,42,46,43,44,47,7,7,41,42,43,44,41,42,43,44,7,7,45,45,41,42,46,43,44,47,45,41,42,46,43,44,47,7,7,7,7,7,7,7,7,45,41,42,46,43,44,47,45,41,42,46,43,44,47,7,7,7,7,7,7,45,41,42,46,43,44,47,7,7,7,45,41,42,46,43,44,47,41,42,43,44,45,41,42,46,43,44,47,7,45,41,42,46,43,44,47,45,41,42,46,43,44,47,7,7,7,7,7,0,0,0,0,0,0,48,0,0,48,0,0,0,48,53,54,48,52,55,49,56,50,51,57,53,54,48,52,55,49,56,50,51,57,8,8,49,50,51,49,50,51,8,8,52,8,53,54,48,52,55,49,56,50,51,57,53,54,48,52,55,49,56,50,51,57,8,53,8,8,8,53,8,8,8,53,54,53,54,48,52,55,49,56,50,51,57,52,55,49,56,50,51,57,53,8,8,8,53,54,48,8,8,8,52,55,49,56,50,51,57,48,48,48,8,53,53,8,8,52,55,49,56,50,51,57,49,50,51,53,54,48,52,55,49,56,50,51,57,53,54,48,52,55,49,56,50,51,57,53,54,48,52,55,49,56,50,51,57,8,8,8],"f":[0,0,0,0,0,0,0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],[[3,[-1,-2]]],4,5],[[[6,[-1,-2]]],[[6,[-1,-2]]],4,5],[[[7,[-1,-2]]],[[7,[-1,-2]]],4,5],[[[8,[-1,-2]]],[[8,[-1,-2]]],[5,4],5],[1,1],[9,9],[[[3,[-1,-2]],[3,[-1,-2]]],10,4,5],[[[6,[-1,-2]],[6,[-1,-2]]],10,4,5],[[[7,[-1,-2]],[7,[-1,-2]]],10,4,5],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[1,1],11],[[9,9],11],[-1,1,[]],[9,1],[[],[[3,[-1,-2]]],4,[]],[[],[[6,[-1,-2]]],4,[]],[[],[[7,[-1,-2]]],4,[]],[[],[[8,[-1,-2]]],4,[]],[[],1],[[],9],0,[[[8,[-1,-2]],[8,[-1,-2]]],12,4,13],[[1,1],12],[[9,9],12],[[[8,[-1,-2]],-3],10,4,14,15],[[[8,[-1,-2]],-3],10,4,[],15],[[[3,[-1,-2]],16],17,[18,4],18],[[[6,[-1,-2]],16],17,[18,4],18],[[[7,[-1,-2]],16],17,[18,4],18],[[[8,[-1,-2]],16],17,[18,4],18],[[1,16],17],[[9,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,9],[2,1],[-1,[[8,[-2,-3]]],15,4,[]],[[1,-1],10,19],[[9,-1],10,19],0,[[[3,[-1,-2]],-1],-2,4,[]],[[[6,[-1,-2]],-1],-2,4,[]],[[[7,[-1,-2]],-1],-2,4,[]],[[[8,[-1,-2]],-1],-2,4,[]],[[[3,[-1,-2]],-1],-2,4,[]],[[[6,[-1,-2]],-1],-2,4,[]],[[[7,[-1,-2]],-1],-2,4,[]],[[[8,[-1,-2]],-1],-2,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],[],4,[]],[[[3,[-1,-2]]],[],4,[]],[[[3,[-1,-2]]],[],4,[]],[[[6,[-1,-2]]],[],4,[]],[[[6,[-1,-2]]],[],4,[]],[[[6,[-1,-2]]],[],4,[]],[[[7,[-1,-2]]],[],4,[]],[[[7,[-1,-2]]],[],4,[]],[[[7,[-1,-2]]],[],4,[]],[[[8,[-1,-2]]],[],4,[]],[[[8,[-1,-2]]],[],4,[]],[[[8,[-1,-2]]],[],4,[]],[-1,12,[]],0,[[],-1,[]],[[1,1],[[20,[11]]]],[[9,9],[[20,[11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],23,4,[]],[[[3,[-1,-2]]],10,4,[]],[[[24,[-1,-2]]],[[24,[-1,-2]]],[5,4],5],[[[25,[-1,-2]]],[[25,[-1,-2]]],4,[]],[[[26,[-1,-2]]],[[26,[-1,-2]]],4,[]],[[[27,[-1,-2]]],[[27,[-1,-2]]],4,[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[3,[-1,-2]],-1],12,4,[]],[[[3,[-1,-2]]],[[28,[-1,-2]]],4,[]],[[[28,[-1,-2]]],10,4,[]],[[[28,[-1,-2]],16],17,[18,4],18],[[[24,[-1,-2]],16],17,[18,4],18],[[[25,[-1,-2]],16],17,[18,4],18],[[[29,[-1,-2]],16],17,[18,4],18],[[[26,[-1,-2]],16],17,[18,4],18],[[[27,[-1,-2]],16],17,[18,4],18],[[[30,[-1,-2]],16],17,[18,4],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[3,[-1,-2]],[31,[-1]]],[[20,[[31,[-2]]]]],4,[]],[[[3,[-1,-2]],[31,[-1]]],[[31,[-2]]],4,[]],[[[3,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[3,[-1,-2]],-1],-2,4,[]],[[[3,[-1,-2]],-1],-2,4,[]],[[[3,[-1,-2]],-2],-1,4,[]],[[[3,[-1,-2]],-3],-1,4,[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],12,4,[]],[[[3,[-1,-2]]],[[25,[-1,-2]]],4,[]],[[[3,[-1,-2]]],[[29,[-1,-2]]],4,[]],[[[3,[-1,-2]]],[[26,[-1,-2]]],4,[]],[[[3,[-1,-2]]],23,4,[]],[[],[[3,[9,-1]]],[]],[[[28,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[24,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[25,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[29,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[26,[-1,-2]]],[[20,[-1]]],4,[]],[[[27,[-1,-2]]],[[20,[-2]]],4,[]],[[[30,[-1,-2]]],[[20,[-2]]],4,[]],[[[3,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[3,[-1,-2]],23],10,4,[]],[[[3,[-1,-2]],-3],10,4,[],33],[[[28,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[24,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[25,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[29,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[26,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[27,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[30,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[3,[-1,-2]],-3],[[21,[-1,-4]]],4,[],32,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[[3,[-1,-2]]],[[27,[-1,-2]]],4,[]],[[[3,[-1,-2]]],[[30,[-1,-2]]],4,[]],[23,[[3,[9,-1]]],[]],[23,[[3,[-1,-2]]],4,[]],[[],[[3,[-1,-2]]],4,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]]],23,4,[]],[[[6,[-1,-2]]],10,4,[]],[[[34,[-1,-2]]],[[34,[-1,-2]]],5,5],[[[35,[-1,-2]]],[[35,[-1,-2]]],4,[]],[[[36,[-1,-2]]],[[36,[-1,-2]]],4,[]],[[[37,[-1,-2]]],[[37,[-1,-2]]],4,[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[6,[-1,-2]],-1],12,4,[]],[[[6,[-1,-2]]],[[38,[-1,-2]]],4,[]],[[[38,[-1,-2]]],10,4,[]],[[[38,[-1,-2]],16],17,[18,4],18],[[[34,[-1,-2]],16],17,18,18],[[[35,[-1,-2]],16],17,[18,4],18],[[[39,[-1,-2]],16],17,[18,4],18],[[[36,[-1,-2]],16],17,[18,4],18],[[[37,[-1,-2]],16],17,[18,4],18],[[[40,[-1,-2]],16],17,[18,4],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[6,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[6,[-1,-2]],[31,[-1]]],[[20,[[31,[-2]]]]],4,[]],[[[6,[-1,-2]],[31,[-1]]],[[31,[-2]]],4,[]],[[[6,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[6,[-1,-2]],-1],-2,4,[]],[[[6,[-1,-2]],-1],-2,4,[]],[[[6,[-1,-2]],-2],-1,4,[]],[[[6,[-1,-2]],-3],-1,4,[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]]],12,4,[]],[[[6,[-1,-2]]],[[35,[-1,-2]]],4,[]],[[[6,[-1,-2]]],[[39,[-1,-2]]],4,[]],[[[6,[-1,-2]]],[[36,[-1,-2]]],4,[]],[[[6,[-1,-2]]],23,4,[]],[[],[[6,[9,-1]]],[]],[[[38,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[34,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[35,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[39,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[36,[-1,-2]]],[[20,[-1]]],4,[]],[[[37,[-1,-2]]],[[20,[-2]]],4,[]],[[[40,[-1,-2]]],[[20,[-2]]],4,[]],[[[6,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[6,[-1,-2]],23],10,4,[]],[[[6,[-1,-2]],-3],10,4,[],33],[[[38,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[34,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[35,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[39,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[36,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[37,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[40,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[6,[-1,-2]],-3],[[21,[-1,-4]]],4,[],32,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[[6,[-1,-2]]],[[37,[-1,-2]]],4,[]],[[[6,[-1,-2]]],[[40,[-1,-2]]],4,[]],[23,[[6,[9,-1]]],[]],[23,[[6,[-1,-2]]],4,[]],[[],[[6,[-1,-2]]],4,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1,-2]]],23,4,[]],[[[7,[-1,-2]]],10,4,[]],[[[41,[-1,-2]]],[[41,[-1,-2]]],[5,4],5],[[[42,[-1,-2]]],[[42,[-1,-2]]],4,[]],[[[43,[-1,-2]]],[[43,[-1,-2]]],4,[]],[[[44,[-1,-2]]],[[44,[-1,-2]]],4,[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[7,[-1,-2]],-1],12,4,[]],[[[7,[-1,-2]]],[[45,[-1,-2]]],4,[]],[[[45,[-1,-2]]],10,4,[]],[[[45,[-1,-2]],16],17,[18,4],18],[[[41,[-1,-2]],16],17,[18,4],18],[[[42,[-1,-2]],16],17,[18,4],18],[[[46,[-1,-2]],16],17,[18,4],18],[[[43,[-1,-2]],16],17,[18,4],18],[[[44,[-1,-2]],16],17,[18,4],18],[[[47,[-1,-2]],16],17,[18,4],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[7,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[7,[-1,-2]],[31,[-1]]],[[20,[[31,[-2]]]]],4,[]],[[[7,[-1,-2]],[31,[-1]]],[[31,[-2]]],4,[]],[[[7,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[7,[-1,-2]],-1],-2,4,[]],[[[7,[-1,-2]],-1],-2,4,[]],[[[7,[-1,-2]],-2],-1,4,[]],[[[7,[-1,-2]],-3],-1,4,[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1,-2]]],12,4,[]],[[[7,[-1,-2]]],[[42,[-1,-2]]],4,[]],[[[7,[-1,-2]]],[[46,[-1,-2]]],4,[]],[[[7,[-1,-2]]],[[43,[-1,-2]]],4,[]],[[[7,[-1,-2]]],23,4,[]],[[],[[7,[9,-1]]],[]],[[[45,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[41,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[42,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[46,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[43,[-1,-2]]],[[20,[-1]]],4,[]],[[[44,[-1,-2]]],[[20,[-2]]],4,[]],[[[47,[-1,-2]]],[[20,[-2]]],4,[]],[[[7,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[7,[-1,-2]],23],10,4,[]],[[[7,[-1,-2]],-3],10,4,[],33],[[[45,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[41,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[42,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[46,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[43,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[44,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[47,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[7,[-1,-2]],-3],[[21,[-1,-4]]],4,[],32,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[[7,[-1,-2]]],[[44,[-1,-2]]],4,[]],[[[7,[-1,-2]]],[[47,[-1,-2]]],4,[]],[23,[[7,[9,-1]]],[]],[23,[[7,[-1,-2]]],4,[]],[[],[[7,[-1,-2]]],4,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[48,[-1,-2]],-3],[[48,[-1,-2]]],4,[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1,-2]]],23,4,[]],[[[8,[-1,-2]]],10,4,[]],[[[49,[-1,-2]]],[[49,[-1,-2]]],4,[]],[[[50,[-1,-2]]],[[50,[-1,-2]]],4,[]],[[[51,[-1,-2]]],[[51,[-1,-2]]],4,[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[8,[-1,-2]],-1],12,4,[]],[[[8,[-1,-2]]],[[52,[-1,-2]]],4,[]],[[[52,[-1,-2]]],10,4,[]],[[[8,[-1,-2]],-1],[[20,[[48,[-1,-2]]]]],4,[]],[[[53,[-1,-2]],16],17,[18,4],18],[[[54,[-1,-2]],16],17,[18,4],18],[[[48,[-1,-2]],16],17,[18,4],18],[[[52,[-1,-2]],16],17,[18,4],18],[[[55,[-1,-2]],16],17,[18,4],18],[[[49,[-1,-2]],16],17,[18,4],18],[[[56,[-1,-2]],16],17,[18,4],18],[[[50,[-1,-2]],16],17,[18,4],18],[[[51,[-1,-2]],16],17,[18,4],18],[[[57,[-1,-2]],16],17,[18,4],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[8,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[53,[-1,-2]]],-2,4,[]],[[[8,[-1,-2]],[31,[-1]]],[[20,[[31,[-2]]]]],4,[]],[[[8,[-1,-2]],[31,[-1]]],[[31,[-2]]],4,[]],[[[8,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[53,[-1,-2]]],-2,4,[]],[[[8,[-1,-2]],-1],-2,4,[]],[[[8,[-1,-2]],-1],-2,4,[]],[[[8,[-1,-2]],-1,-2],[[20,[-2]]],4,[]],[[[53,[-1,-2]],-2],-2,4,[]],[[[54,[-1,-2]],-2],-2,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1,-2]]],-2,4,[]],[[[8,[-1,-2]]],12,4,[]],[[[8,[-1,-2]]],[[49,[-1,-2]]],4,[]],[[[8,[-1,-2]]],[[56,[-1,-2]]],4,[]],[[[53,[-1,-2]]],-1,4,[]],[[[54,[-1,-2]]],-1,4,[]],[[[48,[-1,-2]]],-1,4,[]],[[[8,[-1,-2]]],[[50,[-1,-2]]],4,[]],[[[8,[-1,-2]]],23,4,[]],[[],[[8,[-1,-2]]],4,[]],[[[52,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[55,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[49,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[56,[-1,-2]]],[[20,[[10,[-1,-2]]]]],4,[]],[[[50,[-1,-2]]],[[20,[-1]]],4,[]],[[[51,[-1,-2]]],[[20,[-2]]],4,[]],[[[57,[-1,-2]]],[[20,[-2]]],4,[]],[[[48,[-1,-2]]],-2,4,58],[[[48,[-1,-2]],-2],-2,4,[]],[[[48,[-1,-2]],-3],-2,4,[],32],[[[8,[-1,-2]],-1],[[20,[-2]]],4,[]],[[[53,[-1,-2]]],-2,4,[]],[[[53,[-1,-2]]],[[10,[-1,-2]]],4,[]],[[[8,[-1,-2]],-3],10,4,[],33],[[[8,[-1,-2]],23],10,4,[]],[[[52,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[55,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[49,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[56,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[50,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[51,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[[[57,[-1,-2]]],[[10,[23,[20,[23]]]]],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[[8,[-1,-2]]],[[51,[-1,-2]]],4,[]],[[[8,[-1,-2]]],[[57,[-1,-2]]],4,[]],[23,[[8,[-1,-2]]],4,[]]],"c":[],"p":[[3,"KeyData",0],[15,"u64"],[3,"SlotMap",0],[8,"Key",0],[8,"Clone",663],[3,"DenseSlotMap",0],[3,"HopSlotMap",0],[3,"SecondaryMap",0],[3,"DefaultKey",0],[15,"tuple"],[4,"Ordering",664],[15,"bool"],[8,"PartialEq",664],[8,"Copy",665],[8,"IntoIterator",666],[3,"Formatter",667],[6,"Result",667],[8,"Debug",667],[8,"Hasher",668],[4,"Option",669],[4,"Result",670],[3,"TypeId",671],[15,"usize"],[3,"IntoIter",126],[3,"Iter",126],[3,"Keys",126],[3,"Values",126],[3,"Drain",126],[3,"IterMut",126],[3,"ValuesMut",126],[15,"array"],[8,"FnOnce",672],[8,"FnMut",672],[3,"IntoIter",251],[3,"Iter",251],[3,"Keys",251],[3,"Values",251],[3,"Drain",251],[3,"IterMut",251],[3,"ValuesMut",251],[3,"IntoIter",376],[3,"Iter",376],[3,"Keys",376],[3,"Values",376],[3,"Drain",376],[3,"IterMut",376],[3,"ValuesMut",376],[4,"Entry",501],[3,"Iter",501],[3,"Keys",501],[3,"Values",501],[3,"Drain",501],[3,"OccupiedEntry",501],[3,"VacantEntry",501],[3,"IntoIter",501],[3,"IterMut",501],[3,"ValuesMut",501],[8,"Default",673]],"b":[[50,"impl-Extend%3C(K,+%26V)%3E-for-SecondaryMap%3CK,+V%3E"],[51,"impl-Extend%3C(K,+V)%3E-for-SecondaryMap%3CK,+V%3E"],[84,"impl-IntoIterator-for-%26SlotMap%3CK,+V%3E"],[85,"impl-IntoIterator-for-%26mut+SlotMap%3CK,+V%3E"],[86,"impl-IntoIterator-for-SlotMap%3CK,+V%3E"],[87,"impl-IntoIterator-for-%26DenseSlotMap%3CK,+V%3E"],[88,"impl-IntoIterator-for-DenseSlotMap%3CK,+V%3E"],[89,"impl-IntoIterator-for-%26mut+DenseSlotMap%3CK,+V%3E"],[90,"impl-IntoIterator-for-%26mut+HopSlotMap%3CK,+V%3E"],[91,"impl-IntoIterator-for-HopSlotMap%3CK,+V%3E"],[92,"impl-IntoIterator-for-%26HopSlotMap%3CK,+V%3E"],[93,"impl-IntoIterator-for-%26mut+SecondaryMap%3CK,+V%3E"],[94,"impl-IntoIterator-for-SecondaryMap%3CK,+V%3E"],[95,"impl-IntoIterator-for-%26SecondaryMap%3CK,+V%3E"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"],[139,"core::clone"],[140,"core::cmp"],[141,"core::ops::function"],[142,"core::ops::range"],[143,"core::iter::traits::collect"],[144,"core::fmt"],[145,"core::fmt"],[146,"core::alloc::layout"],[147,"core::mem::maybe_uninit"],[148,"core::hash"],[149,"core::slice::index"],[150,"alloc::boxed"],[151,"core::result"],[152,"core::option"],[153,"alloc::string"],[154,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[16,0,16,0,0,0,3,0,0,1,1,1,1,5,1,1,1,5,10,1,1,5,16,10,1,1,5,16,1,1,1,5,1,1,5,1,1,1,1,1,1,1,1,10,1,5,1,1,1,10,1,5,16,16,10,1,1,1,1,1,5,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,5,16,1,1,10,1,1,1,5,1,1,10,1,1,10,5,10,5,1,1,1,1,1,1,1,1,1,1,1,1,3,10,5,0,1,1,1,5,28,16,1,10,1,5,16,1,10,1,5,16,1,1,10,1,5,16,1,29],"f":[0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-2]]],2,3,3],[[[1,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],6,3],[[[1,[-1]]],2,3],[[[1,[-1]]],[[1,[-1]]],3],[[[5,[-1]]],[[5,[-1]]],[3,7]],[[[1,[-1]],[1,[-1]]],2,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[1,[-1]],[1,[-1]]],8,3],[[[1,[-1]]],2,3],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[],[[1,[-1]]],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[1,[-1]],-2],[[10,[-1]]],3,[[11,[6]]]],[[[10,[-1]]],2,3],[[[1,[-1]]],2,3],[[[5,[-1]]],2,3],[[[1,[-1]],[1,[-2]]],12,3,3],[[[1,[-1]],-2],2,3,13],[[[1,[-1]],4],2,3],[[[10,[-1]],14],15,3],[[[1,[-1]],14],15,3],[[[5,[-1]],14],15,3],[[16,14],15],[[16,14],15],[-1,-1,[]],[-1,[[1,[-1]]],3],[17,[[1,[-1]]],3],[18,-1,[]],[4,[[1,[-1]]],3],[-1,-1,[]],[-1,-1,[]],[19,16],[-1,-1,[]],[-1,[[1,[-1]]],3],[[-1,6],[[1,[-1]]],3],[[[20,[-1]],6],[[1,[-1]]],3],[6,[[1,[-1]]],3],[-1,[[1,[-2]]],13,3],[[6,6],[[1,[-1]]],3],[4,[[1,[-1]]],3],[17,[[1,[-1]]],3],[[[1,[-1]],6],2,3],[[[1,[-1]],-2],2,3,21],[[[1,[-1]],-2],[],3,[[22,[4]]]],[[[1,[-1]],-2],[],3,[[22,[4]]]],[[[1,[-1]]],6,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,4],2,3],[[[1,[-1]],6,-2],2,3,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[23,[4]]],3],[[[1,[-1]]],[[24,[-1,[1,[-1]]]]],3],[-1,-2,[],[]],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[-1,-2,[],[]],[[[1,[-1]]],17,3],[[[1,[-1]]],12,3],[[[10,[-1]]],6,3],[[[1,[-1]]],6,3],[[],[[1,[-1]]],3],[[[10,[-1]]],25,3],[[[5,[-1]]],25,3],[[[10,[-1]]],25,3],[[[5,[-1]]],25,3],[[[1,[-1]],[1,[-1]]],[[25,[8]]],3],[[[1,[-1]]],25,3],[[[1,[-1]]],2,3],[[[1,[-1]],6],[],3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],6],2,3],[[[1,[-1]]],2,3],[[],6],[[[10,[-1]]],[[2,[6,[25,[6]]]]],3],[[[5,[-1]]],[[2,[6,[25,[6]]]]],3],0,[[[1,[-1]]],12,3],[[[1,[-1]],6],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,26,[]],[[[1,[-1]],6],2,3],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[1,[-1]],6],[[24,[2,16]]],3],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[1,[-1]],6],[[24,[2,16]]],3],[[[1,[-1]],6],[[24,[2,16]]],3],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[6,[[1,[-1]]],3],0],"c":[],"p":[[3,"SmallVec",0],[15,"tuple"],[8,"Array",0],[15,"slice"],[3,"IntoIter",0],[15,"usize"],[8,"Clone",139],[4,"Ordering",140],[8,"FnMut",141],[3,"Drain",0],[8,"RangeBounds",142],[15,"bool"],[8,"IntoIterator",143],[3,"Formatter",144],[6,"Result",144],[4,"CollectionAllocErr",0],[3,"Vec",145],[15,"never"],[6,"LayoutErr",146],[19,"MaybeUninit",147],[8,"Hasher",148],[8,"SliceIndex",149],[3,"Box",150],[4,"Result",151],[4,"Option",152],[3,"String",153],[3,"TypeId",154],[8,"ToSmallVec",0],[13,"AllocErr",138]],"b":[[52,"impl-Display-for-CollectionAllocErr"],[53,"impl-Debug-for-CollectionAllocErr"],[55,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[56,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[58,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[86,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-SmallVec%3CA%3E"],[88,"impl-IntoIterator-for-%26SmallVec%3CA%3E"]]},\
"swash":{"doc":"Font introspection, complex text shaping and glyph …","t":"ENNDSSDNSDDDNNNNNNNSSSSSNDDDNGDDNSNNNNDSNDSSNGNDNNNSSSNDDEENNDSIGNNNSSNEDNNNDDNNLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLAMLLLMLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLALLALLLLALLMMLLLKLLLLMFFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLLLMMMLLLMCDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNGDDDDEGELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNNLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDDDLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLMLLLLLLLLLLLLMMMLLLLLLLLMMMMLLLLLLLLMLLLLLLLLLLLLMMNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNENNEINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKALLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDDDDNNNNNENNNNRNNNNNNNNNNDNNEDNENNDGNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Action","Adjustment","Attachment","Attributes","BLACK","BOLD","BitmapStrike","Both","CONDENSED","CacheKey","Charmap","ColorPalette","CompatibleFull","Copyright","Dark","DarkBackgroundPalette","Description","Designer","DesignerUrl","EXPANDED","EXTRA_BOLD","EXTRA_CONDENSED","EXTRA_EXPANDED","EXTRA_LIGHT","Family","Feature","FontDataRef","FontRef","Full","GlyphId","GlyphMetrics","Instance","Italic","LIGHT","License","LicenseUrl","Light","LightBackgroundPalette","LocalizedString","MEDIUM","Manufacturer","Metrics","NORMAL","NORMAL","Normal","NormalizedCoord","Oblique","ObliqueAngle","Other","PostScript","PostScriptCid","SEMI_BOLD","SEMI_CONDENSED","SEMI_EXPANDED","SampleText","Setting","Stretch","StringId","Style","SubFamily","Substitution","Synthesis","THIN","TableProvider","Tag","Trademark","TypographicFamily","TypographicSubFamily","ULTRA_CONDENSED","ULTRA_EXPANDED","UniqueId","Usability","Variation","VariationsPostScriptNamePrefix","VendorUrl","Version","Weight","WritingSystem","WwsFamily","WwsSubFamily","action","advance_height","advance_width","alpha_strikes","any","ascent","attributes","average_width","bit_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cap_height","charmap","chars","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","color_palettes","color_strikes","contains","data","data","default","default","default","default","default","default","default","default","default","default_value","descent","embolden","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","features","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_degrees","from_degrees","from_font","from_font","from_gradians","from_index","from_offset","from_percentage","from_radians","from_raw","from_turns","get","get","glyph_count","glyph_count","glyph_metrics","has_italic_variation","has_oblique_variation","has_stretch_variation","has_variations","has_variations","has_vertical_metrics","has_vertical_metrics","has_weight_variation","hash","hash","hash","hash","id","index","index","index","instances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_collection","is_condensed","is_decodable","is_empty","is_empty","is_expanded","is_hidden","is_monospace","is_normal","is_unicode","iter","key","language","language","language_tag","leading","len","len","linear_scale","linear_scale","localized_strings","lsb","map","max_value","max_width","metrics","min_value","name","name","name","name","name_id","name_id","name_id","new","new","new","normalize","normalized_coords","offset","parse","parse","parse","parse","parse","parse_list","parse_list","partial_cmp","partial_cmp","partial_cmp","parts","postscript_name","postscript_name_id","ppem","ppi","proxy","proxy","raw","scale","scale","scale","script","script_tag","shape","skew","stretch","strikeout_offset","stroke_size","style","synthesize","table","table_by_tag","table_by_tag","table_by_tag","tag","tag","tag","tag_from_bytes","tag_from_str_lossy","text","to_degrees","to_degrees","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_percentage","to_raw","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsb","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline_offset","units_per_em","units_per_em","usability","value","value","values","variations","variations","vertical_ascent","vertical_descent","vertical_leading","vertical_origin","weight","writing_systems","x_height","zeno","BitmapStrikes","Chars","ColorPalettes","Features","Fonts","Instances","LocalizedStrings","Variations","WritingSystems","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","find_by_exact_ppem","find_by_id","find_by_largest_ppem","find_by_name","find_by_nearest_ppem","find_by_postscript_name","find_by_tag","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","normalized_coords","nth","nth","nth","nth","nth","nth","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BitmapStrikesProxy","CharmapProxy","MetricsProxy","VariationsProxy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","from","from","from","from","from_font","from_font","from_font","from_font","glyph_count","has_alpha","has_color","into","into","into","into","materialize","materialize","materialize_alpha","materialize_color","materialize_glyph_metrics","materialize_metrics","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","units_per_em","BestFit","Bitmap","ColorBitmap","ColorOutline","ExactSize","Index","LargestSize","Outline","PaletteIndex","Render","ScaleContext","Scaler","ScalerBuilder","Source","StrikeIndex","StrikeWith","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","default","default","default_color","embolden","fmt","fmt","format","from","from","from","from","from","from","has_bitmaps","has_color_bitmaps","has_color_outlines","has_outlines","hint","image","into","into","into","into","into","into","new","new","normalized_coords","offset","outline","render","render_into","scale_bitmap","scale_bitmap_into","scale_color_bitmap","scale_color_bitmap_into","scale_color_outline","scale_color_outline_into","scale_outline","scale_outline_into","size","style","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","variations","with_max_entries","Color","Content","Image","Mask","SubpixelMask","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","content","data","default","default","eq","fmt","from","from","into","into","new","placement","source","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Layer","LayerMut","Outline","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","clear","clone","clone","clone_into","clone_into","color_index","color_index","default","embolden","embolden","from","from","from","get","get_mut","into","into","into","is_color","is_empty","len","new","path","path","path","points","points","points","points_mut","points_mut","to_owned","to_owned","transform","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verbs","verbs","verbs","Direction","LeftToRight","RightToLeft","ShapeContext","Shaper","ShaperBuilder","add_cluster","add_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","cluster","default","direction","eq","features","fmt","from","from","from","from","insert_dotted_circles","into","into","into","into","language","metrics","new","normalized_coords","normalized_coords","retain_ignorables","script","shape_with","size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variations","with_max_entries","Glyph","GlyphCluster","GlyphInfo","advance","advance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","components","data","data","default","default","fmt","fmt","fmt","from","from","from","glyphs","id","info","info","into","into","into","is_complex","is_empty","is_ligature","is_mark","is_simple","source","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","x","y","AI","AL","AL","AN","Adlam","Adlam","AegeanNumbers","Ahom","Ahom","Alaph","AlchemicalSymbols","AlphabeticPresentationForms","Analyze","AnatolianHieroglyphs","AnatolianHieroglyphs","AncientGreekMusicalNotation","AncientGreekNumbers","AncientSymbols","Arabic","Arabic","ArabicExtendedA","ArabicMathematicalAlphabeticSymbols","ArabicPresentationFormsA","ArabicPresentationFormsB","ArabicSupplement","Armenian","Armenian","Arrows","Avestan","Avestan","B","B2","BA","BB","BK","BN","Balinese","Balinese","Bamum","Bamum","BamumSupplement","BasicLatin","BassaVah","BassaVah","Batak","Batak","Bengali","Bengali","Bhaiksuki","Bhaiksuki","BidiClass","Block","BlockElements","Bopomofo","Bopomofo","BopomofoExtended","BoxDrawing","BracketType","Brahmi","Brahmi","Braille","BraillePatterns","Buginese","Buginese","Buhid","Buhid","ByzantineMusicalSymbols","CB","CJ","CJKCompatibility","CJKCompatibilityForms","CJKCompatibilityIdeographs","CJKCompatibilityIdeographsSupplement","CJKRadicalsSupplement","CJKStrokes","CJKSymbolsandPunctuation","CJKUnifiedIdeographs","CJKUnifiedIdeographsExtensionA","CJKUnifiedIdeographsExtensionB","CJKUnifiedIdeographsExtensionC","CJKUnifiedIdeographsExtensionD","CJKUnifiedIdeographsExtensionE","CJKUnifiedIdeographsExtensionF","CJKUnifiedIdeographsExtensionG","CL","CM","CN","CP","CR","CR","CR","CS","CanadianAboriginal","Carian","Carian","CasedLetter","Category","CaucasianAlbanian","CaucasianAlbanian","Chakma","Chakma","Cham","Cham","Cherokee","Cherokee","CherokeeSupplement","ChessSymbols","Chorasmian","Chorasmian","Cjk","Close","ClosePunctuation","ClusterBreak","Codepoint","CombiningDiacriticalMarks","CombiningDiacriticalMarksExtended","CombiningDiacriticalMarksSupplement","CombiningDiacriticalMarksforSymbols","CombiningHalfMarks","Common","CommonIndicNumberForms","ConnectorPunctuation","Control","ControlPictures","Coptic","Coptic","CopticEpactNumbers","CountingRodNumerals","Cuneiform","Cuneiform","CuneiformNumbersandPunctuation","CurrencySymbol","CurrencySymbols","Cypriot","CypriotSyllabary","Cyrillic","Cyrillic","CyrillicExtendedA","CyrillicExtendedB","CyrillicExtendedC","CyrillicSupplement","D","DQ","DalathRish","DashPunctuation","DecimalNumber","Decompose","Deseret","Deseret","Devanagari","Devanagari","DevanagariExtended","Dingbats","DivesAkuru","DivesAkuru","Dogra","Dogra","DominoTiles","Duployan","Duployan","EB","EM","EN","ES","ET","EX","EX","EX","EarlyDynasticCuneiform","EgyptianHieroglyphFormatControls","EgyptianHieroglyphs","EgyptianHieroglyphs","Elbasan","Elbasan","Elymaic","Elymaic","Emoticons","EnclosedAlphanumericSupplement","EnclosedAlphanumerics","EnclosedCJKLettersandMonths","EnclosedIdeographicSupplement","EnclosingMark","Ethiopic","Ethiopic","EthiopicExtended","EthiopicExtendedA","EthiopicSupplement","Extend","FO","FSI","FinalPunctuation","Format","GL","GeneralPunctuation","GeometricShapes","GeometricShapesExtended","Georgian","Georgian","GeorgianExtended","GeorgianSupplement","Glagolitic","Glagolitic","GlagoliticSupplement","Gothic","Gothic","Grantha","Grantha","Greek","GreekExtended","GreekandCoptic","Gujarati","Gujarati","GunjalaGondi","GunjalaGondi","Gurmukhi","Gurmukhi","H2","H3","HL","HL","HY","HalfwidthandFullwidthForms","Han","Hangul","HangulCompatibilityJamo","HangulJamo","HangulJamoExtendedA","HangulJamoExtendedB","HangulSyllables","HanifiRohingya","HanifiRohingya","Hanunoo","Hanunoo","Hatran","Hatran","Hebrew","Hebrew","HighPrivateUseSurrogates","HighSurrogates","Hiragana","Hiragana","ID","IN","IPAExtensions","IS","IdeographicDescriptionCharacters","IdeographicSymbolsandPunctuation","ImperialAramaic","ImperialAramaic","IndicSiyaqNumbers","Inherited","InitialPunctuation","InscriptionalPahlavi","InscriptionalPahlavi","InscriptionalParthian","InscriptionalParthian","JL","JT","JV","Japanese","Javanese","Javanese","JoiningType","KA","Kaithi","Kaithi","KanaExtendedA","KanaSupplement","Kanbun","KangxiRadicals","Kannada","Kannada","Katakana","Katakana","KatakanaPhoneticExtensions","KayahLi","KayahLi","Kharoshthi","Kharoshthi","KhitanSmallScript","KhitanSmallScript","Khmer","Khmer","KhmerSymbols","Khojki","Khojki","Khudawadi","Khudawadi","Korean","L","L","L","LE","LF","LF","LF","LRE","LRI","LRO","LV","LVT","Language","Lao","Lao","Latin","Latin1Supplement","LatinExtendedA","LatinExtendedAdditional","LatinExtendedB","LatinExtendedC","LatinExtendedD","LatinExtendedE","Lepcha","Lepcha","Letter","LetterNumber","LetterlikeSymbols","Limbu","Limbu","LineBreak","LineSeparator","LinearA","LinearA","LinearB","LinearBIdeograms","LinearBSyllabary","Lisu","Lisu","LisuSupplement","LowSurrogates","LowercaseLetter","Lycian","Lycian","Lydian","Lydian","MB","ML","MN","Mahajani","Mahajani","MahjongTiles","Makasar","Makasar","Malayalam","Malayalam","Mandaic","Mandaic","Manichaean","Manichaean","Marchen","Marchen","Mark","MasaramGondi","MasaramGondi","MathSymbol","MathematicalAlphanumericSymbols","MathematicalOperators","MayanNumerals","Medefaidrin","Medefaidrin","MeeteiMayek","MeeteiMayek","MeeteiMayekExtensions","MendeKikakui","MendeKikakui","MeroiticCursive","MeroiticCursive","MeroiticHieroglyphs","MeroiticHieroglyphs","Miao","Miao","MiscellaneousMathematicalSymbolsA","MiscellaneousMathematicalSymbolsB","MiscellaneousSymbols","MiscellaneousSymbolsandArrows","MiscellaneousSymbolsandPictographs","MiscellaneousTechnical","Modi","Modi","ModifierLetter","ModifierSymbol","ModifierToneLetters","Mongolian","Mongolian","MongolianSupplement","Mro","Mro","Multani","Multani","MusicalSymbols","Myanmar","Myanmar","MyanmarExtendedA","MyanmarExtendedB","NKo","NL","NL","NS","NSM","NU","NU","Nabataean","Nabataean","Nandinagari","Nandinagari","NewTaiLue","NewTaiLue","Newa","Newa","Nko","NoBlock","None","None","NonspacingMark","Number","NumberForms","Nushu","Nushu","NyiakengPuachueHmong","NyiakengPuachueHmong","ON","OP","Ogham","Ogham","OlChiki","OlChiki","OldHungarian","OldHungarian","OldItalic","OldItalic","OldNorthArabian","OldNorthArabian","OldPermic","OldPermic","OldPersian","OldPersian","OldSogdian","OldSogdian","OldSouthArabian","OldSouthArabian","OldTurkic","OldTurkic","Open","OpenPunctuation","OpticalCharacterRecognition","Oriya","Oriya","OrnamentalDingbats","Osage","Osage","Osmanya","Osmanya","Other","OtherLetter","OtherNumber","OtherPunctuation","OtherSymbol","OttomanSiyaqNumbers","PDF","PDI","PO","PP","PR","PahawhHmong","PahawhHmong","Palmyrene","Palmyrene","ParagraphSeparator","PauCinHau","PauCinHau","PhagsPa","Phagspa","PhaistosDisc","Phoenician","Phoenician","PhoneticExtensions","PhoneticExtensionsSupplement","PlayingCards","PrivateUse","PrivateUseArea","Properties","PsalterPahlavi","PsalterPahlavi","Punctuation","QU","R","R","RI","RI","RI","RLE","RLI","RLO","Rejang","Rejang","RumiNumeralSymbols","Runic","Runic","S","SA","SG","SM","SP","SQ","SY","Samaritan","Samaritan","Saurashtra","Saurashtra","Script","Separator","Sharada","Sharada","Shavian","Shavian","ShorthandFormatControls","Siddham","Siddham","SignWriting","Simplified","Sinhala","Sinhala","SinhalaArchaicNumbers","SmallFormVariants","SmallKanaExtension","Sogdian","Sogdian","SoraSompeng","SoraSompeng","Soyombo","Soyombo","SpaceSeparator","SpacingMark","SpacingModifierLetters","Specials","Sundanese","Sundanese","SundaneseSupplement","SuperscriptsandSubscripts","SupplementalArrowsA","SupplementalArrowsB","SupplementalArrowsC","SupplementalMathematicalOperators","SupplementalPunctuation","SupplementalSymbolsandPictographs","SupplementaryPrivateUseAreaA","SupplementaryPrivateUseAreaB","Surrogate","SuttonSignWriting","SylotiNagri","SylotiNagri","Symbol","SymbolsandPictographsExtendedA","SymbolsforLegacyComputing","Syriac","Syriac","SyriacSupplement","T","T","Tagalog","Tagalog","Tagbanwa","Tagbanwa","Tags","TaiLe","TaiLe","TaiTham","TaiTham","TaiViet","TaiViet","TaiXuanJingSymbols","Takri","Takri","Tamil","Tamil","TamilSupplement","Tangut","Tangut","TangutComponents","TangutSupplement","Telugu","Telugu","Thaana","Thaana","Thai","Thai","Tibetan","Tibetan","Tifinagh","Tifinagh","Tirhuta","Tirhuta","TitlecaseLetter","Traditional","TransportandMapSymbols","U","UNICODE_VERSION","Ugaritic","Ugaritic","Unassigned","UnifiedCanadianAboriginalSyllabics","UnifiedCanadianAboriginalSyllabicsExtended","Unknown","UppercaseLetter","V","Vai","Vai","VariationSelectors","VariationSelectorsSupplement","VedicExtensions","VerticalForms","WJ","WS","WSegSpace","Wancho","Wancho","WarangCiti","WarangCiti","WordBreak","XX","XX","XX","Yezidi","Yezidi","Yi","YiRadicals","YiSyllables","YijingHexagramSymbols","ZW","ZWJ","ZWJ","ZWJ","ZanabazarSquare","ZanabazarSquare","analyze","bidi_class","bidi_class","bidi_class","block","block","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bracket_type","category","category","category","chars","cjk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closing_bracket","cluster","cluster_break","cluster_break","cluster_break","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","combining_class","combining_class","combining_class","compose","decompose","decompose_compatible","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_opentype","from_opentype","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_close_bracket","is_complex","is_emoji","is_emoji","is_emoji","is_extended_pictographic","is_extended_pictographic","is_extended_pictographic","is_joined","is_open_bracket","joining_type","joining_type","joining_type","language","line_break","line_break","line_break","mask","mirror","name","name","needs_bidi_resolution","needs_resolution","next","next","opening_bracket","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","properties","region","script","script","script","script","to_opentype","to_opentype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","word_break","word_break","word_break","Anusvara","Base","Boundary","Char","CharCluster","CharInfo","ClusterInfo","Color","Complete","Control","Default","Discard","Emoji","Halant","Keep","Kinzi","Line","MAX_CLUSTER_SIZE","Mandatory","Mark","MedialRa","Newline","NoBreakSpace","None","None","None","Other","Other","Parser","Pref","Reph","ShapeClass","SourceRange","Space","Status","Tab","Text","Token","UserData","VBlw","VMPre","VPre","Vs","Whitespace","Word","Zwj","Zwnj","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary","boundary","ch","ch","chars","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","contributes_to_shaping","data","data","default","default","default","default","default","default","deref","emoji","end","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyph_id","ignorable","info","info","into","into","into","into","into","into","into","into","into","into","into","into","is_boundary","is_broken","is_emoji","is_empty","is_space_or_nbsp","is_whitespace","joining_type","len","map","mapped_chars","new","new","new","next","offset","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","properties","range","shape_class","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","whitespace"],"q":[[0,"swash"],[528,"swash::iter"],[668,"swash::proxy"],[729,"swash::scale"],[828,"swash::scale::image"],[863,"swash::scale::outline"],[921,"swash::shape"],[980,"swash::shape::cluster"],[1035,"swash::text"],[1932,"swash::text::cluster"],[2170,"core::clone"],[2171,"core::marker"],[2172,"core::cmp"],[2173,"core::default"],[2174,"core::ops::function"],[2175,"core::cmp"],[2176,"core::fmt"],[2177,"core::hash"],[2178,"core::convert"],[2179,"core::iter::traits::iterator"],[2180,"alloc::string"],[2181,"core::result"],[2182,"core::any"],[2183,"core::iter::traits::collect"],[2184,"zeno::mask"],[2185,"zeno::geometry"],[2186,"zeno::style"],[2187,"zeno::geometry"],[2188,"zeno::geometry"],[2189,"core::ops::function"]],"d":["Modification performed by a feature.","Adjusts the position of one or more glyphs such as in …","Attaches one glyph to another such as in accent mark …","Primary attributes for font classification: stretch, …","","","Collection of bitmaps of a specific size and format.","Usable with both light and dark backgrounds.","","Uniquely generated value for identifying and caching fonts.","Maps characters to nominal glyph identifiers.","Collection of colors.","","","Usable with dark backgrounds.","","","","","","","","","","","Typographic rule that produces modifications to a sequence …","Reference to the content of a font file.","Reference to a font.","","Glyph identifier.","Glyph advances, side bearings and vertical origins.","Named instance in a variable font.","","","","","Usable with light backgrounds.","","Represents a single localized string in a font.","","","Global font metrics.","","","","Normalized variation coordinate in 2.14 fixed point format.","","Angle of an oblique style in degrees from -90 to 90.","","","","","","","","Setting combining a tag and a value for features and …","Visual width of a font– a relative change from the …","Identifier for well-known localized strings in a font.","Visual style or ‘slope’ of a font.","","Replaces one or more glyphs such as in ligation.","Synthesis suggestions for mismatched font attributes.","","Source that can provide table data by tag.","Four byte tag value.","","","","","","","Theme of a palette with respect to background color.","Axis of variation in a variable font.","","","","Visual weight class of a font on a scale from 1 to 1000.","Script, language and associated typographic features …","","","Returns the action of the feature.","Returns the vertical advance for the specified glyph.","Returns the horizontal advance for the specified glyph.","Returns an iterator over the alpha bitmap strikes for the …","Returns true if any synthesis suggestions are available.","Distance from the baseline to the top of the alignment box.","Returns the primary attributes for the font.","Average width of all non-zero characters in the font.","Returns the bit depth of the strike.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Distance from the baseline to the top of a typical English …","Returns the character map for the font.","Returns an iterator over the sequence of characters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the color palettes for the font.","Returns an iterator over the color bitmap strikes for the …","Returns true if the specified glyph is covered by the …","Returns the underlying data.","Full content of a file containing the font.","","","","","","","","","","Returns the default value of the variation.","Distance from the baseline to the bottom of the alignment …","Returns true if the scaler should apply a faux bold.","Invokes the specified closure with all codepoint/glyph …","","","","","","","","","","","","Returns an iterator over the features provided by the …","Returns an iterator over the features supported by a font.","","","","","","","","","","","","","","","","","","Returns an iterator over the available fonts.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new oblique angle from degrees.","Creates a new oblique style with the specified angle in …","Extracts the attributes from the specified font.","Creates a character map from the specified font.","Creates a new oblique angle from gradians.","Creates a new font from the specified font data and the …","Creates a new font from the specified font data and offset …","Creates a stretch attribute from a percentage. The value …","Creates a new oblique angle from radians.","","Creates a new oblique angle from turns.","Returns the font at the specified index.","Returns the color for the specified entry in RGBA order.","Returns the number of glyphs in the font.","Number of glyphs in the font.","Returns glyph metrics for the font and the specified …","Returns true if the font has a variation for the italic …","Returns true if the font has a variation for the oblique …","Returns true if the font has a variation for the stretch …","Returns true if the font has variations corresponding to …","Returns true if variations are supported.","Returns true if the font provides canonical vertical glyph …","True if the font provides canonical vertical metrics.","Returns true if the font has a variation for the weight …","","","","","Returns the string identifier.","Returns the index of the palette.","Returns the index of the variation.","Returns the index of the instance.","Returns an iterator over the named instances for the font.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the data represents a font collection.","Returns true if the stretch is condensed (less than …","Returns true if the string can be decoded.","Returns true if there are no available fonts.","Returns whether this palette is empty.","Returns true if the stretch is expanded (greater than …","Returns true if the variation should be hidden from users.","True if the font is monospace.","Returns true if the stretch is normal.","Returns true if the encoding for the string is unicode.","Collection of various iterators over metadata contained in …","Key for identifying a font in various caches.","Returns the language for the writing system.","Returns the language of the string.","Returns the OpenType language tag for the writing system.","Recommended additional spacing between lines.","Returns the number of available fonts.","Returns the number of color entries in the palette.","Creates a new set of metrics scaled by the specified …","Creates a new set of metrics scaled by the specified …","Returns an iterator over the localized strings for the …","Returns the left side bearing for the specified glyph.","Returns a nominal glyph identifier for the specified …","Returns the maximum value of the variation.","Maximum advance width of all characters in the font.","Returns metrics for the font and the specified normalized …","Returns the minimum value of the variation.","Returns the name of the feature, if available.","Returns the name for the palette, optionally for a …","Returns the name for the variation, optionally for a …","Returns the name for the instance, optionally for a …","Returns the name identifier for the palette, if available.","Returns the name identifier for the variation.","Returns the name identifier for the instance.","Creates new font attributes from the specified stretch, …","Generates a new cache key.","Creates font data from the specified bytes. Returns <code>None</code> …","Computes a normalized coordinate for the specified value.","Returns an iterator over the normalized coordinates for …","Offset to the table directory of the font.","Parses a style from a CSS style value.","Parses a CSS style font weight attribute.","Parses the stretch from a CSS style keyword or a …","Parses a variation setting according to the CSS grammar.   …","Parses a feature setting according to the CSS grammar.","Parses a comma separated list of variation settings …","Parses a comma separated list of feature settings …","","","","Returns a tuple containing all attributes.","Returns the PostScript name for the instance, optionally …","Returns the PostScript name identifier for the instance.","Returns the size of the strike in pixels per em.","Returns the device pixel density for which the strike was …","Proxies used to efficiently rematerialize metadata.","Returns the associated proxy.","Returns the raw value of the stretch attribute.","Scaling, hinting and rasterization of visual glyph …","Creates a new set of metrics scaled for the specified …","Creates a new set of metrics scaled for the specified …","Returns the script for the writing system.","Returns the OpenType script tag for the writing system.","Mapping complex text to a sequence of positioned glyphs.","Returns a skew angle for faux italic/oblique, if requested.","Returns the stretch attribute.","Recommended distance from the baseline to the top of a …","Recommended thickness of an underline or strikeout stroke.","Returns the style attribute.","Returns a synthesis analysis based on the requested …","Returns the table data for the specified tag.","Returns the table for the specified tag.","","","Returns the feature tag.","Returns the tag that identifies the variation.","The tag that identifies the setting.","Creates a tag from four bytes.","Creates a tag from the first four bytes of a string, …","Character properties and textual analysis.","Returns the oblique angle in degrees.","Returns the angle of the style in degrees.","","","","","","","","","","","","","","","","","","","","","","","","Converts the stretch value to a percentage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the top side bearing for the specified glyph.","","","","","","","","","","","","","","","","","","","","","","","","Recommended distance from the baseline to the top of an …","Returns the number of font design units per em unit.","Number of font design units per em unit.","Returns the theme usability of the palette, if available.","Returns the underlying value of the key.","The value for the setting.","Returns an iterator over the variation values of the …","Returns the variations that should be applied to match the …","Returns an iterator over the variations for the font.","Distance from the vertical center baseline to the right …","Distance from the vertical center baseline to the left …","Recommended additional spacing between columns.","Returns the vertical origin for the specified glyph id.","Returns the weight attribute.","Returns an iterator over writing systems supported by the …","Distance from the baseline to the top of the lowercase “x…","","Iterator over a collection of bitmap strikes.","Iterator over the characters in a localized string.","Iterator over a collection of color palettes.","Iterator over a collection of typographic features.","Iterator over a collection of fonts.","Iterator over a collection of named variation instances.","Iterator over a collection of localized strings.","Iterator over a collection of font variations.","Iterator over a collection of writing systems.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Searches for a strike that exactly matches the specified …","Searches for a string with the specified identifier, and …","Searches for a strike with the largest size that contains …","Searches for an instance with the specified name.","Searches for a strike that matches the specified size and …","Searches for an instance with the specified PostScript …","Searches for a variation with the specified tag.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the set of normalized coordinates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proxy for rematerializing strike collections.","Proxy for rematerializing a character map.","Proxy for rematerializing metrics.","Proxy for rematerializing variations collections.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates character map proxy from the specified font.","Creates a metrics proxy for the specified font.","Creates strike collection proxy from the specified font.","Creates a variations proxy from the specified font.","Returns the number of glyphs in the font.","Returns true if the font has alpha bitmap strikes.","Returns true if the font has color bitmap strikes.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Materializes a character map from the specified font. This …","Materializes variations from the specified font. This …","Materializes an alpha strike iterator for the specified …","Materializes a color strike iterator for the specified …","Materializes glyph metrics for the specified font and …","Materializes font metrics for the specified font and …","","","","","","","","","","","","","","","","","Returns the number of font design units per em unit.","Load a bitmap of the best available size.","Embedded alpha bitmaps.","Embedded color bitmaps.","Layered color scalable outlines.","Load a bitmap only if the exact size is available.","Load a bitmap from the specified strike.","Loads a bitmap of the largest size available.","Scalable outlines.","Index of a color palette.","Builder type for rendering a glyph into an image.","Context that manages caches and scratch buffers for …","Scales outline and bitmap glyphs.","Builder for configuring a scaler.","Glyph sources for the renderer.","Index of a bitmap strike.","Bitmap strike selection mode.","","","","","","","","","","","","","Builds a scaler for the current configuration.","Creates a new builder for constructing a scaler with this …","","","","","","","Specifies an RGBA color to use when rasterizing layers of …","Specifies the strength of a faux bold transform to apply …","","","Specifies the target format for rasterizing an outline. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if alpha bitmaps are available.","Returns true if color bitmaps are available.","Returns true if scalable color glyph outlines are …","Returns true if scalable glyph outlines are available.","Specifies whether to apply hinting to outlines. The …","Rendered glyph image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new scaling context.","Creates a new builder for configuring rendering using the …","Specifies the variation settings in terms of normalized …","Specifies an additional offset to apply when rasterizing …","Glyph outline.","Renders the specified glyph using the current …","Renders the specified glyph using the current …","Scales a bitmap for the specified glyph and mode.","Scales a bitmap for the specified glyph and mode into the …","Scales a color bitmap for the specified glyph and mode.","Scales a color bitmap for the specified glyph and mode …","Scales a color outline for the specified glyph.","Scales a color outline for the specified glyph into the …","Scales an outline for the specified glyph.","Scales an outline for the specified glyph into the …","Specifies the font size in pixels per em. The default …","Specifies the path style to use when rasterizing an …","","","Specifies a transformation matrix to apply when …","","","","","","","","","","","","","","","","","","","Adds variation settings to the scaler.","Creates a new scaling context with the specified maximum …","32-bit RGBA bitmap.","Content of a scaled glyph image.","Scaled glyph image.","8-bit alpha mask.","32-bit RGBA subpixel mask.","","","","","Resets the image to a default state.","","","","","Content of the image.","Raw image data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty scaled image.","Offset and size of the image.","Source of the image.","","","","","","","","","Reference to a layer in a scaled outline.","Mutable reference to a layer in a scaled outline.","Scaled glyph outline represented as a collection of layers …","","","","","","","Computes the bounding box of the layer.","Computes the bounding box of the outline.","Computes the bounding box of the layer.","Clears the outline.","","","","","Returns the color index for the layer.","Returns the color index for the layer.","","Applies a faux bold to this layer with the specified …","Applies a faux bold to the outline with the specified …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the layer at the specified index.","Returns a mutable reference to the layer at the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the outline has color layers.","Returns true if there are no layers in the outline.","Returns the number of layers in the outline.","Creates a new empty outline.","Returns path data for the layer.","Returns path data for the outline.","Returns path data for the layer.","Returns the sequence of points for the layer.","Returns a reference to the sequence of points in the …","Returns the sequence of points for the layer.","Returns a mutable reference the sequence of points for the …","Returns a mutable reference to the sequence of points in …","","","Transforms this layer by the specified matrix.","Transforms the outline by the specified matrix.","","","","","","","","","","Returns the sequence of verbs for the layer.","Returns a reference to the sequence of verbs in the …","Returns the sequence of verbs for the layer.","Text direction.","","","Context that manages caches and transient buffers for …","Maps character clusters to positioned glyph clusters …","Builder for configuring a shaper.","Adds a character cluster to the shaper.","Adds a string to the shaper.","","","","","","","","","Builds a shaper for the current configuration.","Creates a new builder for constructing a shaper with this …","","","Glyph cluster modeling– output from the shaper.","","Specifies the text direction. The default value is …","","Adds feature settings to the shaper.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Specifies whether to insert dotted circles for broken …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies the language. The default value is <code>None</code>.","Returns the current font metrics in use by the shaper.","Creates a new shaping context.","Specifies the variation settings in terms of normalized …","Returns the current normalized variation coordinates in …","Specifies whether characters defined as default ignorable …","Specifies the script. The default value is <code>Script::Latin</code>.","Shapes the text and invokes the specified closure with each","Specifies the font size in pixels per em. The default …","","","","","","","","","","","","","","Adds variation settings to the shaper.","Creates a new shaping context with the specified maximum …","Glyph identifier and positioning information as a result …","Collection of glyphs and associated metadata corresponding …","Information for a glyph.","Computes the full advance width or height of the cluster.","Advance width or height.","","","","","","","","","","","","","If the cluster is a ligature, this contains the source …","Arbitrary user data.","Arbitrary user data– taken from the initial character of …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sequence of glyphs for the cluster. May be empty for …","Glyph identifier.","Glyph flags.","Information about the textual content of the cluster.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the cluster is complex– that is if it …","Returns true if the cluster is empty. Empty clusters still …","Returns true if the cluster corresponds to multiple source …","Returns true if the glyph is an attached mark.","Returns true if the cluster contains a single glyph. Note …","Full source range of the cluster in original units …","","","","","","","","","","","","","Horizontal offset.","Vertical offset.","","","","","","","","","","","","","Iterator that yields Unicode properties and boundary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Property for the bidirectional algorithm.","Unicode block property.","","","","","","Bracket type of a character.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unicode general category property.","","","","","","","","","","","","","Chinese, Japanese and Korean languages.","A closing bracket with the associated opening bracket.","","Property for the cluster breaking algorithm.","Trait that exposes Unicode properties for the <code>char</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decomposition of a character.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joining type property.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representation of a language and its associated script and …","","","","","","","","","","","","","","","","","","Property for the line breaking algorithm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not a bracket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An opening bracket with the associated closing bracket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compact, constant time reference to Unicode properties for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unicode script property.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the Unicode Character Database used to …","","","","","","","","","","","","","","","","","","","","","","Property for the word breaking algorithm.","","","","","","","","","","","","","","","","Returns an iterator yielding unicode properties and …","Returns the bidirectional type of the character.","Returns the bidirectional type of the character.","Returns the bidirectional type of the character.","Returns the unicode block that contains the character.","Returns the unicode block that contains the character.","Returns the unicode block that contains the character.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bracket type of the character.","Returns the category of the character.","Returns the category of the character.","Returns the category of the character.","Returns the sequence of characters that represent the …","Returns the CJK language.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the character is an opening bracket, returns its …","Script aware cluster segmentation.","Returns the cluster break property for the character.","Returns the cluster break property for the character.","Returns the cluster break property for the character.","","","","","","","","","Returns the canonical combining class of the character.","Returns the canonical combining class of the character.","Returns the canonical combining class of the character.","Returns the composition of two characters, if any.","Returns the canonical decomposition of the character.","Returns the compatiblity decomposition of the character.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the language associated with the specified …","Returns the script associated with the specified OpenType …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the character is a closing bracket.","Returns true if the script requires complex shaping.","Returns true if the character is an emoji.","Returns true if the character is an emoji.","Returns true if the character is an emoji.","Returns true if the character is an extended pictographic …","Returns true if the character is an extended pictographic …","Returns true if the character is an extended pictographic …","Returns true if the script has cursive joining.","Returns true if the character is an opening bracket.","Returns the joining type of the character.","Returns the joining type of the character.","Returns the joining type of the character.","Returns the language component.","Returns the line break property for the character.","Returns the line break property for the character.","Returns the line break property for the character.","Returns the bidi class as a 32 bit bitmask.","Returns the mirror of the character, if any.","Returns the name of the language.","Returns the name of the script.","Returns true if the analysis indicates that bidi …","Returns true if the presence of this bidi class requires …","","","If the character is a closing bracket, returns its opening …","Parses a language tag.","","","","","","","","","Returns the codepoint properties.","Returns the region component.","Returns the script to which the character belongs.","Returns the script to which the character belongs.","Returns the script component.","Returns the script to which the character belongs.","Returns the associated OpenType language tag.","Returns the script as an OpenType tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the word break property for the character.","Returns the word break property for the character.","Returns the word break property for the character.","Anusvara class.","Base character.","Boundary type of a character or cluster.","Character output from the cluster parser.","Character cluster; output from the parser and input to the …","Information about a character including unicode properties …","Information about a cluster including content properties …","Emoji with color presentation.","Complete mapping.","Control character.","Emoji with default presentation.","Mapping should be skipped.","Presentation mode for an emoji cluster.","Halant modifier.","The best mapping so far.","Myanmar three character prefix.","Potential line break.","The maximum number of characters in a single cluster.","Mandatory line break.","Mark character.","Medial consonant Ra.","Newline (CR, LF, or CRLF).","Non-breaking space (U+00A0).","Not an emoji.","Not a space.","Not a boundary.","Other character.","Other space.","Parser that accepts a sequence of characters and outputs …","Pre-base form.","Reph form.","Shaping class of a character.","Source range of a cluster in code units.","Standard space.","Iterative status of mapping a character cluster to nominal …","Horizontal tab.","Emoji with text presentation.","Character input to the cluster parser.","Artibrary user data that can be associated with a …","Below base dependent vowel.","Pre-base vowel modifier.","Pre-base dependent vowel.","Variation selector.","Whitespace content of a cluster.","Start of a word.","Zero width joiner.","Zero width non-joiner.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the boundary state.","Returns the boundary state of the cluster.","The character.","The character.","Returns the sequence of characters in the cluster.","Resets the cluster to the intial empty state.","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the character should be considered when mapping …","Arbitrary user data.","Arbitrary user data.","","","","","","","","Returns the emoji presentation mode of the cluster.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Nominal glyph identifier.","True if the character is ignorable.","Returns the cluster information.","Character information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the cluster is a boundary.","Returns true if the cluster is missing an appropriate base …","Returns true if the cluster is an emoji.","Returns true if the cluster is empty.","Returns true for space or no break space.","Returns true if the cluster is whitespace.","Joining type of the character.","Length of the character in code units.","Applies a nominal glyph identifier mapping to the cluster, …","Returns the currently mapped sequence of characters in the …","Creates a new cluster parser for the specified script and …","Creates a new empty cluster.","Creates new character information from Unicode properties …","Parses the next cluster.","Offset of the character in code units.","Offset of the character in code units.","","","","","Returns the unicode properties for the character.","Returns the source range for the cluster in code units.","Shaping class of the character.","","","","","","","","","","","","","Converts the source range into a <code>usize</code> range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the primary user data for the cluster.","Returns the whitespace content of the cluster."],"i":[0,2,2,0,18,18,0,25,19,0,0,0,29,29,25,29,29,29,29,19,18,19,19,18,29,0,0,0,29,0,0,0,17,18,29,29,25,29,0,18,29,0,18,19,17,0,17,0,29,29,29,18,19,19,29,0,0,0,0,29,2,0,18,0,0,29,29,29,19,19,29,0,0,29,29,29,0,0,29,29,1,3,3,6,8,23,6,23,11,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,23,6,14,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,18,19,20,6,6,11,22,6,10,16,17,18,19,8,20,23,26,30,23,8,13,10,16,17,18,19,8,20,2,25,26,29,21,6,10,10,16,17,17,18,18,19,19,20,2,23,25,26,26,29,14,22,10,10,10,10,10,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,26,26,26,26,26,26,11,29,14,30,31,16,17,10,13,16,6,6,19,16,29,16,22,24,3,23,6,10,10,10,10,3,3,23,10,10,18,19,20,14,24,30,31,6,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,22,14,22,19,14,22,24,19,30,23,19,14,0,6,21,14,21,23,22,24,23,3,6,3,13,30,23,6,30,1,24,30,31,24,30,31,10,20,22,30,31,6,17,18,19,26,26,26,26,18,19,20,10,31,31,11,11,0,13,19,0,23,3,21,21,0,8,10,23,23,10,10,6,125,6,6,1,30,26,0,0,0,16,17,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,19,29,10,17,18,19,26,14,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,3,10,16,17,18,19,8,20,13,21,1,2,22,6,23,3,24,25,26,11,29,14,30,31,23,3,23,24,20,26,31,8,6,23,23,23,3,10,6,23,0,0,0,0,0,0,0,0,0,0,44,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,66,39,34,7,56,15,65,54,66,39,34,7,56,15,65,54,7,56,7,54,7,54,65,44,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,44,34,7,56,65,54,44,66,39,34,7,56,15,65,54,65,44,34,7,56,65,54,44,34,7,56,65,54,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,44,66,39,34,7,56,15,65,54,0,0,0,0,59,68,69,70,59,68,69,70,59,68,69,70,59,68,69,70,59,68,59,59,68,69,70,59,68,69,70,68,69,69,59,68,69,70,59,70,69,69,68,68,59,68,69,70,59,68,69,70,59,68,69,70,59,68,69,70,68,74,75,75,75,74,74,74,75,0,0,0,0,0,0,0,0,73,71,72,76,74,75,73,71,72,76,74,75,71,73,74,75,74,75,73,75,76,76,74,75,76,73,71,72,76,74,75,72,72,72,72,71,0,73,71,72,76,74,75,73,76,71,76,0,76,76,72,72,72,72,72,72,72,72,71,76,74,75,76,73,71,72,76,74,75,73,71,72,76,74,75,73,71,72,76,74,75,71,73,83,0,0,83,83,83,79,83,79,79,83,79,83,79,79,79,83,79,83,83,83,79,83,79,79,79,79,83,79,83,79,83,79,83,79,0,0,0,84,80,86,84,80,86,84,80,86,80,80,86,80,86,84,86,80,84,80,84,80,86,80,80,84,80,86,80,80,80,80,84,80,86,84,80,86,84,80,80,86,84,80,84,80,86,84,80,86,84,80,86,84,80,86,0,94,94,0,0,0,90,90,93,92,90,94,93,92,90,94,92,93,94,94,0,93,92,94,92,94,93,92,90,94,92,93,92,90,94,92,90,93,92,90,92,92,90,92,94,93,92,90,94,93,92,90,94,93,92,90,94,92,93,0,0,0,95,97,96,97,95,96,97,95,96,97,95,96,97,95,95,97,95,96,97,96,97,95,96,97,95,95,97,97,95,96,97,95,95,95,95,96,95,95,96,97,95,96,97,95,96,97,95,96,97,95,97,97,108,99,108,99,101,60,101,101,60,110,101,101,0,101,60,101,101,101,101,60,101,101,101,101,101,101,60,101,101,60,99,108,108,108,108,99,101,60,101,60,101,101,101,60,101,60,101,60,101,60,0,0,101,101,60,101,101,0,101,60,60,101,101,60,101,60,101,108,108,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,108,108,107,108,107,108,109,99,60,101,60,103,0,101,60,101,60,101,60,101,60,101,101,101,60,0,102,103,0,0,101,101,101,101,101,60,101,103,103,101,101,60,101,101,101,60,101,103,101,60,101,101,60,101,101,101,101,110,109,110,103,103,0,101,60,101,60,101,101,101,60,101,60,101,101,60,108,108,99,99,99,107,108,109,101,101,101,60,101,60,101,60,101,101,101,101,101,103,101,60,101,101,101,109,109,99,103,103,108,101,101,101,101,60,101,101,101,60,101,101,60,101,60,60,101,101,101,60,101,60,101,60,108,108,108,109,108,101,60,60,101,101,101,101,101,101,60,101,60,101,60,101,60,101,101,101,60,108,108,101,108,101,101,101,60,101,60,103,101,60,101,60,108,108,108,106,101,60,0,109,101,60,101,101,101,101,101,60,101,60,101,101,60,101,60,101,60,101,60,101,101,60,101,60,106,99,107,110,109,107,108,109,99,99,99,107,107,0,101,60,60,101,101,101,101,101,101,101,101,60,103,103,101,101,60,0,103,101,60,60,101,101,101,60,101,101,103,101,60,101,60,109,109,109,101,60,101,101,60,101,60,101,60,101,60,101,60,103,101,60,103,101,101,101,101,60,101,60,101,101,60,101,60,101,60,101,60,101,101,101,101,101,101,101,60,103,103,101,101,60,101,101,60,101,60,101,101,60,101,101,101,108,109,108,99,108,109,101,60,101,60,101,60,101,60,60,101,106,102,103,103,101,101,60,101,60,99,108,101,60,101,60,101,60,101,60,101,60,101,60,101,60,101,60,101,60,101,60,102,103,101,101,60,101,101,60,101,60,103,103,103,103,103,101,99,99,108,107,108,101,60,101,60,103,101,60,60,101,101,101,60,101,101,101,103,101,0,101,60,103,108,99,110,107,108,109,99,99,99,101,60,101,101,60,99,108,108,107,108,109,108,101,60,101,60,0,103,101,60,101,60,101,101,60,60,106,101,60,101,101,101,101,60,101,60,101,60,103,103,101,101,101,60,101,101,101,101,101,101,101,101,101,101,103,101,101,60,103,101,101,101,60,101,107,110,101,60,101,60,101,101,60,101,60,101,60,101,101,60,101,60,101,101,60,101,101,101,60,101,60,101,60,101,60,101,60,101,60,103,106,101,110,0,101,60,103,101,101,60,103,107,101,60,101,101,101,101,108,99,109,101,60,101,60,0,107,108,109,101,60,60,101,101,101,108,107,108,109,101,60,0,126,126,100,126,126,100,98,104,106,55,100,102,103,101,60,99,107,108,109,110,98,104,106,55,100,102,103,101,60,99,107,108,109,110,126,126,126,100,104,55,98,104,106,55,100,102,103,101,60,99,107,108,109,110,98,104,106,55,100,102,103,101,60,99,107,108,109,110,126,0,126,126,100,103,101,60,99,107,108,109,110,126,126,100,126,126,126,100,106,55,100,102,103,101,60,99,107,108,109,110,106,55,55,102,103,101,60,99,107,108,109,110,98,104,106,55,100,100,100,100,100,100,100,102,103,101,60,99,107,108,109,110,55,60,106,103,101,60,99,107,108,109,110,98,104,106,55,100,102,103,101,60,99,107,108,109,110,98,104,100,60,126,126,100,126,126,100,60,100,126,126,100,55,126,126,100,99,126,55,60,98,99,98,104,126,55,103,101,60,99,107,108,109,110,126,55,126,126,55,100,55,60,98,104,106,55,100,102,103,101,60,99,107,108,109,110,55,98,104,106,55,100,102,103,101,60,99,107,108,109,110,98,104,106,55,100,102,103,101,60,99,107,108,109,110,98,104,106,55,100,102,103,101,60,99,107,108,109,110,126,126,100,115,115,0,0,0,0,0,118,116,115,118,116,0,115,116,115,112,0,112,115,115,119,119,118,119,112,115,119,0,115,115,0,0,119,0,119,118,0,0,115,115,115,115,0,112,115,115,122,114,115,91,116,117,111,113,118,119,120,112,122,114,115,91,116,117,111,113,118,119,120,112,111,113,114,120,91,91,114,115,91,116,117,111,113,118,119,120,112,114,115,91,116,117,111,113,118,119,120,112,115,118,119,112,114,114,120,114,115,91,111,113,120,111,113,117,115,116,111,113,118,119,120,112,114,115,116,117,117,113,118,119,112,122,114,115,91,116,117,111,111,111,111,113,118,119,120,112,114,114,91,120,122,114,115,91,116,117,111,113,118,119,120,112,113,113,113,91,119,113,114,120,91,91,122,91,111,122,114,120,115,118,119,112,111,91,114,117,114,115,91,116,117,111,113,118,119,120,112,117,117,122,114,115,91,116,117,111,113,118,119,120,112,122,114,115,91,116,117,111,113,118,119,120,112,122,114,115,91,116,117,111,113,118,119,120,112,91,113],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,4],5],[[3,4],5],[6,7],[8,9],0,[6,10],0,[11,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,13],[14,15],[10,10],[16,16],[17,17],[18,18],[19,19],[8,8],[20,20],[13,13],[21,21],[1,1],[2,2],[22,22],[6,6],[23,23],[3,3],[24,24],[25,25],[[[26,[-1]]],[[26,[-1]]],[27,28]],[11,11],[29,29],[14,14],[30,30],[31,31],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[18,18],33],[[19,19],33],[[20,20],33],[6,34],[6,7],[[11,4],9],[22,[[35,[12]]]],0,[[],10],[[],16],[[],17],[[],18],[[],19],[[],8],[[],20],[[],23],[[],[[26,[-1]]],[36,28]],[30,5],0,[8,9],[[13,-1],32,37],[[10,10],9],[[16,16],9],[[17,17],9],[[18,18],9],[[19,19],9],[[8,8],9],[[20,20],9],[[2,2],9],[[25,25],9],[[[26,[-1]],[26,[-1]]],9,[28,38]],[[29,29],9],[21,39],[6,39],[[10,40],41],[[10,40],41],[[16,40],41],[[17,40],41],[[17,40],41],[[18,40],41],[[18,40],41],[[19,40],41],[[19,40],41],[[20,40],41],[[2,40],41],[[23,40],41],[[25,40],41],[[[26,[-1]],40],41,[42,28]],[[[26,[-1]],40],41,[28,43]],[[29,40],41],[[14,40],41],[22,44],[[[32,[19,18,17]]],10],[32,10],[-1,-1,[]],[17,10],[19,10],[18,10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[32,[[45,[12]],-1]]],[[26,[-1]]],28],[[[32,[46,-1]]],[[26,[-1]]],28],[[[32,[47,-1]]],[[26,[-1]]],28],[[[32,[[45,[12]],-1]]],[[26,[-1]]],28],[[[32,[46,-1]]],[[26,[-1]]],28],[[[32,[47,-1]]],[[26,[-1]]],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,16],[5,17],[6,10],[6,13],[5,16],[[[35,[12]],48],[[49,[6]]]],[[[35,[12]],50],[[49,[6]]]],[5,19],[5,16],[51,29],[5,16],[[22,48],[[49,[6]]]],[[24,51],[[45,[12]]]],[3,51],0,[[6,[35,[52]]],3],[10,9],[10,9],[10,9],[10,9],[3,9],[3,9],0,[10,9],[[10,-1],32,53],[[18,-1],32,53],[[19,-1],32,53],[[20,-1],32,53],[14,29],[24,51],[30,48],[31,48],[6,54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22],[14],[22,9],[19,9],[14,9],[22,9],[24,9],[19,9],[30,9],0,[19,9],[14,9],0,0,[21,[[49,[55]]]],[14,47],[21,46],0,[22,48],[24,51],[[23,5],23],[[3,5],3],[6,56],[[3,4],5],[[13,-1],4,[[57,[50]]]],[30,5],0,[[6,[35,[52]]],23],[30,5],[1,[[49,[47]]]],[[24,[49,[47]]],[[49,[14]]]],[[30,[49,[47]]],[[49,[14]]]],[[31,[49,[47]]],[[49,[14]]]],[24,[[49,[29]]]],[30,29],[31,29],[[19,18,17],10],[[],20],[[[35,[12]]],[[49,[22]]]],[[30,5],52],[31,[[0,[58]]]],0,[47,[[49,[17]]]],[47,[[49,[18]]]],[47,[[49,[19]]]],[47,[[49,[[26,[5]]]]]],[47,[[49,[[26,[51]]]]]],[47,[[0,[58,27]]]],[47,[[0,[58,27]]]],[[18,18],[[49,[33]]]],[[19,19],[[49,[33]]]],[[20,20],[[49,[33]]]],[10,[[32,[19,18,17]]]],[[31,[49,[47]]],[[49,[14]]]],[31,[[49,[29]]]],[11,51],[11,51],0,[13,59],[19,51],0,[[23,5],23],[[3,5],3],[21,[[49,[60]]]],[21,46],0,[8,[[49,[5]]]],[10,19],0,0,[10,17],[[10,10],8],[[6,46],[[49,[[35,[12]]]]]],[[-1,46],[[49,[[35,[12]]]]],[]],[[6,46],[[49,[[35,[12]]]]]],[[6,46],[[49,[[35,[12]]]]]],[1,46],[30,46],0,[[[45,[12]]],46],[47,46],0,[16,5],[17,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,5],[29,51],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,61,[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[[3,4],5],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],0,[3,51],0,[24,[[49,[25]]]],[20,64],0,[31,[[0,[58]]]],[8,[[35,[[26,[5]]]]]],[6,65],0,0,0,[[3,4],5],[10,18],[6,66],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[39,39],[34,34],[7,7],[56,56],[15,15],[65,65],[54,54],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[7,51,4],[[49,[11]]]],[[56,29,[49,[47]]],[[49,[14]]]],[[7,4],[[49,[11]]]],[[54,47],[[49,[31]]]],[[7,51,4],[[49,[11]]]],[[54,47],[[49,[31]]]],[[65,46],[[49,[30]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,48],[34,48],[7,48],[56,48],[65,48],[54,48],[44,49],[66,49],[39,49],[34,49],[7,49],[56,49],[15,49],[65,49],[54,49],[[65,-1],[[0,[58,27]]],67],[[44,48],49],[[34,48],49],[[7,48],49],[[56,48],49],[[65,48],49],[[54,48],49],[44,[[32,[48,[49,[48]]]]]],[34,[[32,[48,[49,[48]]]]]],[7,[[32,[48,[49,[48]]]]]],[56,[[32,[48,[49,[48]]]]]],[65,[[32,[48,[49,[48]]]]]],[54,[[32,[48,[49,[48]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[68,68],[69,69],[70,70],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[],59],[[],68],[[59,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,59],[6,68],[6,69],[6,70],[68,51],[69,9],[69,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[59,6],13],[[70,6],65],[[69,6],7],[[69,6],7],[[68,6,[35,[52]]],3],[[68,6,[35,[52]]],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[68,51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,72],[[73,-1],71,[[57,[6]]]],[74,74],[75,75],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[],73],[[],75],[[76,[45,[12]]],76],[[76,5],76],[[74,40],41],[[75,40],41],[[76,77],76],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,9],[72,9],[72,9],[72,9],[[71,9],71],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],73],[[[35,[75]]],76],[[71,-1],71,67],[[76,78],76],0,[[76,72,4],[[49,[79]]]],[[76,72,4,79],9],[[72,51,74],[[49,[79]]]],[[72,51,74,79],9],[[72,51,74],[[49,[79]]]],[[72,51,74,79],9],[[72,4],[[49,[80]]]],[[72,4,80],9],[[72,4],[[49,[80]]]],[[72,4,80],9],[[71,5],71],[[76,-1],76,[[57,[81]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[76,[49,[82]]],76],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[[71,-1],71,67],[48,73],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,32],[83,83],[79,79],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],0,0,[[],83],[[],79],[[83,83],9],[[83,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],79],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,85],[80,85],[86,85],[80,32],[80,80],[86,86],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[84,[[49,[51]]]],[86,[[49,[51]]]],[[],80],[[84,5,5],32],[[80,5,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[80,48],[[49,[86]]]],[[80,48],[[49,[84]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,9],[80,9],[80,48],[[],80],[84,[[0,[87]]]],[80,[[0,[87]]]],[86,[[0,[87]]]],[84,[[35,[88]]]],[80,[[35,[88]]]],[86,[[35,[88]]]],[84,[[35,[88]]]],[80,[[35,[88]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[84,82],32],[[80,82],32],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[84,[[35,[89]]]],[80,[[35,[89]]]],[86,[[35,[89]]]],0,0,0,0,0,0,[[90,91],32],[[90,47],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,90],[[93,-1],92,[[57,[6]]]],[94,94],[[-1,-2],32,[],[]],0,[[],93],[[92,94],92],[[94,94],9],[[92,-1],92,67],[[94,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[92,9],92],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[92,[49,[55]]],92],[90,23],[[],93],[[92,-1],92,67],[90,[[35,[52]]]],[[92,9],92],[[92,60],92],[[90,-1],32,37],[[92,5],92],[-1,-2,[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[[92,-1],92,67],[48,93],0,0,0,[95,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[97,97],[95,95],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],0,0,0,[[],96],[[],97],[[96,40],41],[[97,40],41],[[95,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,9],[95,9],[95,9],[96,9],[95,9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,98,67],[-1,99,[]],[-1,99,[]],[100,99],[-1,101,[]],[-1,101,[]],[100,101],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,102,[]],[-1,103,[]],[-1,103,[]],[100,103],[104,[[35,[105]]]],[55,106],[[[98,[-1]]],[[98,[-1]]],27],[104,104],[106,106],[55,55],[100,100],[102,102],[103,103],[101,101],[60,60],[99,99],[107,107],[108,108],[109,109],[110,110],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[-1,[[49,[105]]],[]],0,[-1,107,[]],[-1,107,[]],[100,107],[[103,103],33],[[101,101],33],[[60,60],33],[[99,99],33],[[107,107],33],[[108,108],33],[[109,109],33],[[110,110],33],[-1,12,[]],[-1,12,[]],[100,12],[[105,105],[[49,[105]]]],[-1,104,[]],[-1,104,[]],[[],100],[[106,106],9],[[55,55],9],[[100,100],9],[[102,102],9],[[103,103],9],[[101,101],9],[[60,60],9],[[99,99],9],[[107,107],9],[[108,108],9],[[109,109],9],[[110,110],9],[[106,40],41],[[55,40],41],[[55,40],41],[[102,40],41],[[103,40],41],[[101,40],41],[[60,40],41],[[99,40],41],[[107,40],41],[[108,40],41],[[109,40],41],[[110,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[105,100],[50,100],[111,100],[50,100],[111,100],[105,100],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,[[49,[55]]]],[46,[[49,[60]]]],[[106,-1],32,53],[[103,-1],32,53],[[101,-1],32,53],[[60,-1],32,53],[[99,-1],32,53],[[107,-1],32,53],[[108,-1],32,53],[[109,-1],32,53],[[110,-1],32,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,9],[60,9],[-1,9,[]],[-1,9,[]],[100,9],[-1,9,[]],[-1,9,[]],[100,9],[60,9],[100,9],[-1,110,[]],[-1,110,[]],[100,110],[55,47],[-1,108,[]],[-1,108,[]],[100,108],[99,50],[-1,[[49,[105]]],[]],[55,[[49,[47]]]],[60,47],[[[98,[-1]]],9,[]],[99,9],[[[98,[-1]]],49,[58,27]],[104,49],[-1,[[49,[105]]],[]],[47,[[49,[55]]]],[[103,103],[[49,[33]]]],[[101,101],[[49,[33]]]],[[60,60],[[49,[33]]]],[[99,99],[[49,[33]]]],[[107,107],[[49,[33]]]],[[108,108],[[49,[33]]]],[[109,109],[[49,[33]]]],[[110,110],[[49,[33]]]],[-1,100,[]],[55,[[49,[47]]]],[-1,60,[]],[-1,60,[]],[55,[[49,[47]]]],[100,60],[55,[[49,[46]]]],[60,46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,61,[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,109,[]],[-1,109,[]],[100,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,112],[113,112],0,0,[91,[[35,[114]]]],[91,32],[114,114],[115,115],[91,91],[116,116],[117,117],[111,111],[113,113],[118,118],[119,119],[120,120],[112,112],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[-1,-2],32,[],[]],[[115,115],33],[[118,118],33],[[119,119],33],[[112,112],33],0,0,0,[[],114],[[],115],[[],91],[[],111],[[],113],[[],120],[111],[113,118],0,[[115,115],9],[[116,116],9],[[111,111],9],[[113,113],9],[[118,118],9],[[119,119],9],[[120,120],9],[[112,112],9],[[114,40],41],[[115,40],41],[[116,40],41],[[117,40],41],[[117,40],41],[[113,40],41],[[118,40],41],[[119,40],41],[[112,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[105,111],[100,111],[-1,-1,[]],[100,111],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[91,113],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113,9],[113,9],[113,9],[91,9],[119,9],[113,9],0,0,[[91,-1],116,121],[91,[[35,[114]]]],[[60,-1],[[122,[-1]]],[58,27]],[[],91],[[100,112],111],[[[122,[-1]],91],9,[58,27]],0,0,[[115,115],[[49,[33]]]],[[118,118],[[49,[33]]]],[[119,119],[[49,[33]]]],[[112,112],[[49,[33]]]],[111,100],[91,117],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[117,[[123,[48]]]],[-1,61,[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,[[62,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[91,124],[113,119]],"c":[],"p":[[3,"Feature",0],[4,"Action",0],[3,"GlyphMetrics",0],[6,"GlyphId",0],[15,"f32"],[3,"FontRef",0],[3,"BitmapStrikes",528],[3,"Synthesis",0],[15,"bool"],[3,"Attributes",0],[3,"BitmapStrike",0],[15,"u8"],[3,"Charmap",0],[3,"LocalizedString",0],[3,"Chars",528],[3,"ObliqueAngle",0],[4,"Style",0],[3,"Weight",0],[3,"Stretch",0],[3,"CacheKey",0],[3,"WritingSystem",0],[3,"FontDataRef",0],[3,"Metrics",0],[3,"ColorPalette",0],[4,"Usability",0],[3,"Setting",0],[8,"Clone",2170],[8,"Copy",2171],[4,"StringId",0],[3,"Variation",0],[3,"Instance",0],[15,"tuple"],[4,"Ordering",2172],[3,"ColorPalettes",528],[15,"slice"],[8,"Default",2173],[8,"FnMut",2174],[8,"PartialEq",2172],[3,"Features",528],[3,"Formatter",2175],[6,"Result",2175],[8,"Debug",2175],[8,"Display",2175],[3,"Fonts",528],[15,"array"],[6,"Tag",0],[15,"str"],[15,"usize"],[4,"Option",2176],[15,"u32"],[15,"u16"],[6,"NormalizedCoord",0],[8,"Hasher",2177],[3,"Instances",528],[3,"Language",1035],[3,"LocalizedStrings",528],[8,"Into",2178],[8,"Iterator",2179],[3,"CharmapProxy",668],[4,"Script",1035],[3,"String",2180],[4,"Result",2181],[3,"TypeId",2182],[15,"u64"],[3,"Variations",528],[3,"WritingSystems",528],[8,"IntoIterator",2183],[3,"MetricsProxy",668],[3,"BitmapStrikesProxy",668],[3,"VariationsProxy",668],[3,"ScalerBuilder",729],[3,"Scaler",729],[3,"ScaleContext",729],[4,"StrikeWith",729],[4,"Source",729],[3,"Render",729],[4,"Format",2184],[3,"Vector",2185],[3,"Image",828],[3,"Outline",863],[4,"Style",2186],[3,"Transform",2185],[4,"Content",828],[3,"LayerMut",863],[3,"Bounds",2185],[3,"Layer",863],[8,"PathData",2187],[6,"Point",2185],[4,"Verb",2188],[3,"Shaper",921],[3,"CharCluster",1932],[3,"ShaperBuilder",921],[3,"ShapeContext",921],[4,"Direction",921],[3,"GlyphCluster",980],[3,"GlyphInfo",980],[3,"Glyph",980],[3,"Analyze",1035],[4,"BidiClass",1035],[3,"Properties",1035],[4,"Block",1035],[4,"BracketType",1035],[4,"Category",1035],[3,"Decompose",1035],[15,"char"],[4,"Cjk",1035],[4,"ClusterBreak",1035],[4,"LineBreak",1035],[4,"WordBreak",1035],[4,"JoiningType",1035],[3,"CharInfo",1932],[4,"Boundary",1932],[3,"ClusterInfo",1932],[3,"Char",1932],[4,"ShapeClass",1932],[4,"Status",1932],[3,"SourceRange",1932],[4,"Emoji",1932],[4,"Whitespace",1932],[3,"Token",1932],[8,"Fn",2174],[3,"Parser",1932],[3,"Range",2189],[6,"UserData",1932],[8,"TableProvider",0],[8,"Codepoint",1035]],"b":[[218,"impl-Debug-for-Attributes"],[219,"impl-Display-for-Attributes"],[221,"impl-Debug-for-Style"],[222,"impl-Display-for-Style"],[223,"impl-Display-for-Weight"],[224,"impl-Debug-for-Weight"],[225,"impl-Display-for-Stretch"],[226,"impl-Debug-for-Stretch"],[231,"impl-Debug-for-Setting%3CT%3E"],[232,"impl-Display-for-Setting%3CT%3E"],[236,"impl-From%3C(Stretch,+Weight,+Style)%3E-for-Attributes"],[237,"impl-From%3C()%3E-for-Attributes"],[239,"impl-From%3CStyle%3E-for-Attributes"],[240,"impl-From%3CStretch%3E-for-Attributes"],[241,"impl-From%3CWeight%3E-for-Attributes"],[259,"impl-From%3C%26(%26%5Bu8;+4%5D,+T)%3E-for-Setting%3CT%3E"],[260,"impl-From%3C%26(u32,+T)%3E-for-Setting%3CT%3E"],[261,"impl-From%3C(%26str,+T)%3E-for-Setting%3CT%3E"],[262,"impl-From%3C%26(%5Bu8;+4%5D,+T)%3E-for-Setting%3CT%3E"],[263,"impl-From%3C(u32,+T)%3E-for-Setting%3CT%3E"],[264,"impl-From%3C%26(%26str,+T)%3E-for-Setting%3CT%3E"],[371,"impl-Setting%3Cf32%3E"],[372,"impl-Setting%3Cu16%3E"],[373,"impl-Setting%3Cf32%3E"],[374,"impl-Setting%3Cu16%3E"],[400,"impl-TableProvider-for-%26FontRef%3C\'a%3E"],[401,"impl-TableProvider-for-FontRef%3C\'a%3E"],[1771,"impl-Display-for-Language"],[1772,"impl-Debug-for-Language"],[1786,"impl-From%3C%26char%3E-for-Properties"],[1787,"impl-From%3C%26u32%3E-for-Properties"],[1788,"impl-From%3CCharInfo%3E-for-Properties"],[1789,"impl-From%3Cu32%3E-for-Properties"],[1790,"impl-From%3C%26CharInfo%3E-for-Properties"],[1791,"impl-From%3Cchar%3E-for-Properties"],[2058,"impl-Debug-for-SourceRange"],[2059,"impl-Display-for-SourceRange"],[2070,"impl-From%3Cchar%3E-for-CharInfo"],[2071,"impl-From%3C%26Properties%3E-for-CharInfo"],[2073,"impl-From%3CProperties%3E-for-CharInfo"]]},\
"sys_locale":{"doc":"A library to safely and easily obtain the current locale …","t":"FF","n":["get_locale","get_locales"],"q":[[0,"sys_locale"],[2,"alloc::string"],[3,"core::option"],[4,"core::iter::traits::iterator"]],"d":["Returns the active locale for the system or application.","Returns the preferred locales for the system or …"],"i":[0,0],"f":[[[],[[2,[1]]]],[[],[[0,[3]]]]],"c":[],"p":[[3,"String",2],[4,"Option",3],[8,"Iterator",4]],"b":[]},\
"tinyvec":{"doc":"<code>tinyvec</code> provides 100% safe vec-like data structures.","t":"IDDDDSNNNNNNQDDEEEDDLLLOOLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Array","ArrayVec","ArrayVecDrain","ArrayVecIterator","ArrayVecSplice","CAPACITY","Heap","Heap","Heap","Inline","Inline","Inline","Item","SliceVec","SliceVecDrain","TinyVec","TinyVecDrain","TinyVecIterator","TinyVecSplice","TryFromSliceError","append","append","append","array_vec","array_vec","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_slice","as_mut_slice","as_mut_slice","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_slice","as_slice","as_slice","as_slice","as_slice","as_slice","as_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clear","clear","clear","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","cmp","cmp","cmp","count","count","count","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drain","drain","drain","drain_to_vec","drain_to_vec_and_reserve","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend_from_slice","extend_from_slice","extend_from_slice","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array_empty","from_array_len","from_array_len","from_iter","from_iter","from_slice_len","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","is_heap","is_inline","last","last","last","last","len","len","len","len","len","move_to_the_heap","move_to_the_heap_and_reserve","new","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop","push","push","push","remove","remove","remove","reserve","reserve_exact","resize","resize","resize","resize_with","resize_with","resize_with","retain","retain","retain","set_len","set_len","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","splice","splice","split_off","split_off","split_off","swap_remove","swap_remove","swap_remove","tiny_vec","tiny_vec","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","truncate","truncate","truncate","try_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_array_len","try_from_array_len","try_from_slice_len","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":[[0,"tinyvec"],[353,"core::default"],[354,"core::clone"],[355,"core::cmp"],[356,"core::cmp"],[357,"alloc::vec"],[358,"core::iter::traits::iterator"],[359,"core::cmp"],[360,"core::fmt"],[361,"core::fmt"],[362,"core::convert"],[363,"core::hash"],[364,"core::hash"],[365,"core::option"],[366,"core::iter::traits::double_ended"],[367,"core::cmp"],[368,"alloc::string"],[369,"core::result"],[370,"core::any"]],"d":["A trait for types that are an array.","An array-backed, vector-like data structure.","Draining iterator for <code>ArrayVec</code>","Iterator for consuming an <code>ArrayVec</code> and returning owned …","Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>","The number of slots in the thing.","","","","","","","The type of the items in the thing.","A slice-backed vector-like data structure.","Draining iterator for <code>SliceVec</code>","A vector that starts inline, but can automatically move to …","Draining iterator for <code>TinyVecDrain</code>","Iterator for consuming an <code>TinyVec</code> and returning owned …","Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>","The error type returned when a conversion from a slice to …","Move all values from <code>other</code> into this vec.","","Move all values from <code>other</code> into this vec.","Helper to make an <code>ArrayVec</code>.","Helper to make an <code>ArrayVec</code>.","","","","A <code>*mut</code> pointer to the backing array.","A <code>*mut</code> pointer to the backing slice.","A mutable pointer to the backing array.","Performs a <code>deref_mut</code>, into unique slice form.","Performs a <code>deref_mut</code>, into unique slice form.","Helper for getting the mut slice.","A <code>*const</code> pointer to the backing array.","A <code>*const</code> pointer to the backing slice.","A const pointer to the backing array.","","","","Gives a shared slice over the whole thing.","Performs a <code>deref</code>, into shared slice form.","Returns the remaining items of this iterator as a slice.","Performs a <code>deref</code>, into shared slice form.","Helper for getting the shared slice.","Returns the remaining items of this iterator as a slice.","Gives a unique slice over the whole thing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The capacity of the <code>ArrayVec</code>.","The capacity of the <code>SliceVec</code>.","The capacity of the <code>TinyVec</code>.","Truncates the <code>ArrayVec</code> down to length 0.","Truncates the <code>SliceVec</code> down to length 0.","Removes all elements from the vec.","","","","","","","","","","","","","","","Create a default-initialized instance of ourself, similar …","","","","","","","","","","Creates a draining iterator that removes the specified …","Creates a draining iterator that removes the specified …","Creates a draining iterator that removes the specified …","Drains all elements to a Vec","Drains all elements to a Vec, but reserves additional space","","","","","","","","","","","","","","","Clone each element of the slice into this <code>ArrayVec</code>.","","Clone each element of the slice into this vec.","Fill the vector until its capacity has been reached.","Fill the vector until its capacity has been reached.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","The output has a length equal to the full array.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Uses the full slice as the initial length.","Returns the argument unchanged.","Calls <code>AsRef::as_mut</code> then uses the full slice as the …","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wraps up an array as a new empty <code>ArrayVec</code>.","Wraps up an array and uses the given length as the initial …","Wraps up an array and uses the given length as the initial …","","","Wraps up a slice and uses the given length as the initial …","","","","","","","","","","Inserts an item at the position given, moving all …","Inserts an item at the position given, moving all …","Inserts an item at the position given, moving all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner array of the <code>ArrayVec</code>.","","","","","","","","","","","","","","","Checks if the length is 0.","Checks if the length is 0.","If the vec is empty.","Returns whether elements are on heap","Returns whether elements are on stack","","","","","The length of the <code>ArrayVec</code> (in elements).","","The length of the <code>SliceVec</code> (in elements).","The length of the vec (in elements).","","Moves the content of the TinyVec to the heap, if it’s …","If TinyVec is inline, moves the content of it to the heap. …","Makes a new, empty <code>ArrayVec</code>.","Makes a new, empty vec.","","","","","","","","","","","","","","","","","","","","","Remove and return the last element of the vec, if there is …","Remove and return the last element of the vec, if there is …","Remove and return the last element of the vec, if there is …","Place an element onto the end of the vec.","Place an element onto the end of the vec.","Place an element onto the end of the vec.","Removes the item at <code>index</code>, shifting all others down by one …","Removes the item at <code>index</code>, shifting all others down by one …","Removes the item at <code>index</code>, shifting all others down by one …","Reserves additional space. Moves to the heap if array can…","Reserves additional space. Moves to the heap if array can…","As <code>resize_with</code> and it clones the value as the closure.","As <code>resize_with</code> and it clones the value as the closure.","Resize the vec to the new length.","Resize the vec to the new length.","Resize the vec to the new length.","Resize the vec to the new length.","Walk the vec and keep only the elements that pass the …","Walk the vec and keep only the elements that pass the …","Walk the vec and keep only the elements that pass the …","Forces the length of the vector to <code>new_len</code>.","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector as much as possible. It …","","","","","","","Creates a splicing iterator that removes the specified …","Creates a splicing iterator that removes the specified …","Splits the collection at the point given.","Splits the collection at the point given.","Splits the collection at the point given.","Remove an element, swapping the end of the vec into its …","Remove an element, swapping the end of the vec into its …","Remove an element, swapping the end of the vec into its …","Helper to make a <code>TinyVec</code>.","Helper to make a <code>TinyVec</code>.","","","","","","","","Reduces the vec’s length to the given value.","Reduces the vec’s length to the given value.","Reduces the vec’s length to the given value.","Move all values from <code>other</code> into this vec. If appending …","","The output has a length equal to that of the slice, with …","","","","","","","","","","","Wraps an array, using the given length as the starting …","Wraps an array, using the given length as the starting …","Wraps a slice, using the given length as the starting …","Tries to insert an item at the position given, moving all …","","","","","","","","","","","","Tries to place an element onto the end of the vec. Returns …","","","","","","","","","","","","Makes a new TinyVec with <em>at least</em> the given capacity."],"i":[0,0,0,0,0,3,6,15,9,6,15,9,3,0,0,0,0,0,0,0,1,4,6,0,0,1,4,6,1,4,6,1,4,6,1,4,6,1,4,6,3,1,8,4,6,9,3,1,1,20,8,16,4,4,18,6,6,15,22,9,12,1,1,20,8,16,4,4,18,6,6,15,22,9,12,1,4,6,1,4,6,1,6,12,1,6,1,6,12,1,4,6,8,15,9,3,1,4,6,1,4,6,1,4,6,1,4,6,1,1,20,18,22,1,1,1,4,4,6,6,6,1,4,6,1,4,6,1,4,1,1,1,1,1,1,1,1,1,8,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,9,12,12,16,15,1,1,20,8,16,4,4,4,18,6,6,6,6,6,6,15,22,9,12,1,1,6,1,6,4,1,4,6,1,4,6,1,4,6,1,4,6,1,20,8,16,4,18,6,15,22,9,12,1,1,1,1,20,8,16,4,18,6,6,6,15,22,9,1,4,6,6,6,8,16,15,9,1,20,4,6,22,6,6,1,6,20,8,16,18,15,22,9,20,8,16,15,22,9,8,16,15,9,1,4,6,1,4,6,1,4,6,1,4,6,6,6,1,4,6,1,4,6,1,4,6,1,4,6,20,8,16,15,22,9,1,6,1,4,6,1,4,6,0,0,1,6,12,1,4,6,12,1,4,6,1,1,1,20,8,16,4,18,6,15,22,9,12,1,6,4,1,1,20,8,16,4,18,6,15,22,9,12,1,1,20,8,16,4,18,6,15,22,9,12,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-1]]],2,3],[[[4,[-1]],[4,[-1]]],2,5],[[[6,[-1]],[6,[-1]]],2,3],0,0,[[[1,[-1]]],7,3],[[[4,[-1]]],[[7,[-1]]],[]],[[[6,[-1]]],7,3],[[[1,[-1]]],[],3],[[[4,[-1]]],[],[]],[[[6,[-1]]],[],3],[[[1,[-1]]],7,3],[[[4,[-1]]],[[7,[-1]]],[]],[[[6,[-1]]],7,3],[[[1,[-1]]],[],3],[[[4,[-1]]],[],[]],[[[6,[-1]]],[],3],[[[1,[-1]]],7,3],[[[4,[-1]]],[[7,[-1]]],[]],[[[6,[-1]]],7,3],[-1,7,[]],[[[1,[-1]]],7,3],[[[8,[-1]]],7,3],[[[4,[-1]]],[[7,[-1]]],[]],[[[6,[-1]]],7,3],[[[9,[-1]]],7,3],[-1,7,[]],[[[1,[-1]]],7,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],[[7,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],7,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],7,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],[[7,[-1]]],[]],[-1,-2,[],[]],[[[6,[-1]]],7,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],10,3],[[[4,[-1]]],10,[]],[[[6,[-1]]],10,3],[[[1,[-1]]],2,3],[[[4,[-1]]],2,5],[[[6,[-1]]],2,3],[[[1,[-1]]],[[1,[-1]]],[3,11]],[[[6,[-1]]],[[6,[-1]]],[3,11]],[12,12],[[[1,[-1]],[1,[-1]]],2,[3,11]],[[[6,[-1]],[6,[-1]]],2,[3,11]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[1,[-1]],[1,[-1]]],13,3],[[[4,[-1]],[4,[-1]]],13,14],[[[6,[-1]],[6,[-1]]],13,3],[[[8,[-1]]],10,3],[[[15,[-1]]],10,3],[[[9,[-1]]],10,3],[[],-1,[]],[[],[[1,[-1]]],3],[[],[[4,[-1]]],[]],[[],[[6,[-1]]],3],[[[1,[-1]]],[],3],[[[4,[-1]]],[],[]],[[[6,[-1]]],[],3],[[[1,[-1]]],[],3],[[[4,[-1]]],[],[]],[[[6,[-1]]],[],3],[[[1,[-1]],-2],16,3,[[17,[10]]]],[[[4,[-1]],-2],[[18,[-1]]],5,[[17,[10]]]],[[[6,[-1]],-2],[[15,[-1]]],3,[[17,[10]]]],[[[1,[-1]]],19,3],[[[1,[-1]],10],19,3],[[[20,[-1,-2]]],2,3,21],[[[18,[-1]]],2,5],[[[22,[-1,-2]]],2,3,21],[[[1,[-1]],[1,[-1]]],23,3],[[[1,[-1]],7],23,3],[[[1,[-1]],-1],23,3],[[[4,[-1]],[7,[-1]]],23,24],[[[4,[-1]],[4,[-1]]],23,24],[[[6,[-1]],[6,[-1]]],23,3],[[[6,[-1]],-1],23,3],[[[6,[-1]],7],23,3],[[[1,[-1]],-2],2,3,25],[[[4,[-1]],-2],2,[],25],[[[6,[-1]],-2],2,3,25],[[[1,[-1]],7],2,3],[[[4,[-1]],[7,[-1]]],2,11],[[[6,[-1]],7],2,3],[[[1,[-1]],-2],[],3,25],[[[4,[-1]],-2],[],[],25],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[1,[-1]],26],27,3],[[[8,[-1]],26],27,3],[[[4,[-1]],26],27,28],[[[4,[-1]],26],27,29],[[[4,[-1]],26],27,30],[[[4,[-1]],26],27,31],[[[4,[-1]],26],27,32],[[[4,[-1]],26],27,33],[[[4,[-1]],26],27,34],[[[4,[-1]],26],27,35],[[[4,[-1]],26],27,36],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[6,[-1]],26],27,3],[[[9,[-1]],26],27,3],[[12,26],27],[[12,26],27],[[[16,[-1]],-2],2,5,37],[[[15,[-1]],-2],2,3,37],[-1,-1,[]],[-1,[[1,[-1]]],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[7,[-1]]],[[4,[-1]]],[]],[-1,-1,[]],[-2,[[4,[-1]]],[],[[38,[[7,[-1]]]]]],[-1,-1,[]],[39,-1,[]],[[[7,[-1]]],[[6,[-2]]],[11,5],3],[[[1,[-1]]],[[6,[-1]]],3],[-1,-1,[]],[-1,[[6,[-1]]],3],[[[7,[-1]]],[[6,[-2]]],[11,5],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[1,[-1]]],[]],[[-1,10],[[1,[-1]]],3],[[-1,10],[[6,[-1]]],3],[-1,[[1,[-2]]],25,3],[-1,[[6,[-2]]],25,3],[[[7,[-1]],10],[[4,[-1]]],[]],[[[1,[-1]],-2],2,3,40],[[[4,[-1]],-2],2,41,40],[[[6,[-1]],-2],2,3,40],[[[1,[-1]],-2],[],3,[[42,[7]]]],[[[4,[-1]],-2],[],[],[[42,[[7,[-1]]]]]],[[[6,[-1]],-2],[],3,[[42,[7]]]],[[[1,[-1]],-2],[],3,[[42,[7]]]],[[[4,[-1]],-2],[],[],[[42,[[7,[-1]]]]]],[[[6,[-1]],-2],[],3,[[42,[7]]]],[[[1,[-1]],10],2,3],[[[4,[-1]],10,-1],2,[]],[[[6,[-1]],10],2,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,3],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],[],[]],[-1,-2,[],[]],[[[6,[-1]]],[],3],[[[6,[-1]]],[],3],[[[6,[-1]]],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],23,3],[[[4,[-1]]],23,[]],[[[6,[-1]]],23,3],[[[6,[-1]]],23,3],[[[6,[-1]]],23,3],[[[8,[-1]]],43,3],[[[16,[-1]]],43,5],[[[15,[-1]]],43,3],[[[9,[-1]]],43,3],[[[1,[-1]]],10,3],[[[20,[-1,-2]]],10,3,21],[[[4,[-1]]],10,[]],[[[6,[-1]]],10,3],[[[22,[-1,-2]]],10,3,21],[[[6,[-1]]],2,3],[[[6,[-1]],10],2,3],[[],[[1,[-1]]],3],[[],[[6,[-1]]],3],[[[20,[-1,-2]]],43,3,21],[[[8,[-1]]],43,3],[[[16,[-1]]],43,5],[[[18,[-1]]],43,5],[[[15,[-1]]],43,3],[[[22,[-1,-2]]],43,3,21],[[[9,[-1]]],43,3],[[[20,[-1,-2]]],43,3,[21,44]],[[[8,[-1]]],43,3],[[[16,[-1]]],43,5],[[[15,[-1]]],43,3],[[[22,[-1,-2]]],43,3,[21,44]],[[[9,[-1]]],43,3],[[[8,[-1]],10],43,3],[[[16,[-1]],10],43,5],[[[15,[-1]],10],43,3],[[[9,[-1]],10],43,3],[[[1,[-1]],[1,[-1]]],[[43,[13]]],3],[[[4,[-1]],[4,[-1]]],[[43,[13]]],45],[[[6,[-1]],[6,[-1]]],[[43,[13]]],3],[[[1,[-1]]],43,3],[[[4,[-1]]],[[43,[-1]]],5],[[[6,[-1]]],43,3],[[[1,[-1]]],2,3],[[[4,[-1]],-1],2,[]],[[[6,[-1]]],2,3],[[[1,[-1]],10],[],3],[[[4,[-1]],10],-1,5],[[[6,[-1]],10],[],3],[[[6,[-1]],10],2,3],[[[6,[-1]],10],2,3],[[[1,[-1]],10],2,3],[[[4,[-1]],10,-1],2,11],[[[6,[-1]],10],2,3],[[[1,[-1]],10,-2],2,3,37],[[[4,[-1]],10,-2],2,[],37],[[[6,[-1]],10,-2],2,3,37],[[[1,[-1]],-2],2,3,37],[[[4,[-1]],-2],2,5,37],[[[6,[-1]],-2],2,3,37],[[[1,[-1]],10],2,3],[[[4,[-1]],10],2,[]],[[[6,[-1]]],2,3],[[[20,[-1,-2]]],[[2,[10,[43,[10]]]]],3,21],[[[8,[-1]]],[[2,[10,[43,[10]]]]],3],[[[16,[-1]]],[[2,[10,[43,[10]]]]],5],[[[15,[-1]]],[[2,[10,[43,[10]]]]],3],[[[22,[-1,-2]]],[[2,[10,[43,[10]]]]],3,21],[[[9,[-1]]],[[2,[10,[43,[10]]]]],3],[[[1,[-1]],-2,-3],[[20,[-1,46]]],3,[[17,[10]]],25],[[[6,[-1]],-2,-3],[[22,[-1,46]]],3,[[17,[10]]],25],[[[1,[-1]],10],[[1,[-1]]],3],[[[4,[-1]],10],[[4,[-1]]],[]],[[[6,[-1]],10],[[6,[-1]]],3],[[[1,[-1]],10],[],3],[[[4,[-1]],10],-1,5],[[[6,[-1]],10],[],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[[1,[-1]],10],2,3],[[[4,[-1]],10],2,5],[[[6,[-1]],10],2,3],[[[1,[-1]],[1,[-1]]],[[43,[[1,[-1]]]]],3],[-1,[[48,[-2]]],[],[]],[[[7,[-1]]],[[48,[[1,[-2]]]]],[11,5],3],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[[-1,10],[[48,[[1,[-1]],-1]]],3],[[-1,10],[[48,[[6,[-1]],-1]]],3],[[[7,[-1]],10],[[43,[[4,[-1]]]]],[]],[[[1,[-1]],10],43,3],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[-1,[[48,[-2]]],[],[]],[[[1,[-1]]],43,3],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[-1,49,[]],[10,[[6,[-1]]],3]],"c":[],"p":[[3,"ArrayVec",0],[15,"tuple"],[8,"Array",0],[3,"SliceVec",0],[8,"Default",353],[4,"TinyVec",0],[15,"slice"],[3,"ArrayVecIterator",0],[4,"TinyVecIterator",0],[15,"usize"],[8,"Clone",354],[3,"TryFromSliceError",0],[4,"Ordering",355],[8,"Ord",355],[4,"TinyVecDrain",0],[3,"ArrayVecDrain",0],[8,"RangeBounds",356],[3,"SliceVecDrain",0],[3,"Vec",357],[3,"ArrayVecSplice",0],[8,"Iterator",358],[3,"TinyVecSplice",0],[15,"bool"],[8,"PartialEq",355],[8,"IntoIterator",359],[3,"Formatter",360],[6,"Result",360],[8,"UpperHex",360],[8,"Display",360],[8,"LowerHex",360],[8,"LowerExp",360],[8,"Binary",360],[8,"UpperExp",360],[8,"Debug",360],[8,"Octal",360],[8,"Pointer",360],[8,"FnMut",361],[8,"AsMut",362],[15,"never"],[8,"Hasher",363],[8,"Hash",363],[8,"SliceIndex",364],[4,"Option",365],[8,"DoubleEndedIterator",366],[8,"PartialOrd",355],[3,"Fuse",367],[3,"String",368],[4,"Result",369],[3,"TypeId",370]],"b":[[113,"impl-PartialEq-for-ArrayVec%3CA%3E"],[114,"impl-PartialEq%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-ArrayVec%3CA%3E"],[115,"impl-PartialEq%3C%26A%3E-for-ArrayVec%3CA%3E"],[116,"impl-PartialEq%3C%26%5BT%5D%3E-for-SliceVec%3C\'s,+T%3E"],[117,"impl-PartialEq-for-SliceVec%3C\'s,+T%3E"],[118,"impl-PartialEq-for-TinyVec%3CA%3E"],[119,"impl-PartialEq%3C%26A%3E-for-TinyVec%3CA%3E"],[120,"impl-PartialEq%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-TinyVec%3CA%3E"],[129,"impl-LowerExp-for-ArrayVec%3CA%3E"],[130,"impl-UpperExp-for-ArrayVec%3CA%3E"],[131,"impl-UpperHex-for-ArrayVec%3CA%3E"],[132,"impl-Debug-for-ArrayVec%3CA%3E"],[133,"impl-Binary-for-ArrayVec%3CA%3E"],[134,"impl-Octal-for-ArrayVec%3CA%3E"],[135,"impl-LowerHex-for-ArrayVec%3CA%3E"],[136,"impl-Pointer-for-ArrayVec%3CA%3E"],[137,"impl-Display-for-ArrayVec%3CA%3E"],[139,"impl-UpperHex-for-SliceVec%3C\'s,+T%3E"],[140,"impl-Display-for-SliceVec%3C\'s,+T%3E"],[141,"impl-LowerHex-for-SliceVec%3C\'s,+T%3E"],[142,"impl-LowerExp-for-SliceVec%3C\'s,+T%3E"],[143,"impl-Binary-for-SliceVec%3C\'s,+T%3E"],[144,"impl-UpperExp-for-SliceVec%3C\'s,+T%3E"],[145,"impl-Debug-for-SliceVec%3C\'s,+T%3E"],[146,"impl-Octal-for-SliceVec%3C\'s,+T%3E"],[147,"impl-Pointer-for-SliceVec%3C\'s,+T%3E"],[148,"impl-UpperExp-for-TinyVec%3CA%3E"],[149,"impl-LowerHex-for-TinyVec%3CA%3E"],[150,"impl-LowerExp-for-TinyVec%3CA%3E"],[151,"impl-Display-for-TinyVec%3CA%3E"],[152,"impl-Binary-for-TinyVec%3CA%3E"],[153,"impl-UpperHex-for-TinyVec%3CA%3E"],[154,"impl-Octal-for-TinyVec%3CA%3E"],[155,"impl-Debug-for-TinyVec%3CA%3E"],[156,"impl-Pointer-for-TinyVec%3CA%3E"],[158,"impl-Display-for-TryFromSliceError"],[159,"impl-Debug-for-TryFromSliceError"],[167,"impl-From%3C%26mut+%5BT%5D%3E-for-SliceVec%3C\'s,+T%3E"],[169,"impl-From%3C%26mut+A%3E-for-SliceVec%3C\'s,+T%3E"],[172,"impl-From%3C%26mut+%5BT%5D%3E-for-TinyVec%3CA%3E"],[173,"impl-From%3CArrayVec%3CA%3E%3E-for-TinyVec%3CA%3E"],[175,"impl-From%3CA%3E-for-TinyVec%3CA%3E"],[176,"impl-From%3C%26%5BT%5D%3E-for-TinyVec%3CA%3E"],[211,"impl-IntoIterator-for-%26mut+ArrayVec%3CA%3E"],[212,"impl-IntoIterator-for-%26ArrayVec%3CA%3E"],[213,"impl-IntoIterator-for-ArrayVec%3CA%3E"],[219,"impl-IntoIterator-for-%26mut+TinyVec%3CA%3E"],[220,"impl-IntoIterator-for-TinyVec%3CA%3E"],[221,"impl-IntoIterator-for-%26TinyVec%3CA%3E"]]},\
"tinyvec_macros":{"doc":"","t":"O","n":["impl_mirrored"],"q":[[0,"tinyvec_macros"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"ttf_parser":{"doc":"A high-level, safe, zero-allocation TrueType font parser.","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNEDNNNDNNNNNNNINNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNDDDDNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNINNEENNNNNNNNDEDDNDNDNNNSNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNDDNNNNNNNNNNNNNNNDNNNNNNNDDNENENNNNNNMAMMALLAMMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMAMMAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKAMMLLLAMMLLAMKMMMLLLLLLLMMMLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMLLLLAMMLLLLLLLLLLLLAMMMAMMAMMLLLAMMLLMAMMMAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNLAMMAMMLLLMLKAMAMMMAMMMAMMKAMMAMMAMLLLLLLLMAAMMLLKLLLLLLLLLMMAMMLKLLMLAMMLLLLLLAMMLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLAMMMMAMMMMLLLMMLMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDGDDLLLLLLLLLLALLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLALLLLLLLLLLLLLLLLLLLLLLRRRRDDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLMMLLDLLLLLLLLLLLLLLNENENNNNNDDDDDDDDDDDDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDLLLLLLLLKLKKLLLLLDLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMLLLLLMLLMMMLLMLLLLLLLLNNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDDNDNNDDENNNNNDDDNDNDNDNEDDENEDDNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMLMMMMMMMMMMMMNDGDNNNNDNGGDNDNDDGNEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLLLLLENNDLLLLLLLLLLLLLMMLLLLLLLLLLLMDMLLLLMLLLMMLLLLLDDLMMLLLLLLLLLLLLLLMMLLLMLLLLLLLLDLLLLLLLLLLLLLLENNNNDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDENNNNNDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMNNELLLLLLLLLLLLLLLDDDDDDDDDDDDDDDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLMLLLLLLLLLLLLLLLMMLMLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDLLLLLLLMLLLLLDDDNDDDDNDDNDNNDEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLNNNDDDEDNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLMAMMLLLMLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRREDGGGEEEDGGDNNNNNNNNNNGDGDDDGGIDDDDIDDGGDDGGGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLMLLKKLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNENNDNNNEDNNNDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMDDLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLMLLLLMLLLLLLLLLLLLLLLMMMDMLLLLLMLLLMMLLLLLDDLLLLLLLLMLLLLMLLLMLLLLLLLLLLM","n":["Afrikaans_SouthAfrica","Albanian_Albania","Alsatian_France","Amharic_Ethiopia","Arabic_Algeria","Arabic_Bahrain","Arabic_Egypt","Arabic_Iraq","Arabic_Jordan","Arabic_Kuwait","Arabic_Lebanon","Arabic_Libya","Arabic_Morocco","Arabic_Oman","Arabic_Qatar","Arabic_SaudiArabia","Arabic_Syria","Arabic_Tunisia","Arabic_UAE","Arabic_Yemen","ArgumentsStackLimitReached","Armenian_Armenia","Assamese_India","Azeri_Cyrillic_Azerbaijan","Azeri_Latin_Azerbaijan","Bashkir_Russia","Basque_Basque","BboxOverflow","Belarusian_Belarus","Bengali_Bangladesh","Bengali_India","BitmapGray2","BitmapGray2Packed","BitmapGray4","BitmapGray4Packed","BitmapGray8","BitmapMono","BitmapMonoPacked","BitmapPremulBgra32","Black","BlendRegionsLimitReached","Bold","Bosnian_Cyrillic_BosniaAndHerzegovina","Bosnian_Latin_BosniaAndHerzegovina","Breton_France","Bulgarian_Bulgaria","CFFError","Catalan_Catalan","Chinese_HongKongSAR","Chinese_MacaoSAR","Chinese_PeoplesRepublicOfChina","Chinese_Singapore","Chinese_Taiwan","Condensed","Corsican_France","Croatian_Croatia","Croatian_Latin_BosniaAndHerzegovina","Custom","Czech_CzechRepublic","Danish_Denmark","Dari_Afghanistan","DataAfterEndChar","Divehi_Maldives","Dutch_Belgium","Dutch_Netherlands","Editable","English_Australia","English_Belize","English_Canada","English_Caribbean","English_India","English_Ireland","English_Jamaica","English_Malaysia","English_NewZealand","English_RepublicOfThePhilippines","English_Singapore","English_SouthAfrica","English_TrinidadAndTobago","English_UnitedKingdom","English_UnitedStates","English_Zimbabwe","Estonian_Estonia","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Face","FaceIndexOutOfBounds","FaceParsingError","FaceTables","Faroese_FaroeIslands","Filipino_Philippines","Finnish_Finland","Fixed","French_Belgium","French_Canada","French_France","French_Luxembourg","French_PrincipalityOfMonaco","French_Switzerland","Frisian_Netherlands","FromData","Galician_Galician","Georgian_Georgia","German_Austria","German_Germany","German_Liechtenstein","German_Luxembourg","German_Switzerland","GlyphId","Greek_Greece","Greenlandic_Greenland","Gujarati_India","Hausa_Latin_Nigeria","Hebrew_Israel","Hindi_India","Hungarian_Hungary","Icelandic_Iceland","Igbo_Nigeria","Indonesian_Indonesia","Installable","Inuktitut_Canada","Inuktitut_Latin_Canada","InvalidArgumentsStackLength","InvalidItemVariationDataIndex","InvalidNumberOfBlendOperands","InvalidOperator","InvalidSeacCode","InvalidSubroutineIndex","Irish_Ireland","Iso","Italian_Italy","Italian_Switzerland","Italic","Japanese_Japan","Kannada_India","Kazakh_Kazakhstan","Khmer_Cambodia","Kiche_Guatemala","Kinyarwanda_Rwanda","Kiswahili_Kenya","Konkani_India","Korean_Korea","Kyrgyz_Kyrgyzstan","Language","Lao_LaoPDR","Latvian_Latvia","LazyArray16","LazyArray32","LazyArrayIter16","LazyArrayIter32","Light","LineMetrics","Lithuanian_Lithuania","LowerSorbian_Germany","Luxembourgish_Luxembourg","Macedonian_NorthMacedonia","Macintosh","Malay_BruneiDarussalam","Malay_Malaysia","Malayalam_India","MalformedFont","Maltese_Malta","Maori_NewZealand","Mapudungun_Chile","Marathi_India","Medium","MissingEndChar","MissingMoveTo","Mohawk_Mohawk","Mongolian_Cyrillic_Mongolia","Mongolian_Traditional_PeoplesRepublicOfChina","Nepali_Nepal","NestingLimitReached","NoGlyph","NoHeadTable","NoHheaTable","NoLocalSubroutines","NoMaxpTable","Normal","Normal","Normal","NormalizedCoordinate","Norwegian_Bokmal_Norway","Norwegian_Nynorsk_Norway","Oblique","Occitan_France","Odia_India","Other","OutlineBuilder","PNG","Pashto_Afghanistan","Permissions","PlatformId","Polish_Poland","Portuguese_Brazil","Portuguese_Portugal","PreviewAndPrint","Punjabi_India","Quechua_Bolivia","Quechua_Ecuador","Quechua_Peru","RasterGlyphImage","RasterImageFormat","RawFace","RawFaceTables","ReadOutOfBounds","Rect","Restricted","RgbaColor","Romanian_Romania","Romansh_Switzerland","Russian_Russia","SIZE","Sami_Inari_Finland","Sami_Lule_Norway","Sami_Lule_Sweden","Sami_Northern_Finland","Sami_Northern_Norway","Sami_Northern_Sweden","Sami_Skolt_Finland","Sami_Southern_Norway","Sami_Southern_Sweden","Sanskrit_India","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Serbian_Cyrillic_BosniaAndHerzegovina","Serbian_Cyrillic_Serbia","Serbian_Latin_BosniaAndHerzegovina","Serbian_Latin_Serbia","SesothoSaLeboa_SouthAfrica","Setswana_SouthAfrica","Sinhala_SriLanka","Slovak_Slovakia","Slovenian_Slovenia","Spanish_Argentina","Spanish_Bolivia","Spanish_Chile","Spanish_Colombia","Spanish_CostaRica","Spanish_DominicanRepublic","Spanish_Ecuador","Spanish_ElSalvador","Spanish_Guatemala","Spanish_Honduras","Spanish_Mexico","Spanish_ModernSort_Spain","Spanish_Nicaragua","Spanish_Panama","Spanish_Paraguay","Spanish_Peru","Spanish_PuertoRico","Spanish_TraditionalSort_Spain","Spanish_UnitedStates","Spanish_Uruguay","Spanish_Venezuela","Style","Swedish_Finland","Swedish_Sweden","Syriac_Syria","TableRecord","Tag","Tajik_Cyrillic_Tajikistan","Tamazight_Latin_Algeria","Tamil_India","Tatar_Russia","Telugu_India","Thai_Thailand","Thin","Tibetan_PRC","Turkish_Turkey","Turkmen_Turkmenistan","Uighur_PRC","Ukrainian_Ukraine","UltraCondensed","UltraExpanded","Unicode","UnicodeRanges","Unknown","UnknownMagic","UnsupportedOperator","UpperSorbian_Germany","Urdu_IslamicRepublicOfPakistan","Uzbek_Cyrillic_Uzbekistan","Uzbek_Latin_Uzbekistan","Variation","VariationAxis","Vietnamese_Vietnam","Weight","Welsh_UnitedKingdom","Width","Windows","Wolof_Senegal","Yakut_Russia","Yi_PRC","Yoruba_Nigeria","ZeroBBox","alpha","ankr","ankr","ankr","apple_layout","as_u32","ascender","avar","avar","avar","axis","bdat","bdat","binary_search","binary_search","binary_search_by","binary_search_by","bloc","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","cbdt","cbdt","cbdt","cblc","cblc","cff","cff","cff","cff2","cff2","cff2","check_sum","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmap","cmap","cmap","cmp","cmp","color_palettes","colr","colr","colr","count","count","cpal","cpal","curve_to","data","data","def_value","default","default","default","default","default","default","descender","ebdt","ebdt","eblc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","feat","feat","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts_in_collection","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_lossy","from_raw_tables","from_slice","from_slice","fvar","fvar","fvar","gdef","gdef","gdef","get","get","get","global_bounding_box","glyf","glyf","glyf","glyph_bounding_box","glyph_hor_advance","glyph_hor_side_bearing","glyph_index","glyph_index_by_name","glyph_name","glyph_raster_image","glyph_svg_image","glyph_variation_index","glyph_ver_advance","glyph_ver_side_bearing","glyph_y_origin","gpos","gpos","gpos","green","gsub","gsub","gsub","gvar","gvar","gvar","has_non_default_variation_coordinates","hash","hash","head","head","head","height","height","height","hhea","hhea","hhea","hidden","hmtx","hmtx","hmtx","hvar","hvar","hvar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_bitmap_embedding_allowed","is_bold","is_color_glyph","is_empty","is_empty","is_italic","is_monospaced","is_null","is_oblique","is_regular","is_subsetting_allowed","is_variable","isiXhosa_SouthAfrica","isiZulu_SouthAfrica","italic_angle","kern","kern","kern","kerx","kerx","kerx","last","len","len","length","line_gap","line_to","loca","loca","math","math","math","max_value","maxp","maxp","maxp","min_value","morx","morx","morx","move_to","mvar","mvar","mvar","name","name","name","name_id","name_id","names","new","new","new","next","next","number_of_glyphs","offset","opentype_layout","os2","os2","os2","outline_glyph","paint_color_glyph","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","permissions","pixels_per_em","position","post","post","post","primary_language","quad_to","range","raw_face","red","region","sbix","sbix","sbix","set_variation","slice","strikeout_metrics","style","subscript_metrics","superscript_metrics","svg","svg","svg","table","table_data","table_records","tables","tag","tag","thickness","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","trak","trak","trak","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","underline_metrics","unicode_ranges","units_per_em","value","variation_axes","variation_coordinates","vertical_ascender","vertical_descender","vertical_height","vertical_line_gap","vhea","vhea","vhea","vmtx","vmtx","vorg","vorg","vorg","vvar","vvar","weight","width","width","width","x","x_height","x_max","x_min","x_offset","x_size","y","y_max","y_min","y_offset","y_size","Point","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","fmt","fmt","from","from","into","into","parse","parse","points","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","ExtendedStateTable","GenericStateEntry","Lookup","StateEntry","StateTable","ValueOffset","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","entry","entry","extra","extra","flags","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_advance","has_mark","has_offset","has_push","has_reset","into","into","into","into","into","kerning","new_state","new_state","new_state","next","parse","parse","parse","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value_offset","DELETED_GLYPH","END_OF_TEXT","OUT_OF_BOUNDS","START_OF_TEXT","AxisValueMap","SegmentMaps","SegmentMapsIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from_coordinate","into","into","into","into","into_iter","into_iter","is_empty","len","map_coordinates","next","parse","parse","segment_maps","to_coordinate","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","to_owned","try_from","try_into","type_id","Matrix","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","glyph_cid","glyph_index","glyph_index_by_name","glyph_name","glyph_width","into","into","kx","ky","matrix","number_of_glyphs","outline","parse","sx","sy","to_owned","to_owned","try_from","try_from","try_into","try_into","tx","ty","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","ByteEncodingTable","Format","Found","GlyphVariationResult","HighByteMappingThroughTable","ManyToOneRangeMappings","MixedCoverage","SegmentMappingToDeltaValues","SegmentedCoverage","Subtable","Subtable0","Subtable10","Subtable12","Subtable13","Subtable14","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","TrimmedArray","TrimmedTableMapping","UnicodeVariationSequences","UseDefault","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","default","encoding_id","eq","first_code_point","first_code_point","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","glyph_ids","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_variation_index","glyphs","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_unicode","len","next","parse","parse","parse","parse","parse","parse","parse","parse","parse","platform_id","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Painter","Table","borrow","borrow_mut","clone","clone_into","contains","fmt","from","into","outline","paint","paint_color","paint_foreground","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","palettes","parse","to_owned","try_from","try_into","type_id","FeatureName","FeatureNames","FeatureNamesIter","SettingName","Table","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_setting_index","exclusive","feature","find","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_empty","len","name_index","name_index","names","next","parse","parse","setting","setting_names","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Table","VariationAxis","axes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_value","eq","fmt","fmt","from","from","hidden","into","into","max_value","min_value","name_id","parse","parse","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Base","Component","GlyphClass","Ligature","Mark","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","eq","fmt","from","from","glyph_class","glyph_mark_attachment_class","glyph_variation_delta","has_glyph_classes","hash","into","into","is_mark_glyph","parse","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","Anchor","AnchorMatrix","ChainContext","ClassMatrix","Context","Cursive","CursiveAdjustment","CursiveAnchorSet","Device","Format1","Format1","Format2","Format2","Hinting","HintingDevice","LigatureArray","MarkArray","MarkToBase","MarkToBaseAdjustment","MarkToLigature","MarkToLigatureAdjustment","MarkToMark","MarkToMarkAdjustment","Pair","PairAdjustment","PairSet","PairSets","PositioningSubtable","Single","SingleAdjustment","ValueRecord","ValueRecordsArray","Variation","VariationDevice","anchors","base_coverage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cols","coverage","coverage","coverage","coverage","default","entry","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","inner_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_empty","len","len","len","len","len","ligature_array","ligature_coverage","mark1_coverage","mark2_coverage","mark2_matrix","mark_coverage","mark_coverage","marks","marks","marks","outer_index","parse","rows","sets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x_advance","x_advance_device","x_delta","x_device","x_placement","x_placement_device","y","y_advance","y_advance_device","y_delta","y_device","y_placement","y_placement_device","classes","coverage","coverage","matrix","sets","coverage","coverage","value","values","Alternate","AlternateSet","AlternateSets","AlternateSubstitution","ChainContext","Context","Format1","Format2","Ligature","Ligature","LigatureSet","LigatureSets","LigatureSubstitution","Multiple","MultipleSubstitution","ReverseChainSingle","ReverseChainSingleSubstitution","Sequence","SequenceList","Single","SingleSubstitution","SubstitutionSubtable","alternate_sets","alternates","backtrack_coverages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","coverage","coverage","coverage","coverage","coverage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","glyph","into","into","into","into","into","into","into","into","into","is_reverse","ligature_sets","lookahead_coverages","parse","sequences","substitutes","substitutes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","coverage","coverage","delta","substitutes","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","IndexToLocationFormat","Long","Short","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","global_bbox","index_to_location_format","into","into","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units_per_em","Table","ascender","borrow","borrow_mut","clone","clone_into","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Metrics","Table","advance","advance","bearings","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","metrics","number_of_metrics","parse","parse","side_bearing","side_bearing","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","advance_offset","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","side_bearing_offset","to_owned","try_from","try_into","type_id","Format","Format0","Format1","Format2","Format3","KerningPair","Subtable","Subtable0","Subtable2","Subtable3","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","left","len","next","pair","pairs","parse","parse","parse","parse","parse","right","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable","AnchorPoints","EntryData","Format","Format0","Format1","Format2","Format4","Format6","Subtable","Subtable0","Subtable1","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","action_index","anchor_points","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","get","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","next","pairs","parse","parse","state_table","state_table","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","Long","Short","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_range","into","is_empty","len","parse","to_owned","try_from","try_into","type_id","Constants","GlyphAssembly","GlyphConstruction","GlyphConstructions","GlyphInfo","GlyphPart","GlyphVariant","Kern","KernInfo","KernInfos","MathValue","MathValues","PartFlags","Table","Variants","accent_base_height","advance_measurement","assembly","axis_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constants","count","delimited_sub_formula_min_height","device","display_operator_min_height","end_connector_length","extended_shapes","extender","flattened_accent_base_height","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fraction_denom_display_style_gap_min","fraction_denominator_display_style_shift_down","fraction_denominator_gap_min","fraction_denominator_shift_down","fraction_num_display_style_gap_min","fraction_numerator_display_style_shift_up","fraction_numerator_gap_min","fraction_numerator_shift_up","fraction_rule_thickness","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full_advance","get","get","get","glyph_id","glyph_info","height","horizontal_constructions","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","italic_corrections","italics_correction","kern","kern_infos","lower_limit_baseline_drop_min","lower_limit_gap_min","math_leading","min_connector_overlap","overbar_extra_ascender","overbar_rule_thickness","overbar_vertical_gap","parse","parse","parse","parse","part_flags","parts","radical_degree_bottom_raise_percent","radical_display_style_vertical_gap","radical_extra_ascender","radical_kern_after_degree","radical_kern_before_degree","radical_rule_thickness","radical_vertical_gap","script_percent_scale_down","script_script_percent_scale_down","skewed_fraction_horizontal_gap","skewed_fraction_vertical_gap","space_after_script","stack_bottom_display_style_shift_down","stack_bottom_shift_down","stack_display_style_gap_min","stack_gap_min","stack_top_display_style_shift_up","stack_top_shift_up","start_connector_length","stretch_stack_bottom_shift_down","stretch_stack_gap_above_min","stretch_stack_gap_below_min","stretch_stack_top_shift_up","sub_superscript_gap_min","subscript_baseline_drop_min","subscript_shift_down","subscript_top_max","superscript_baseline_drop_max","superscript_bottom_max_with_subscript","superscript_bottom_min","superscript_shift_up","superscript_shift_up_cramped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_accent_attachments","top_left","top_right","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underbar_extra_descender","underbar_rule_thickness","underbar_vertical_gap","upper_limit_baseline_rise_min","upper_limit_gap_min","value","variant_glyph","variants","variants","vertical_constructions","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","number_of_glyphs","parse","to_owned","try_from","try_into","type_id","Chain","Chains","ChainsIter","Contextual","ContextualEntryData","ContextualSubtable","Coverage","Feature","Insertion","InsertionEntryData","InsertionSubtable","Ligature","LigatureSubtable","NonContextual","Rearrangement","Subtable","SubtableKind","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","current_index","current_insert_index","default_flags","disable_flags","enable_flags","feature_flags","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all_directions","is_backwards","is_logical","is_vertical","kind","kind","ligature_actions","ligatures","lookup","mark_index","marked_insert_index","next","next","parse","parse","parse","parse","setting","state","state","state","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","metric_offset","parse","to_owned","try_from","try_into","type_id","Custom","Iso","Macintosh","Name","Names","NamesIter","PlatformId","Table","Unicode","Windows","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","encoding_id","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_empty","is_unicode","language","language_id","len","name","name_id","name_id","names","next","parse","parse","platform_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","ChainedContextLookup","ChainedSequenceRule","ChainedSequenceRuleSet","ChainedSequenceRuleSets","Class","ClassDefinition","ContextLookup","Coverage","Feature","FeatureIndex","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LanguageIndex","LanguageSystem","LanguageSystemList","LayoutTable","Lookup","LookupFlags","LookupIndex","LookupList","LookupSubtable","LookupSubtables","LookupSubtablesIter","RangeRecord","RecordList","RecordListItem","RecordListIter","Script","ScriptIndex","ScriptList","SequenceLookupRecord","SequenceRule","SequenceRuleSet","SequenceRuleSets","VariationIndex","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","coverage","coverage","default_language","end","feature_indices","features","find","find_index","find_substitute","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","ignore_base_glyphs","ignore_flags","ignore_ligatures","ignore_marks","index","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","languages","len","len","lookahead","lookup_indices","lookup_list_index","lookups","lookups","lookups","mark_attachment_type","mark_filtering_set","next","next","parse","parse","parse","parse","parse","parse","parse","parse","required_feature","right_to_left","scripts","sequence_index","start","subtables","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_mark_filtering_set","value","variations","backtrack_classes","backtrack_coverages","coverage","coverage","coverage","input_classes","input_coverages","lookahead_classes","lookahead_coverages","lookups","sets","sets","classes","records","start","classes","coverage","coverage","coverage","coverages","lookups","sets","sets","glyphs","records","Black","Bold","Condensed","Editable","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Installable","Italic","Light","Medium","Normal","Normal","Normal","Oblique","Other","Permissions","PreviewAndPrint","Restricted","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Table","Thin","UltraCondensed","UltraExpanded","UnicodeRanges","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains_char","default","default","default","default","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","is_bitmap_embedding_allowed","is_bold","is_subsetting_allowed","parse","partial_cmp","partial_cmp","permissions","strikeout_metrics","style","subscript_metrics","superscript_metrics","to_number","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","unicode_ranges","use_typographic_metrics","version","weight","width","windows_ascender","windows_descender","x_height","x_offset","x_size","y_offset","y_size","Names","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","glyph_index_by_name","glyph_name","into","into","into_iter","is_monospaced","italic_angle","names","next","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline_metrics","Strike","Strikes","StrikesIter","Table","best_strike","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_iter","into_iter","is_empty","is_empty","len","len","next","parse","pixels_per_em","ppi","strikes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SvgDocument","SvgDocumentsList","SvgDocumentsListIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","data","documents","end_glyph_id","find","fmt","fmt","fmt","from","from","from","from","get","glyphs_range","into","into","into","into","into_iter","into_iter","is_empty","len","next","parse","start_glyph_id","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","Track","TrackData","Tracks","TracksIter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get","horizontal","into","into","into","into","into","into_iter","into_iter","is_empty","len","name_index","next","parse","sizes","to_owned","to_owned","to_owned","to_owned","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","values","vertical","Table","ascender","borrow","borrow_mut","clone","clone_into","default","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Table","VerticalOriginMetrics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_y","fmt","fmt","from","from","glyph_id","glyph_y_origin","into","into","metrics","parse","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y"],"q":[[0,"ttf_parser"],[833,"ttf_parser::ankr"],[864,"ttf_parser::apple_layout"],[950,"ttf_parser::apple_layout::class"],[953,"ttf_parser::apple_layout::state"],[954,"ttf_parser::avar"],[1009,"ttf_parser::cbdt"],[1023,"ttf_parser::cblc"],[1036,"ttf_parser::cff"],[1076,"ttf_parser::cff2"],[1091,"ttf_parser::cmap"],[1311,"ttf_parser::colr"],[1330,"ttf_parser::cpal"],[1345,"ttf_parser::feat"],[1418,"ttf_parser::fvar"],[1452,"ttf_parser::gdef"],[1490,"ttf_parser::glyf"],[1504,"ttf_parser::gpos"],[1814,"ttf_parser::gpos::PairAdjustment"],[1819,"ttf_parser::gpos::SingleAdjustment"],[1823,"ttf_parser::gsub"],[1962,"ttf_parser::gsub::SingleSubstitution"],[1966,"ttf_parser::gvar"],[1980,"ttf_parser::head"],[2011,"ttf_parser::hhea"],[2028,"ttf_parser::hmtx"],[2061,"ttf_parser::hvar"],[2076,"ttf_parser::kern"],[2213,"ttf_parser::kerx"],[2386,"ttf_parser::loca"],[2404,"ttf_parser::math"],[2678,"ttf_parser::maxp"],[2692,"ttf_parser::morx"],[2912,"ttf_parser::mvar"],[2926,"ttf_parser::name"],[3012,"ttf_parser::name::name_id"],[3037,"ttf_parser::name_id"],[3062,"ttf_parser::opentype_layout"],[3370,"ttf_parser::opentype_layout::ChainedContextLookup"],[3382,"ttf_parser::opentype_layout::ClassDefinition"],[3385,"ttf_parser::opentype_layout::ContextLookup"],[3393,"ttf_parser::opentype_layout::Coverage"],[3395,"ttf_parser::os2"],[3552,"ttf_parser::post"],[3586,"ttf_parser::sbix"],[3644,"ttf_parser::svg"],[3705,"ttf_parser::trak"],[3777,"ttf_parser::vhea"],[3795,"ttf_parser::vorg"],[3826,"core::option"],[3827,"core::cmp"],[3828,"core::ops::function"],[3829,"core::clone"],[3830,"core::cmp"],[3831,"core::fmt"],[3832,"core::fmt"],[3833,"core::result"],[3834,"core::hash"],[3835,"core::ops::range"],[3836,"alloc::string"],[3837,"core::any"],[3838,"core::ops::range"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A grayscale bitmap with 2 bits per pixel.","A packed grayscale bitmap with 2 bits per pixel.","A grayscale bitmap with 4 bits per pixel.","A packed grayscale bitmap with 4 bits per pixel.","A grayscale bitmap with 8 bits per pixel.","A monochrome bitmap.","A packed monochrome bitmap.","A color bitmap with 32 bits per pixel.","","","","","","","","A list of errors that can occur during a CFF glyph …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A font face.","The face index is larger than the number of faces in the …","A list of font face parsing errors.","Parsed face tables.","","","","A 32-bit signed fixed-point number (16.16).","","","","","","","","A trait for parsing raw binary data of fixed size.","","","","","","","","A type-safe wrapper for glyph ID.","","","","","","","","","","","","","","","","","","","","","","","","A form that is generally cursive in nature.","","","","","","","","","","","A <code>Name</code> language.","","","A slice-like container that converts internal binary data …","A slice-like container that converts internal binary data …","An iterator over <code>LazyArray16</code>.","An iterator over <code>LazyArray32</code>.","","A line metrics.","","","","","","","","","An attempt to read out of bounds detected.","","","","","","","","","","","","","","The <code>head</code> table is missing or malformed.","The <code>hhea</code> table is missing or malformed.","","The <code>maxp</code> table is missing or malformed.","","","A face that is neither italic not obliqued.","A variation coordinate in a normalized coordinate system.","","","A typically-sloped version of the regular face.","","","","A trait for glyph outline construction.","","","Face permissions.","A platform ID.","","","","","","","","","A glyph’s raster image.","A glyph raster image format.","A raw font face.","A list of all supported tables as raw data.","","A rectangle.","","A RGBA color in the sRGB color space.","","","","Object’s raw data size.","","","","","","","","","","","A script metrics used by subscript and superscript.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A face style.","","","","A raw table record.","A 4-byte tag.","","","","","","","","","","","","","","","","Unicode Ranges.","","Face data must start with <code>0x00010000</code>, <code>0x74727565</code>, …","","","","","","A font variation value.","A variation axis.","","A face weight.","","A face width.","","","","","","","","An Anchor Point Table implementation.","","","This module contains Apple Advanced Typography Layout …","Returns tag value as <code>u32</code> number.","Returns a horizontal face ascender.","An Axis Variations Table implementation.","","","An axis tag name.","","","Performs a binary search by specified <code>key</code>.","Performs a binary search by specified <code>key</code>.","Performs a binary search using specified closure.","Performs a binary search using specified closure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns face’s capital height.","A Color Bitmap Data Table implementation.","","","A Color Bitmap Location Table implementation.","","A Compact Font Format Table implementation.","","","A Compact Font Format 2 Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","A Character to Glyph Index Mapping Table implementation.","","","","","Returns the number of palettes stored in the <code>COLR</code>+<code>CPAL</code> …","A Color Table implementation.","","","","","A Color Palette Table implementation.","","Appends a CurveTo segment.","A raw image data. It’s up to the caller to decode it.","The input font file data.","","","","","","","","Returns a horizontal face descender.","","","","","","","","","","","","","","","","A Feature Name Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of fonts stored in a TrueType font …","An image format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new coordinate.","Creates a new coordinate.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from provided <code>RawFaceTables</code>.","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","A Font Variations Table implementation.","","","A Glyph Definition Table implementation.","","","Returns a value at <code>index</code>.","Returns a value at <code>index</code>.","Returns the coordinate value as f2.14.","Returns a bounding box that large enough to enclose any …","A Glyph Data Table implementation.","","","Returns a tight glyph bounding box.","Returns glyph’s horizontal advance.","Returns glyph’s horizontal side bearing.","Resolves a Glyph ID for a code point.","Resolves a Glyph ID for a glyph name.","Returns glyph’s name.","Returns a reference to a glyph’s raster image.","Returns a reference to a glyph’s SVG image.","Resolves a variation of a Glyph ID from two code points.","Returns glyph’s vertical advance.","Returns glyph’s vertical side bearing.","Returns glyph’s vertical origin according to Vertical …","A Glyph Positioning Table implementation.","","","","A Glyph Substitution Table implementation.","","","A Glyph Variations Table implementation.","","","Checks that face has non-default variation coordinates.","","","A Font Header Table implementation.","","","Returns rect’s height.","Returns face’s height.","Image height.","A Horizontal Header Table implementation.","","","","A Horizontal/Vertical Metrics Table implementation.","","","A Horizontal/Vertical Metrics Variations Table …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Checks if the face bitmaps embedding is allowed.","Checks that face is marked as <em>Bold</em>.","Returns <code>true</code> if the glyph can be colored/painted using the …","Checks if array is empty.","Checks if the array is empty.","Checks that face is marked as <em>Italic</em>.","Checks that face is marked as <em>Monospaced</em>.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","Checks that face is marked as <em>Oblique</em>.","Checks that face is marked as <em>Regular</em>.","Checks if the face subsetting is allowed.","Checks that face is variable.","","","Returns face’s italic angle.","A Kerning Table implementation.","","","An Extended Kerning Table implementation.","","","Returns the last value.","Returns array’s length.","Returns array’s length.","","Returns a horizontal face line gap.","Appends a LineTo segment.","An Index to Location Table implementation.","","A Math Table implementation.","","","","A Maximum Profile Table implementation.","","","","An Extended Glyph Metamorphosis Table implementation.","","","Appends a MoveTo segment.","A Metrics Variations Table implementation.","","","A Naming Table implementation.","","","A list of name ID’s.","An axis name in the <code>name</code> table.","Returns a list of names.","Creates a new <code>LazyArray</code>.","Creates a new <code>LazyArray</code>.","Creates a new <code>RgbaColor</code>.","","","Returns a total number of glyphs in the face.","","This module contains OpenType Layout supplementary tables …","A OS/2 and Windows Metrics Table implementation.","","","Outlines a glyph and returns its tight bounding box.","Paints a color glyph from the <code>COLR</code> table.","Parses an object from a raw data.","","","","","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","","","Returns face permissions.","A pixels per em of the selected strike.","Line position.","A PostScript Table implementation.","","","Returns the primary language.","Appends a QuadTo segment.","Returns a <code>RangeRecord</code> for a glyph.","Returns the <code>RawFace</code> used to create this <code>Face</code>.","","Returns a language region.","A Standard Bitmap Graphics Table implementation.","","","Sets a variation axis coordinate.","Returns sub-array.","Returns face’s strikeout metrics.","Returns face style.","Returns face’s subscript metrics.","Returns face’s superscript metrics.","An SVG Table implementation.","","","Returns the raw data of a selected table.","Returns the raw data of a selected table.","An array of table records.","Returns low-level face tables.","","","Line thickness.","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","","","","","","","","","","","","","","A Tracking Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a horizontal typographic face ascender.","Returns a horizontal typographic face descender.","Returns a horizontal typographic face line gap.","Returns face’s underline metrics.","Checks if the face bitmaps embedding is allowed.","Returns face’s units per EM.","An axis value.","Returns an iterator over variation axes.","Returns the current normalized variation coordinates.","Returns a vertical face ascender.","Returns a vertical face descender.","Returns a vertical face height.","Returns a vertical face line gap.","A Vertical Header Table implementation.","","","","","A Vertical Origin Table implementation.","","","","","Returns face’s weight.","Returns rect’s width.","Returns face’s width.","Image width.","Horizontal offset.","Returns face’s x height.","","","X offset.","Horizontal face size.","Vertical offset.","","","Y offset.","Vertical face size.","An anchor point.","An Anchor Point Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Parses a table from raw data.","Returns a list of anchor points for the specified glyph.","","","","","","","","","","","An Extended State Table.","A State Table entry.","A lookup table.","A legacy state entry used by StateTable.","A State Table.","A type-safe wrapper for a kerning value offset.","","","","","","","","","","","Predefined classes.","Returns a glyph class.","Returns a glyph class.","","","","","","","","","","","Returns a class entry.","Returns a class entry.","Additional data.","Additional data.","Entry flags.","Entry flags.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If set, advance to the next glyph before going to the new …","If set, remember this glyph as the marked glyph.","Checks that entry has an offset.","If set, push this glyph on the kerning stack.","If set, reset the kerning data (clear the stack).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns kerning at offset.","Produces a new state.","A new state.","A new state.","Returns the next offset.","","Parses an Extended State Table from a stream.","Parses a lookup table from raw data.","Predefined states.","","","","","","","","","","","","","","","","","","","","","Returns a value associated with the specified glyph.","Returns a value offset.","","","","","An axis value map.","A list of segment maps.","An iterator over maps.","An Axis Variations Table.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any segments.","Returns the number of segments.","Maps coordinates.","","","Parses a table from raw data.","The segment maps array — one segment map for each axis …","The modified, normalized coordinate value.","","","","","","","","","","","","","","","","A Color Bitmap Data Table.","","","","","","Returns the argument unchanged.","Returns a raster image for the glyph.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Color Bitmap Location Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","An affine transformation matrix.","A Compact Font Format Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the CID corresponding to a glyph ID.","Resolves a Glyph ID for a code point.","Returns a glyph ID by a name.","Returns a glyph name.","Returns a glyph width.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a font transformation matrix.","Returns a total number of glyphs in the font.","Outlines a glyph.","Parses a table from raw data.","","","","","","","","","","","","","A Compact Font Format 2 Table.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","","A character encoding subtable variant.","Glyph was found in the variation encoding table.","A result of a variation glyph mapping.","","","","","","A character encoding subtable.","A format 0 subtable.","A format 10 subtable.","A format 12 subtable.","A format 13 subtable.","A format 14 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of subtables.","An iterator over <code>Subtables</code>.","A Character to Glyph Index Mapping Table.","","","","Glyph should be looked in other, non-variation tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for all codepoints contained in this subtable.","","Subtable encoding.","","First character code covered.","First character code of subrange.","","","","","","","","","","","","","","A subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a subtable at an index.","Just a list of 256 8bit glyph IDs.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Maps a character to a glyph ID.","Resolves a variation of a glyph ID from two code points.","Array of glyph indices for the character codes covered.","Array of glyph indexes for character codes in the range.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any subtables.","Checks that the current encoding is Unicode compatible.","Returns the number of subtables.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Subtable platform.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait for color glyph painting.","A Color Table.","","","","","Whether the table contains a definition for the given …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph and stores it until the next paint …","Paints the color glyph.","Paints the current glyph outline using the provided color.","Paints the current glyph outline using the application …","Parses a table from raw data.","","","","","A Color Palette Table.","","","","","","Returns the argument unchanged.","Returns the color at the given index into the given …","Calls <code>U::from(self)</code>.","Returns the number of palettes.","Parses a table from raw data.","","","","","A feature names.","A list fo feature names.","An iterator over <code>FeatureNames</code>.","A setting name.","A Feature Name Table.","","","","","","","","","","","","","","","","","","","The index of the default setting in the <code>setting_names</code>.","The feature’s exclusive settings. If set, the feature …","The feature’s ID.","Finds a feature name by ID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a feature name at an index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any feature names.","Returns the number of feature names.","The <code>name</code> table index for the feature’s name in a …","The <code>name</code> table index for the feature’s name in a …","A list of feature names. Sorted by <code>FeatureName.feature</code>.","","","Parses a table from raw data.","The setting.","The feature’s setting names.","","","","","","","","","","","","","","","","","","","","A Font Variations Table.","A variation axis.","A list of variation axes.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An axis name in the <code>name</code> table.","","Parses a table from raw data.","","","","","","","","","","","","A glyph class.","","","A Glyph Definition Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns glyph’s class according to Glyph Class …","Returns glyph’s mark attachment class according to Mark …","Returns glyph’s variation delta at a specified index …","Checks that face has Glyph Class Definition Table.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that glyph is a mark according to Mark Glyph Sets …","Parses a table from raw data.","","","","","","","","","","A Glyph Data Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An Anchor Table.","An <code>Anchor</code> parsing helper.","","A <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.","","","A Cursive Attachment Positioning Subtable.","A list of entry and exit <code>Anchor</code> pairs.","A Device Table.","","","","","","A Device Table hinting values.","An array or ligature anchor matrices.","A Mark Array.","","A Mark-to-Base Attachment Positioning Subtable.","","A Mark-to-Ligature Attachment Positioning Subtable.","","A Mark-to-Mark Attachment Positioning Subtable.","","A Pair Adjustment Positioning Subtable.","A <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.","A list of <code>PairSet</code>s.","A glyph positioning lookup subtable enumeration.","","A Single Adjustment Positioning Subtable.","A Value Record.","An array of Value Records.","","A Device Table indexes into Item Variation Store.","An anchors matrix.","A base coverage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of columns in the matrix.","Returns the subtable coverage.","Returns the subtable coverage.","Returns the subtable coverage.","","","Returns an entry <code>Anchor</code> at index.","Returns an exit <code>Anchor</code> at index.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>ValueRecord</code> at index.","Returns a <code>ValueRecord</code> pair using the second glyph.","Returns a value at <code>index</code>.","Returns a <code>ValueRecord</code> pair using specified classes.","Returns an <code>AnchorMatrix</code> at index.","Returns contained data at index.","Returns an <code>Anchor</code> at position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the array is empty.","Checks if the array is empty.","Checks if the set is empty.","Checks if the array is empty.","Checks if the array is empty.","Returns array’s length.","Returns array’s length.","Returns the number of items.","Returns the array length.","Returns the array length.","","","","","","A mark coverage.","","A list of mark anchors.","","","","","Number of rows in the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal value, in design units.","Horizontal adjustment for advance, in design units — …","A <code>Device</code> table with horizontal adjustment for advance.","Returns X-axis delta.","A <code>Device</code> table with horizontal value.","Horizontal adjustment for placement, in design units.","A <code>Device</code> table with horizontal adjustment for placement.","Vertical value, in design units.","Vertical adjustment for advance, in design units — only …","A <code>Device</code> table with vertical adjustment for advance.","Returns Y-axis delta.","A <code>Device</code> table with vertical value.","Vertical adjustment for placement, in design units.","A <code>Device</code> table with vertical adjustment for placement.","","","","","","","","","","","A list of glyphs for Alternate Substitution Subtable.","A set of <code>AlternateSet</code>.","A Alternate Substitution Subtable.","","","","","Glyph components for one ligature.","","A <code>Ligature</code> set.","A list of <code>Ligature</code> sets.","A Ligature Substitution Subtable.","","A Multiple Substitution Subtable.","","A Reverse Chaining Contextual Single Substitution Subtable.","A sequence of glyphs for Multiple Substitution Subtable.","A list of <code>Sequence</code> tables.","","A Single Substitution Subtable.","A glyph substitution lookup subtable enumeration.","","Array of alternate glyph IDs, in arbitrary order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyph components for one ligature.","Returns the subtable coverage.","Returns the subtable coverage.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ligature to substitute.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that the current subtable is <em>Reverse Chaining </em>…","","","","","A list of substitute glyphs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Glyph Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An index format used by the Index to Location Table.","","","A Font Header Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A bounding box that large enough to enclose any glyph from …","An index format used by the Index to Location Table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","","","","","Units per EM.","A Horizontal Header Table.","Face ascender.","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>hmtx</code> table.","Parses a table from raw data.","","","","","Horizontal/Vertical Metrics.","A Horizontal/Vertical Metrics Table.","Returns advance for a glyph.","Width/Height advance for <code>hmtx</code>/<code>vmtx</code>.","Side bearings for glyph IDs greater than or equal to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics indexed by glyph ID.","Sum of long metrics + bearings.","","Parses a table from raw data.","Returns side bearing for a glyph.","Left/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.","","","","","","","","","A Horizontal/Vertical Metrics Variations Table.","Returns advance offset for a glyph.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","Returns side bearing offset for a glyph.","","","","","A kerning subtable format.","","","","","A kerning pair.","A kerning subtable.","A format 0 subtable.","A format 2 subtable.","A format 3 subtable.","A list of subtables.","An iterator over kerning subtables.","A Kerning Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any subtables.","Returns left glyph ID.","Returns the number of subtables.","","Glyphs pair.","A list of kerning pairs.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Returns right glyph ID.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kerning value.","Indicates that subtable is variable.","A container of Anchor Points used by <code>Subtable4</code>.","A state machine entry.","An extended kerning subtable format.","","","","","","A kerning subtable.","A format 0 subtable.","A format 1 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of extended kerning subtables.","An iterator over extended kerning subtables.","An Extended Kerning Table.","An action index.","Anchor points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mark and current anchor points at action index.","Returns kerning for a pair of glyphs.","Returns kerning at action index.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A list of kerning pairs.","","Parses a table from raw data.","A state table.","A state table.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tuple count.","","","","","","","","","","","","","Indicates that subtable is variable.","Long offsets.","Short offsets.","An Index to Location Table.","","","","","","Returns the argument unchanged.","Returns glyph’s range in the <code>glyf</code> table.","Calls <code>U::from(self)</code>.","Checks if there are any offsets.","Returns the number of offsets.","Parses a table from raw data.","","","","","A Math Constants Table.","A Glyph Assembly Table.","A Math Glyph Construction Table.","A mapping from glyphs to Math Glyph Construction Tables.","A Math Glyph Info Table.","Details for a glyph part in an assembly.","Description of math glyph variants.","A Math Kern Table.","An entry in a Math Kern Info Table.","A Math Kern Info Table.","A Math Value with optional device corrections.","A mapping from glyphs to Math Values.","Glyph part flags.","A Math Table.","A Math Variants Table.","Maximum (ink) height of accent base that does not require …","Advance width/height, in design units, of the variant …","A general recipe on how to construct a variant with large …","Axis height of the font.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kerning data for the bottom-left corner.","The kerning data for the bottom-right corner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Math positioning constants.","Number of heights at which the kern value changes.","Minimum height required for a delimited expression …","Device corrections for this value.","Minimum height of n-ary operators (such as integral and …","Lengths of the connectors on the end of the glyph, in font …","Glyphs which are <em>extended shapes</em>.","","Maximum (ink) height of accent base that does not require …","","","","","","","","","","","","","","","","Minimum tolerated gap between the (ink) top of the …","Standard shift down applied to the denominator in display …","Minimum tolerated gap between the (ink) top of the …","Standard shift down applied to the denominator.","Minimum tolerated gap between the (ink) bottom of the …","Standard shift up applied to the numerator in display …","Minimum tolerated gap between the (ink) bottom of the …","Standard shift up applied to the numerator.","Thickness of the fraction bar.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The full advance of the part, in font design units.","Returns the value for the glyph or <code>None</code> if it is not …","Returns the kerning info for the glyph or <code>None</code> if it is …","Returns the construction for the glyph or <code>None</code> if it is …","Glyph ID for the part.","Per-glyph positioning information.","The correction height at the given index.","Constructions for shapes growing in the horizontal …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Per-glyph italics correction values.","The italics correction of the assembled glyph.","The kern value at the given index.","Per-glyph information for mathematical kerning.","Minimum distance between baseline of the lower limit and …","Minimum gap between (ink) top of the lower limit, and …","White space to be left between math formulas to ensure …","Minimum overlap of connecting glyphs during glyph …","Extra white space reserved above the overbar.","Thickness of overbar.","Distance between the overbar and the (ink) top of he base.","","","","Parses a table from raw data.","Part flags.","Parts the assembly is composed of.","Height of the bottom of the radical degree, if such is …","Space between the (ink) top of the expression and the bar …","Extra white space reserved above the radical.","Negative kern after the degree of a radical, if such is …","Extra horizontal kern before the degree of a radical, if …","Thickness of the radical rule.","Space between the (ink) top of the expression and the bar …","Percentage of scaling down for level 1 superscripts and …","Percentage of scaling down for level 2 (scriptScript) …","Horizontal distance between the top and bottom elements of …","Vertical distance between the ink of the top and bottom …","Extra white space to be added after each subscript and …","Standard shift down applied to the bottom element of a …","Standard shift down applied to the bottom element of a …","Minimum gap between (ink) bottom of the top element of a …","Minimum gap between (ink) bottom of the top element of a …","Standard shift up applied to the top element of a stack in …","Standard shift up applied to the top element of a stack.","Lengths of the connectors on the start of the glyph, in …","Standard shift down applied to the bottom element of the …","Minimum gap between the ink of the stretched element, and …","Minimum gap between the ink of the stretched element, and …","Standard shift up applied to the top element of the …","Minimum gap between the superscript and subscript ink.","Minimum allowed drop of the baseline of subscripts …","The standard shift down applied to subscript elements.","Maximum allowed height of the (ink) top of subscripts that …","Maximum allowed drop of the baseline of superscripts …","The maximum level to which the (ink) bottom of superscript …","Minimum allowed height of the (ink) bottom of superscripts …","Standard shift up applied to superscript elements.","Standard shift of superscripts relative to the base, in …","","","","","","","","","","","","","","","","Per-glyph horizontal positions for attaching mathematical …","The kerning data for the top-left corner.","The kerning data for the top-right corner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra white space reserved below the underbar.","Thickness of underbar.","Distance between underbar and (ink) bottom of the base.","Minimum distance between baseline of upper limit and (ink) …","Minimum gap between the (ink) bottom of the upper limit, …","The X or Y value in font design units.","The ID of the variant glyph.","Prepared variants of the glyph with varying advances.","Variants and assembly recipes for growable glyphs.","Constructions for shapes growing in the vertical direction.","A Maximum Profile Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The total number of glyphs in the face.","Parses a table from raw data.","","","","","A metamorphosis chain.","A list of metamorphosis chains.","An iterator over metamorphosis chains.","","A contextual subtable state table trailing data.","A contextual subtable.","A subtable coverage.","The feature table is used to compute the sub-feature flags …","","A contextual subtable state table trailing data.","An insertion subtable.","","A ligature subtable.","","","A subtable in a metamorphosis chain.","A subtable kind.","A list of subtables in a metamorphosis chain.","An iterator over a metamorphosis chain subtables.","An Extended Glyph Metamorphosis Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of metamorphosis chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ligature components.","A subtable coverage.","A current index.","A current insert index.","Default chain features.","Complement of flags for the settings that this feature and …","Flags for the settings that this feature and setting …","Subtable feature flags.","A list of chain features.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insertion glyphs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, this subtable will be applied to both horizontal …","If true, this subtable will process glyphs in descending …","If true, this subtable will process glyphs in logical order","If true, this subtable will only be applied to vertical …","The type of feature.","A subtable kind.","Ligature actions.","Ligatures.","Returns a Lookup at index.","A mark index.","A marked insert index.","","","","","","Parses a table from raw data.","The feature’s setting (aka selector).","The contextual glyph substitution state table.","A state table.","A state table.","A list of chain subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Metrics Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a metric offset by tag.","Parses a table from raw data.","","","","","","","","A Name Record.","A list of face names.","An iterator over face names.","A platform ID.","A Naming Table.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform-specific encoding ID.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a name at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any name records.","Checks that the current Name data has a Unicode encoding.","Returns a Name language.","A language ID.","Returns a number of name records.","A raw name data.","A list of name ID’s.","A Name ID.","A list of names.","","","Parses a table from raw data.","A platform ID.","","","","","","Returns the Name’s data as a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Chained Contextual Lookup Subtable.","A Chained Sequence Rule.","A set of <code>ChainedSequenceRule</code>.","A list of <code>ChainedSequenceRule</code> sets.","A value of Class Definition Table.","A Class Definition Table.","A Contextual Lookup Subtable.","A Coverage Table.","A Feature.","An index in <code>FeatureList</code>.","A list of <code>Feature</code> records.","A Feature Variations Table.","Simple glyph contexts.","Simple glyph contexts.","","","Class-based glyph contexts.","Class-based glyph contexts.","","","Coverage-based glyph contexts.","Coverage-based glyph contexts.","An index in <code>LanguageSystemList</code>.","A Language System Table.","A list of <code>LanguageSystem</code> records.","A Layout Table.","A Lookup Table.","Lookup table flags.","An index in <code>LookupList</code>.","A list of <code>Lookup</code> values.","A trait for parsing Lookup subtables.","A list of lookup subtables.","An iterator over lookup subtables.","A record that describes a range of glyph IDs.","A data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …","A trait to parse item in <code>RecordList</code>.","An iterator over <code>RecordList</code> values.","A Script Table.","An index in <code>ScriptList</code>.","A list of <code>Script</code> records.","A sequence rule record.","A sequence rule.","A set of <code>SequenceRule</code>s.","A list of <code>SequenceRuleSet</code>s.","An index in <code>FeatureVariations</code>.","Contains either glyph IDs or glyph Classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that glyph is present.","Returns the subtable coverage.","Returns the subtable coverage.","Default language.","Last glyph ID in the range","Array of indices into the FeatureList, in arbitrary order.","A list of all supported features.","Returns RecordList value by <code>Tag</code>.","Returns a <code>VariationIndex</code> for variation coordinates.","Returns a <code>Feature</code> at specified indices.","Lookup qualifiers.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns RecordList value by index.","Parses a subtable at index.","Returns the coverage index of the glyph or <code>None</code> if it is …","Returns the glyph class of the glyph (zero if it is not …","","","","","Returns RecordList value index by <code>Tag</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates an iterator over subtables.","Checks that RecordList is empty.","Checks if there are any items.","List of supported languages, excluding the default one. …","Returns a number of items in the RecordList.","Returns a number of items in the LookupSubtables.","Contains either glyph IDs or glyph Classes.","","","","","A list of all lookups.","","Index into GDEF mark glyph sets structure.","","","Parses raw data.","Parses raw data.","","","","","","","Index of a feature required for this language system.","","A list of all supported scripts.","","First glyph ID in the range","Available subtables.","Script tag.","Language tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coverage Index of first glyph ID in range.","Used to substitute an alternate set of lookup tables to …","","","","","","","","","","","","","","","","","","","","","","","","Array of glyph IDs. Sorted.","Array of glyph ranges. Ordered by <code>RangeRecord.start</code>.","","","","","","","","","","","A form that is generally cursive in nature.","","","","","A face that is neither italic not obliqued.","A typically-sloped version of the regular face.","","Face permissions.","","","A script metrics used by subscript and superscript.","","","","A face style.","A OS/2 and Windows Metrics Table.","","","","Unicode Ranges.","A face weight.","A face width.","","","","","","","","","","","","","","","Returns capital height.","","","","","","","","","","","","","","","","","Checks if ranges contain the specified character.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the face bitmaps embedding is allowed.","Checks if face is bold.","Checks if the face subsetting is allowed.","Parses a table from raw data.","","","Returns face permissions.","Returns strikeout metrics.","Returns style.","Returns subscript metrics.","Returns superscript metrics.","Returns a numeric representation of a weight.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns typographic ascender.","Returns typographic descender.","Returns typographic line gap.","Returns Unicode ranges.","Checks if typographic metrics should be used.","Table version.","Returns weight class.","Returns face width.","Returns Windows ascender.","Returns Windows descender.","Returns x height.","X offset.","Horizontal face size.","Y offset.","Vertical face size.","An iterator over glyph names.","A PostScript Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph ID by a name.","Returns a glyph name by ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Flag that indicates that the font is monospaced.","Italic angle in counter-clockwise degrees from the …","Returns an iterator over glyph names.","","Parses a table from raw data.","","","","","","","","","Underline metrics.","A strike of glyphs.","A list of <code>Strike</code>s.","An iterator over <code>Strikes</code>.","A Standard Bitmap Graphics Table.","Selects the best matching <code>Strike</code> based on <code>pixels_per_em</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph data.","Returns a strike at the index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any glyphs.","Checks if there are any strikes.","Returns the number of glyphs in this strike.","Returns the number of strikes.","","Parses a table from raw data.","The pixels per EM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A list of <code>Strike</code>s.","","","","","","","","","","","","","","","","An SVG documents.","A list of SVG documents.","An iterator over <code>SvgDocumentsList</code> values.","An SVG Table.","","","","","","","","","","","","","","","","","","The SVG document data.","A list of SVG documents.","The last glyph ID, <em>inclusive</em>, for the range covered by …","Returns a SVG document data by glyph ID.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns SVG document data at index.","Returns the glyphs range.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if the list is empty.","Returns the number of SVG documents in the list.","","Parses a table from raw data.","The first glyph ID for the range covered by this record.","","","","","","","","","","","","","","","","","A Tracking Table.","A single track.","A track data.","A list of tracks.","An iterator over <code>Tracks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a track at index.","Horizontal track data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if there are any tracks.","Returns the number of tracks.","The <code>name</code> table index for the track’s name.","","Parses a table from raw data.","A list of sizes.","","","","","A list of tracks.","","","","","","","","","","","","","","","","A track value.","A list of tracking values for each size.","Vertical track data.","A Vertical Header Table.","Face ascender.","","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>vmtx</code> table.","Parses a table from raw data.","","","","","A Vertical Origin Table.","Vertical origin metrics for the Vertical Origin Table.","","","","","","","","","Default origin.","","","Returns the argument unchanged.","Returns the argument unchanged.","Glyph ID.","Returns glyph’s Y origin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics for each glyph.","","Parses a table from raw data.","","","","","","","","","Y coordinate, in the font’s design coordinate system, of …"],"i":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,18,13,13,13,25,25,25,25,25,25,25,25,61,18,61,13,13,13,13,0,13,13,13,13,13,13,62,13,13,13,198,13,13,13,18,13,13,13,52,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,62,61,62,62,61,0,28,0,0,13,13,13,0,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,52,13,13,18,18,18,18,18,18,13,198,13,13,55,13,13,13,13,13,13,13,13,13,13,0,13,13,0,0,0,0,61,0,13,13,13,13,198,13,13,13,28,13,13,13,13,61,18,18,13,13,13,13,18,18,28,28,18,28,61,62,55,0,13,13,55,13,13,61,0,25,13,0,0,13,13,13,52,13,13,13,13,0,0,0,0,18,0,52,0,13,13,13,10,13,13,13,13,13,13,13,13,13,13,0,61,62,62,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,0,0,13,13,13,13,13,13,61,13,13,13,13,13,62,62,198,0,13,28,18,13,13,13,13,0,0,13,0,13,0,198,13,13,13,13,18,24,0,30,31,0,1,3,0,30,31,21,30,31,5,11,5,11,30,24,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,3,0,30,31,0,30,0,30,31,0,30,31,27,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,50,0,30,31,19,1,3,0,30,31,16,17,0,30,50,26,29,60,5,16,11,19,20,30,3,30,31,30,13,18,19,20,21,1,22,23,24,25,26,28,0,30,31,13,13,14,5,11,18,19,20,21,1,1,22,23,24,25,26,27,28,28,29,3,0,26,13,14,5,16,11,17,18,19,20,20,20,21,1,22,23,24,25,26,27,28,29,30,31,3,1,1,3,29,3,0,30,31,0,30,31,5,11,20,3,0,30,31,3,3,3,3,3,3,3,3,3,3,3,3,0,30,31,24,0,30,31,0,30,31,3,19,1,0,30,31,23,3,26,0,30,31,60,0,30,31,0,30,31,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,5,16,11,17,3,3,3,5,11,3,3,1,3,3,3,3,13,13,3,0,30,31,0,30,31,5,5,11,27,3,50,0,30,0,30,31,60,0,30,31,60,0,30,31,50,0,30,31,0,30,31,0,60,3,5,11,24,16,17,3,27,0,0,30,31,3,3,10,14,19,1,27,29,3,19,1,3,26,22,0,30,31,13,50,5,3,24,13,0,30,31,3,5,3,3,3,3,0,30,31,29,3,29,3,60,27,22,1,1,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,13,1,28,0,30,31,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,13,14,5,16,11,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,3,3,3,3,3,3,3,21,3,3,3,3,3,3,0,30,31,30,31,0,30,31,30,31,3,23,3,26,26,3,23,23,56,56,26,23,23,56,56,0,0,63,64,63,64,63,64,63,64,63,63,63,64,63,64,63,64,63,64,64,63,64,63,64,63,64,63,64,63,63,0,0,0,0,0,0,67,68,65,66,69,67,68,65,66,69,0,65,66,67,68,65,66,69,67,68,65,66,69,65,66,70,67,70,67,67,68,65,66,69,67,68,65,66,69,67,67,67,67,67,67,68,65,66,69,65,65,70,67,68,67,66,69,0,67,68,65,66,69,67,68,65,66,69,67,68,65,66,69,67,68,65,66,69,69,67,0,0,0,0,0,0,0,0,74,71,72,73,74,71,72,73,71,72,73,71,72,73,71,72,73,74,71,72,73,71,74,71,72,73,74,72,72,72,73,74,71,73,73,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,0,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,0,0,77,78,77,78,77,78,77,78,77,77,78,77,78,78,78,78,78,78,77,78,77,77,78,78,78,78,77,77,77,78,77,78,77,78,77,77,77,78,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,89,0,84,0,89,89,89,89,89,0,0,0,0,0,0,0,0,0,0,0,0,89,89,89,84,93,80,81,82,83,84,85,86,87,88,89,90,91,92,93,80,81,82,83,84,85,86,87,88,89,90,91,92,80,81,82,83,84,85,86,87,88,89,90,91,92,80,81,82,83,84,85,86,87,88,89,90,91,92,80,81,82,83,86,87,88,90,91,90,84,81,88,80,81,82,83,84,85,86,87,88,89,90,91,92,90,93,80,81,82,83,84,85,86,87,88,89,90,91,92,91,80,80,81,82,83,85,86,87,88,90,90,81,88,93,80,81,82,83,84,85,86,87,88,89,90,91,92,93,91,91,90,91,93,80,81,82,83,85,86,87,88,92,90,92,80,81,82,83,84,85,86,87,88,89,90,91,92,93,80,81,82,83,84,85,86,87,88,89,90,91,92,93,80,81,82,83,84,85,86,87,88,89,90,91,92,93,80,81,82,83,84,85,86,87,88,89,90,91,92,0,0,94,94,94,94,94,94,94,94,51,94,51,51,94,94,94,94,94,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,0,0,0,100,96,97,98,99,100,96,97,98,99,96,97,98,99,96,97,98,99,97,97,97,98,96,97,98,99,100,96,97,98,99,98,100,96,97,98,99,100,98,98,98,96,97,99,100,96,99,96,97,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,0,0,101,60,101,60,101,60,101,60,101,60,60,60,101,60,101,60,60,101,60,60,60,60,101,60,60,101,60,101,60,101,60,101,102,102,0,102,102,0,102,103,102,103,102,103,102,103,102,103,102,102,102,103,103,103,103,103,102,102,103,103,103,102,102,103,102,103,102,103,102,103,0,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,126,0,126,126,0,0,0,112,116,112,116,109,0,0,0,126,0,126,0,126,0,126,0,0,0,0,126,0,0,0,109,0,119,119,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,124,112,116,126,118,110,117,117,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,111,113,114,115,121,122,124,108,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,111,114,117,121,122,111,114,117,121,122,120,120,125,125,125,119,120,119,120,125,108,126,124,118,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,123,110,110,107,123,110,110,123,110,110,107,123,110,110,242,243,242,242,243,244,245,244,245,137,0,0,0,137,137,129,129,0,137,0,0,0,137,0,137,0,0,0,137,0,0,133,132,136,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,134,129,137,131,133,135,136,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,134,129,130,131,132,133,134,135,136,137,137,135,136,137,131,130,136,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,129,130,131,132,133,134,135,136,137,246,247,246,247,0,138,138,138,138,138,138,138,138,138,138,138,138,138,0,139,139,0,139,140,139,140,139,140,139,140,139,139,140,139,140,140,140,139,140,140,139,140,139,140,139,140,139,140,140,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,0,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,142,142,143,142,142,143,143,142,143,142,143,142,143,142,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,146,146,146,146,0,0,0,0,0,0,0,0,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,149,145,146,147,148,150,151,152,153,147,145,146,147,148,149,150,151,152,153,147,150,151,152,147,147,147,145,146,147,148,149,150,151,152,153,148,149,148,145,148,149,145,150,145,150,151,152,153,145,153,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,147,0,0,0,161,161,161,161,161,0,0,0,0,0,0,0,0,0,155,159,154,155,156,157,158,159,160,161,162,163,164,165,154,155,156,157,158,159,160,161,162,163,164,165,154,155,156,157,158,159,160,161,162,163,164,165,154,155,156,157,158,159,160,161,162,163,164,165,156,159,154,155,156,157,158,159,160,161,162,163,165,162,154,155,156,157,158,159,160,161,162,163,164,165,158,154,156,157,160,162,162,162,162,154,155,156,157,158,159,160,161,162,163,164,165,163,164,164,154,155,165,156,159,165,154,155,156,157,158,159,160,161,162,163,164,165,154,155,156,157,158,159,160,161,162,163,164,165,154,155,156,157,158,159,160,161,162,163,164,165,162,154,155,156,157,158,159,160,161,162,163,164,165,162,106,106,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,176,177,166,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,170,170,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,180,169,166,167,166,174,172,173,166,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,166,166,166,166,166,166,166,166,166,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,174,168,171,178,174,180,169,179,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,172,175,169,172,166,166,166,179,166,166,166,173,174,176,180,174,175,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,174,166,166,166,166,166,166,166,166,166,166,166,166,166,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,172,170,170,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,167,168,166,169,170,171,172,173,174,175,176,177,178,179,180,166,166,166,166,166,167,176,177,180,179,0,181,181,181,181,181,181,181,181,181,181,181,181,181,0,0,0,188,0,0,0,0,188,0,0,188,0,188,188,0,0,0,0,0,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,185,190,183,186,193,182,182,190,193,182,183,184,185,186,187,188,189,190,191,193,194,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,187,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,191,192,194,195,189,189,189,189,182,190,185,185,184,183,186,192,195,182,183,186,196,182,184,185,187,193,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,0,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,0,0,0,0,0,198,198,198,199,49,200,201,198,199,49,200,201,198,199,49,200,201,198,199,49,200,201,200,49,201,199,198,198,199,49,201,198,199,49,200,201,49,198,199,49,200,201,49,200,49,199,199,199,49,199,0,199,201,200,198,201,199,198,199,49,200,201,199,198,199,49,200,201,198,199,49,200,201,198,199,49,200,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,204,127,217,202,204,127,217,202,204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,127,202,204,211,53,212,208,209,207,207,214,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,209,215,127,217,216,216,216,216,209,203,205,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,209,215,209,215,211,209,215,203,213,206,203,205,208,216,214,222,221,210,220,206,211,212,213,216,53,212,216,208,206,53,214,211,212,213,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,222,221,202,203,204,205,206,207,208,209,211,212,213,214,215,216,53,127,217,216,53,208,248,249,250,248,249,248,249,248,249,249,250,248,251,252,251,253,254,253,255,255,255,254,253,256,257,61,61,62,52,62,61,62,62,61,52,55,61,61,61,62,55,55,61,0,52,52,0,61,62,62,0,0,61,62,62,0,0,0,61,62,52,55,56,59,223,61,62,52,55,56,59,223,223,61,62,52,55,56,59,223,61,62,52,55,56,59,223,62,52,59,61,62,55,59,61,62,52,55,56,61,62,52,55,56,59,223,61,61,62,52,55,56,59,223,61,62,52,55,56,61,62,52,55,56,59,223,223,223,223,223,62,52,223,223,223,223,223,61,62,61,62,52,55,56,59,223,61,62,52,55,56,59,223,61,62,52,55,56,59,223,61,62,52,55,56,59,223,223,223,223,223,223,223,223,223,223,223,223,56,56,56,56,0,0,224,225,224,225,224,225,224,225,224,224,225,224,225,225,225,224,225,224,225,225,225,224,225,224,225,224,225,224,225,224,225,225,0,0,0,0,226,229,227,228,226,229,227,228,226,227,228,226,227,228,226,227,228,226,229,227,228,226,227,228,229,227,228,226,229,228,227,228,227,228,229,226,227,227,226,227,228,226,229,227,228,226,229,227,228,226,229,227,228,226,0,0,0,0,47,230,231,232,47,230,231,232,47,230,231,232,47,230,231,232,231,47,232,47,230,47,230,232,47,230,231,232,230,47,47,230,231,232,230,231,230,230,231,232,47,47,230,231,232,47,230,231,232,47,230,231,232,47,230,231,232,0,0,0,0,0,238,234,235,236,237,238,234,235,236,237,234,235,236,237,234,235,236,237,235,236,234,235,236,237,238,234,235,236,237,235,237,238,234,235,236,237,238,235,235,235,234,238,237,236,234,235,236,237,236,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,234,234,237,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,240,241,240,241,240,241,240,241,241,240,241,240,241,240,241,240,241,241,240,241,240,241,240,241,240,241,240,241,240],"fc":[514,515,693],"p":[[3,"Tag",0],[15,"u32"],[3,"Face",0],[15,"i16"],[3,"LazyArray16",0],[15,"u16"],[15,"tuple"],[4,"Option",3826],[8,"Ord",3827],[8,"FromData",0],[3,"LazyArray32",0],[8,"FnMut",3828],[4,"Language",0],[3,"Fixed",0],[8,"Clone",3829],[3,"LazyArrayIter16",0],[3,"LazyArrayIter32",0],[4,"CFFError",0],[3,"GlyphId",0],[3,"NormalizedCoordinate",0],[3,"Variation",0],[3,"LineMetrics",0],[3,"Rect",0],[3,"RgbaColor",0],[4,"RasterImageFormat",0],[3,"RasterGlyphImage",0],[3,"TableRecord",0],[4,"FaceParsingError",0],[3,"RawFace",0],[3,"RawFaceTables",0],[3,"FaceTables",0],[4,"Ordering",3827],[3,"NonZeroU16",3830],[15,"usize"],[15,"f32"],[15,"bool"],[3,"Formatter",3831],[6,"Result",3831],[8,"Debug",3831],[8,"Copy",3832],[15,"u8"],[15,"slice"],[15,"array"],[4,"Result",3833],[15,"char"],[15,"str"],[3,"SvgDocument",3644],[8,"Hasher",3834],[3,"Names",2926],[8,"OutlineBuilder",0],[8,"Painter",1311],[4,"Permissions",3395],[3,"RangeRecord",3062],[3,"Range",3835],[4,"Style",3395],[3,"ScriptMetrics",3395],[3,"String",3836],[3,"TypeId",3837],[3,"UnicodeRanges",3395],[3,"VariationAxis",1418],[4,"Weight",3395],[4,"Width",3395],[3,"Point",833],[3,"Table",833],[3,"StateTable",864],[3,"ExtendedStateTable",864],[3,"GenericStateEntry",864],[3,"ValueOffset",864],[3,"Lookup",864],[6,"StateEntry",864],[3,"AxisValueMap",954],[3,"SegmentMaps",954],[3,"Table",954],[3,"SegmentMapsIter",954],[3,"Table",1009],[3,"Table",1023],[3,"Matrix",1036],[3,"Table",1036],[3,"Table",1076],[3,"Subtable0",1091],[3,"Subtable10",1091],[3,"Subtable12",1091],[3,"Subtable13",1091],[4,"GlyphVariationResult",1091],[3,"Subtable14",1091],[3,"Subtable2",1091],[3,"Subtable4",1091],[3,"Subtable6",1091],[4,"Format",1091],[3,"Subtable",1091],[3,"Subtables",1091],[3,"Table",1091],[3,"SubtablesIter",1091],[3,"Table",1311],[3,"Table",1330],[3,"SettingName",1345],[3,"FeatureName",1345],[3,"FeatureNames",1345],[3,"Table",1345],[3,"FeatureNamesIter",1345],[3,"Table",1418],[4,"GlyphClass",1452],[3,"Table",1452],[6,"Class",3062],[3,"Table",1490],[4,"Table",2386],[3,"HintingDevice",1504],[3,"VariationDevice",1504],[4,"Device",1504],[3,"ValueRecord",1504],[3,"ValueRecordsArray",1504],[4,"SingleAdjustment",1504],[3,"PairSet",1504],[3,"PairSets",1504],[3,"ClassMatrix",1504],[4,"PairAdjustment",1504],[3,"CursiveAnchorSet",1504],[3,"CursiveAdjustment",1504],[3,"MarkToBaseAdjustment",1504],[3,"MarkToLigatureAdjustment",1504],[3,"LigatureArray",1504],[3,"MarkArray",1504],[3,"Anchor",1504],[3,"AnchorMatrix",1504],[3,"MarkToMarkAdjustment",1504],[4,"PositioningSubtable",1504],[4,"Coverage",3062],[15,"i32"],[4,"SingleSubstitution",1823],[3,"Sequence",1823],[3,"MultipleSubstitution",1823],[3,"AlternateSet",1823],[3,"AlternateSubstitution",1823],[3,"Ligature",1823],[3,"LigatureSubstitution",1823],[3,"ReverseChainSingleSubstitution",1823],[4,"SubstitutionSubtable",1823],[3,"Table",1966],[4,"IndexToLocationFormat",1980],[3,"Table",1980],[3,"Table",2011],[3,"Table",2028],[3,"Metrics",2028],[3,"Table",2061],[3,"KerningPair",2076],[4,"Format",2076],[3,"Subtable",2076],[3,"Subtables",2076],[3,"SubtablesIter",2076],[3,"Subtable0",2076],[3,"Subtable2",2076],[3,"Subtable3",2076],[3,"Table",2076],[3,"Subtable0",2213],[3,"EntryData",2213],[3,"Subtable1",2213],[3,"Subtable2",2213],[3,"AnchorPoints",2213],[3,"Subtable4",2213],[3,"Subtable6",2213],[4,"Format",2213],[3,"Subtable",2213],[3,"Subtables",2213],[3,"SubtablesIter",2213],[3,"Table",2213],[3,"Constants",2404],[3,"MathValue",2404],[3,"MathValues",2404],[3,"Kern",2404],[3,"KernInfo",2404],[3,"KernInfos",2404],[3,"GlyphInfo",2404],[3,"PartFlags",2404],[3,"GlyphPart",2404],[3,"GlyphAssembly",2404],[3,"GlyphVariant",2404],[3,"GlyphConstruction",2404],[3,"GlyphConstructions",2404],[3,"Variants",2404],[3,"Table",2404],[3,"Table",2678],[3,"Feature",2692],[3,"ContextualEntryData",2692],[3,"ContextualSubtable",2692],[3,"LigatureSubtable",2692],[3,"InsertionEntryData",2692],[3,"InsertionSubtable",2692],[4,"SubtableKind",2692],[3,"Coverage",2692],[3,"Subtable",2692],[3,"Subtables",2692],[3,"SubtablesIter",2692],[3,"Chain",2692],[3,"Chains",2692],[3,"ChainsIter",2692],[3,"Table",2692],[3,"Table",2912],[4,"PlatformId",2926],[3,"Name",2926],[3,"NamesIter",2926],[3,"Table",2926],[4,"ChainedContextLookup",3062],[3,"ChainedSequenceRule",3062],[4,"ContextLookup",3062],[3,"SequenceRule",3062],[3,"SequenceLookupRecord",3062],[3,"FeatureVariations",3062],[3,"LayoutTable",3062],[3,"RecordList",3062],[8,"RecordListItem",3062],[3,"Script",3062],[3,"LanguageSystem",3062],[3,"Feature",3062],[3,"Lookup",3062],[3,"LookupSubtables",3062],[3,"LookupFlags",3062],[4,"ClassDefinition",3062],[6,"VariationIndex",3062],[6,"FeatureIndex",3062],[8,"LookupSubtable",3062],[3,"LookupSubtablesIter",3062],[3,"RecordListIter",3062],[3,"Table",3395],[3,"Names",3552],[3,"Table",3552],[3,"Table",3586],[3,"Strike",3586],[3,"Strikes",3586],[3,"StrikesIter",3586],[3,"SvgDocumentsList",3644],[3,"SvgDocumentsListIter",3644],[3,"Table",3644],[3,"RangeInclusive",3835],[3,"Track",3705],[3,"Tracks",3705],[3,"TrackData",3705],[3,"Table",3705],[3,"TracksIter",3705],[3,"Table",3777],[3,"VerticalOriginMetrics",3795],[3,"Table",3795],[13,"Format2",1814],[13,"Format1",1814],[13,"Format1",1819],[13,"Format2",1819],[13,"Format1",1962],[13,"Format2",1962],[13,"Format2",3370],[13,"Format3",3370],[13,"Format1",3370],[13,"Format1",3382],[13,"Format2",3382],[13,"Format2",3385],[13,"Format1",3385],[13,"Format3",3385],[13,"Format1",3393],[13,"Format2",3393]],"b":[[464,"impl-Debug-for-Language"],[465,"impl-Display-for-Language"],[473,"impl-Display-for-Tag"],[474,"impl-Debug-for-Tag"],[481,"impl-Display-for-FaceParsingError"],[482,"impl-Debug-for-FaceParsingError"],[496,"impl-From%3Ci16%3E-for-NormalizedCoordinate"],[497,"impl-From%3Cf32%3E-for-NormalizedCoordinate"]]},\
"unicode_bidi":{"doc":"This crate implements the Unicode Bidirectional Algorithm …","t":"NNNNECDNQQENNNNDQDNNNNCCGNNNNNNDDDNNNNCNNIRDNFLLLLLLLLLLLLLLLLLLLLLLLAALLMLLLLLLLLLLLLLLALLLLLLLLLFFFFLLMLLLLLLLLLLMLAMLMMLLLLLLLLLMMMMMMMMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLIDKLLLLLLLLMMLLLLFRRRRRRRRRRRRERDRRNRLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLMMLLLLLLLLLLLLLLMMMMMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLL","n":["AL","AN","B","BN","BidiClass","BidiDataSource","BidiInfo","CS","CharIndexIter","CharIter","Direction","EN","ES","ET","FSI","HardcodedBidiData","IndexLenIter","InitialInfo","L","LRE","LRI","LRO","LTR_LEVEL","Level","LevelRun","Ltr","Mixed","NSM","ON","PDF","PDI","Paragraph","ParagraphBidiInfo","ParagraphInfo","R","RLE","RLI","RLO","RTL_LEVEL","Rtl","S","TextSource","UNICODE_VERSION","Utf8IndexLenIter","WS","bidi_class","bidi_class","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data_source","deprecated","direction","direction","end","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_chars","from","from","from","from","from","from","from","from","from","get_base_direction","get_base_direction_full","get_base_direction_full_with_data_source","get_base_direction_with_data_source","has_rtl","has_rtl","info","into","into","into","into","into","into","into","into","into","into_iter","is_pure_ltr","len","level","level","level_at","levels","levels","new","new","new","new","new","new_with_data_source","new_with_data_source","new_with_data_source","next","original_classes","original_classes","original_classes","para","paragraph_level","paragraphs","paragraphs","range","reorder_line","reorder_line","reorder_visual","reorder_visual","reordered_levels","reordered_levels","reordered_levels_per_char","reordered_levels_per_char","start","text","text","text","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utf16","visual_runs","visual_runs","BidiDataSource","BidiMatchedOpeningBracket","bidi_class","bidi_matched_opening_bracket","borrow","borrow_mut","clone","clone_into","fmt","from","into","is_open","opening","to_owned","try_from","try_into","type_id","visual_runs","ALM","FSI","LRE","LRI","LRM","LRO","PDF","PDI","RLE","RLI","RLM","RLO","Error","LTR_LEVEL","Level","MAX_EXPLICIT_DEPTH","MAX_IMPLICIT_DEPTH","OutOfRangeNumber","RTL_LEVEL","bidi_class","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","eq","eq","eq","fmt","fmt","from","from","from","from_slice_unchecked","has_rtl","into","into","into","is_ltr","is_rtl","lower","ltr","max_explicit_depth","max_implicit_depth","new","new_explicit","new_explicit_next_ltr","new_explicit_next_rtl","new_lowest_ge_rtl","number","partial_cmp","raise","raise_explicit","rtl","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vec","BidiInfo","InitialInfo","Paragraph","ParagraphBidiInfo","Utf16CharIndexIter","Utf16CharIter","Utf16IndexLenIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","direction","direction","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has_rtl","has_rtl","info","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_pure_ltr","level_at","levels","levels","new","new","new","new","new","new","new","new_with_data_source","new_with_data_source","new_with_data_source","next","next","next","next_back","original_classes","original_classes","original_classes","para","paragraph_level","paragraphs","paragraphs","reorder_line","reorder_line","reorder_visual","reorder_visual","reordered_levels","reordered_levels","reordered_levels_per_char","reordered_levels_per_char","text","text","text","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visual_runs","visual_runs"],"q":[[0,"unicode_bidi"],[183,"unicode_bidi::data_source"],[200,"unicode_bidi::deprecated"],[201,"unicode_bidi::format_chars"],[213,"unicode_bidi::level"],[266,"unicode_bidi::utf16"],[378,"core::fmt"],[379,"core::fmt"],[380,"core::option"],[381,"core::ops::range"],[382,"alloc::borrow"],[383,"alloc::vec"],[384,"core::result"],[385,"core::any"],[386,"core::cmp"],[387,"alloc::string"]],"d":["","","","","Represents values of the Unicode character property …","","Bidi information of the text.","","","","","","","","","Hardcoded Bidi data that ships with the unicode-bidi crate.","","Initial bidi information of the text.","","","","","","","A maximal substring of characters with the same embedding …","","","","","","","Contains a reference of <code>BidiInfo</code> and one of its <code>paragraphs</code>.","Bidi information of text treated as a single paragraph.","Bidi information about a single paragraph","","","","","","","","Trait that abstracts over a text source for use by the …","The Unicode version of data","Iterator over (UTF-8) string slices returning (index, …","","Find the <code>BidiClass</code> of a single char.","","","","","","","","","","","","","","","","","","","","","","","","","This module holds deprecated assets only.","Return the paragraph’s Direction (Ltr, Rtl, or Mixed) …","Returns if the paragraph is Left direction, right …","The upper bound of the range (exclusive).","","","","","","","","","","","","","","","Directional Formatting Characters","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the base direction of the text provided according to …","Get the base direction of the text provided according to …","","","If processed text has any computed RTL levels","If processed text has any computed RTL levels","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the paragraph is purely LTR.","Gets the length of the paragraph in the source text.","Bidi Embedding Level","The paragraph embedding level.","Returns the <code>Level</code> of a certain character in the paragraph.","The directional embedding level of each byte in the text.","The directional embedding level of each byte in the text.","Find the paragraphs and BidiClasses in a string of text.","Split the text into paragraphs and determine the bidi …","Determine the bidi embedding level.","","","Find the paragraphs and BidiClasses in a string of text, …","Split the text into paragraphs and determine the bidi …","Determine the bidi embedding level, with a custom …","","The BidiClass of the character at each byte in the text. …","The BidiClass of the character at each byte in the text.","The BidiClass of the character at each byte in the text.","","The paragraph embedding level.","The boundaries and level of each paragraph within the text.","The boundaries and paragraph embedding level of each …","The paragraphs boundaries within the text, as byte indices.","Re-order a line based on resolved levels and return the …","Re-order a line based on resolved levels and return the …","Reorders pre-calculated levels of a sequence of characters.","Reorders pre-calculated levels of a sequence of characters.","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","The lower bound of the range (inclusive).","The text","The text","The text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find the level runs within a line and return them in …","Find the level runs within a line and return them in …","This trait abstracts over a data source that is able to …","This is the return value of …","","If this character is a bracket according to …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Whether or not the requested bracket was an opening …","The corresponding opening bracket in this bracket pair, …","","","","","Find the level runs within a line and return them in …","ARABIC LETTER MARK","FIRST STRONG ISOLATE","LEFT-TO-RIGHT EMBEDDING","LEFT‑TO‑RIGHT ISOLATE","LEFT-TO-RIGHT MARK","LEFT-TO-RIGHT OVERRIDE","POP DIRECTIONAL FORMATTING","POP DIRECTIONAL ISOLATE","RIGHT-TO-LEFT EMBEDDING","RIGHT‑TO‑LEFT ISOLATE","RIGHT-TO-LEFT MARK","RIGHT-TO-LEFT OVERRIDE","Errors that can occur on Level creation or mutation","","Embedding Level","During explicit level resolution, embedding level can go …","During implicit level resolution, embedding level can go …","Out-of-range (invalid) embedding level number.","","Generate a character type based on a level (as specified …","","","","","","","","","","","","","","Returns the argument unchanged.","Create level by number","Returns the argument unchanged.","Converts a byte slice to a slice of Levels","If levels has any RTL (odd) level","Convert to the level number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If this level is left-to-right.","If this level is right-to-left.","Lower level by <code>amount</code>, fail if number goes below zero.","New LTR level with smallest number value (0).","Maximum depth of the directional status stack during …","Maximum depth of the directional status stack during …","Create new level, fail if number is larger than …","Create new level, fail if number is larger than <code>max_depth</code>.","The next LTR (even) level greater than this, or fail if …","The next RTL (odd) level greater than this, or fail if …","The lowest RTL (odd) level greater than or equal to this, …","The level number.","","Raise level by <code>amount</code>, fail if number is larger than …","Raise level by <code>amount</code>, fail if number is larger than …","New RTL level with smallest number value (1).","","","","","","","","","Bidi information of the text (UTF-16 version).","Initial bidi information of the text (UTF-16 version).","Contains a reference of <code>BidiInfo</code> and one of its <code>paragraphs</code>.","Bidi information of text treated as a single paragraph.","Iterator over UTF-16 text in a u16 slice, returning …","Iterator over UTF-16 text in a u16 slice, returning …","Iterator over UTF-16 text in a u16 slice, returning …","","","","","","","","","","","","","","","Return the paragraph’s Direction (Ltr, Rtl, or Mixed) …","Returns if the paragraph is Left direction, right …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If processed text has any computed RTL levels","If processed text has any computed RTL levels","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether the paragraph is purely LTR.","Returns the <code>Level</code> of a certain character in the paragraph.","The directional embedding level of each byte in the text.","The directional embedding level of each byte in the text.","Find the paragraphs and BidiClasses in a string of text.","Split the text into paragraphs and determine the bidi …","Determine the bidi embedding level.","","","","","Find the paragraphs and BidiClasses in a string of text, …","Split the text into paragraphs and determine the bidi …","Determine the bidi embedding level, with a custom …","","","","","The BidiClass of the character at each code unit in the …","The BidiClass of the character at each byte in the text.","The BidiClass of the character at each byte in the text.","","The paragraph embedding level.","The boundaries and level of each paragraph within the text.","The boundaries and paragraph embedding level of each …","Re-order a line based on resolved levels and return the …","Re-order a line based on resolved levels and return the …","Reorders pre-calculated levels of a sequence of characters.","Reorders pre-calculated levels of a sequence of characters.","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","Produce the levels for this paragraph as needed for …","The text","The text","The text","","","","","","","","","","","","","","","","","","","","","","Find the level runs within a line and return them in …","Find the level runs within a line and return them in …"],"i":[2,2,2,2,0,0,0,2,15,15,0,2,2,2,2,0,15,0,2,2,2,2,0,0,0,7,7,2,2,2,2,0,0,0,2,2,2,2,0,7,2,0,0,0,2,0,3,3,2,7,4,10,11,6,8,14,3,2,7,4,10,11,6,8,14,2,4,2,4,0,0,6,8,28,2,7,4,10,11,6,2,7,4,10,11,6,8,14,0,3,2,7,4,10,11,6,8,14,0,0,0,0,11,6,8,3,2,7,4,10,11,6,8,14,14,6,4,0,4,8,11,6,10,11,6,8,14,10,11,6,14,10,11,6,8,6,10,11,4,11,6,11,6,11,6,11,6,28,10,11,6,2,4,3,2,7,4,10,11,6,8,14,3,2,7,4,10,11,6,8,14,3,2,7,4,10,11,6,8,14,0,11,6,0,0,17,17,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,19,19,32,19,32,19,19,19,19,19,19,32,19,32,19,19,32,19,0,19,19,32,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,32,19,32,19,32,19,0,0,0,0,0,0,0,36,37,34,35,38,39,40,36,37,34,35,38,39,40,34,35,36,37,34,36,37,34,35,38,39,40,36,37,34,35,38,39,40,37,34,35,36,37,34,35,38,39,40,38,39,40,34,35,37,34,36,37,34,35,38,39,40,36,37,34,38,39,40,40,36,37,34,35,34,36,37,37,34,37,34,37,34,37,34,36,37,34,36,37,34,35,38,39,40,36,37,34,35,38,39,40,36,37,34,35,38,39,40,37,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,1],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[6,7],[8,7],0,[[2,2],9],[[7,7],9],[[4,4],9],[[10,10],9],[[11,11],9],[[6,6],9],[[2,12],13],[[7,12],13],[[4,12],13],[[10,12],13],[[11,12],13],[[6,12],13],[[8,12],13],[[14,12],13],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[15,16]],[-1,7,[15,16]],[[-1,-2],7,17,[15,16]],[[-1,-2],7,17,[15,16]],[11,9],[6,9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,18],0,0,[[8,18],19],0,0,[[20,[21,[19]]],10],[[20,[21,[19]]],11],[[20,[21,[19]]],6],[[11,4],8],[20,14],[[-1,20,[21,[19]]],10,17],[[-1,20,[21,[19]]],11,17],[[-1,20,[21,[19]]],6,17],[14,21],0,0,0,0,0,0,0,0,[[11,4,[22,[18]]],[[23,[20]]]],[[6,[22,[18]]],[[23,[20]]]],[[[24,[19]]],[[25,[18]]]],[[[24,[19]]],[[25,[18]]]],[[11,4,[22,[18]]],[[25,[19]]]],[[6,[22,[18]]],[[25,[19]]]],[[11,4,[22,[18]]],[[25,[19]]]],[[6,[22,[18]]],[[25,[19]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,[[11,4,[22,[18]]],[[5,[[25,[19]],[25,[28]]]]]],[[6,[22,[18]]],[[5,[[25,[19]],[25,[28]]]]]],0,0,[[-1,1],2,[]],[[-1,1],[[21,[29]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[[-1,-2],5,[],[]],[[29,12],13],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,27,[]],[[[22,[18]],[24,[19]]],[[25,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],5,[],[]],[[19,19],30],[[19,20],9],[[19,31],9],[[19,19],9],[[32,32],9],[[19,12],13],[[32,12],13],[-1,-1,[]],[33,19],[-1,-1,[]],[[[24,[33]]],[[24,[19]]]],[[[24,[19]]],9],[19,33],[-1,-2,[],[]],[-1,-2,[],[]],[19,9],[19,9],[[19,33],[[26,[5,32]]]],[[],19],[[],33],[[],33],[33,[[26,[19,32]]]],[33,[[26,[19,32]]]],[19,[[26,[19,32]]]],[19,[[26,[19,32]]]],[19,[[26,[19,32]]]],[19,33],[[19,19],[[21,[30]]]],[[19,33],[[26,[5,32]]]],[[19,33],[[26,[5,32]]]],[[],19],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[[[24,[33]]],[[25,[19]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,7],[35,7],[[36,36],9],[[37,37],9],[[34,34],9],[[36,12],13],[[37,12],13],[[34,12],13],[[35,12],13],[[38,12],13],[[39,12],13],[[40,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[37,9],[34,9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[35,18],19],0,0,[[[24,[41]],[21,[19]]],36],[[[24,[41]],[21,[19]]],37],[[[24,[41]],[21,[19]]],34],[[37,4],35],[[[24,[41]]],38],[[[24,[41]]],39],[[[24,[41]]],40],[[-1,[24,[41]],[21,[19]]],36,17],[[-1,[24,[41]],[21,[19]]],37,17],[[-1,[24,[41]],[21,[19]]],34,17],[38,21],[39,21],[40,21],[40,21],0,0,0,0,0,0,0,[[37,4,[22,[18]]],[[23,[[24,[41]]]]]],[[34,[22,[18]]],[[23,[[24,[41]]]]]],[[[24,[19]]],[[25,[18]]]],[[[24,[19]]],[[25,[18]]]],[[37,4,[22,[18]]],[[25,[19]]]],[[34,[22,[18]]],[[25,[19]]]],[[37,4,[22,[18]]],[[25,[19]]]],[[34,[22,[18]]],[[25,[19]]]],0,0,0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[37,4,[22,[18]]],[[5,[[25,[19]],[25,[28]]]]]],[[34,[22,[18]]],[[5,[[25,[19]],[25,[28]]]]]]],"c":[200],"p":[[15,"char"],[4,"BidiClass",0],[3,"HardcodedBidiData",0],[3,"ParagraphInfo",0],[15,"tuple"],[3,"ParagraphBidiInfo",0],[4,"Direction",0],[3,"Paragraph",0],[15,"bool"],[3,"InitialInfo",0],[3,"BidiInfo",0],[3,"Formatter",378],[6,"Result",378],[3,"Utf8IndexLenIter",0],[8,"TextSource",0],[8,"Sized",379],[8,"BidiDataSource",183],[15,"usize"],[3,"Level",213],[15,"str"],[4,"Option",380],[3,"Range",381],[4,"Cow",382],[15,"slice"],[3,"Vec",383],[4,"Result",384],[3,"TypeId",385],[6,"LevelRun",0],[3,"BidiMatchedOpeningBracket",183],[4,"Ordering",386],[3,"String",387],[4,"Error",213],[15,"u8"],[3,"ParagraphBidiInfo",266],[3,"Paragraph",266],[3,"InitialInfo",266],[3,"BidiInfo",266],[3,"Utf16IndexLenIter",266],[3,"Utf16CharIndexIter",266],[3,"Utf16CharIter",266],[15,"u16"]],"b":[[228,"impl-PartialEq%3C%26str%3E-for-Level"],[229,"impl-PartialEq%3CString%3E-for-Level"],[230,"impl-PartialEq-for-Level"]]},\
"unicode_bidi_mirroring":{"doc":"This library implements Unicode Bidi Mirroring property …","t":"RFF","n":["UNICODE_VERSION","get_mirrored","is_mirroring"],"q":[[0,"unicode_bidi_mirroring"],[3,"core::option"]],"d":["The Unicode version.","Returns a bidi mirrored character.","Checks that character is bidi mirrored."],"i":[0,0,0],"f":[0,[1,[[2,[1]]]],[1,3]],"c":[],"p":[[15,"char"],[4,"Option",3],[15,"bool"]],"b":[]},\
"unicode_ccc":{"doc":"This library implements Unicode Canonical Combining Class …","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNRNLLLLLLFLLLL","n":["Above","AboveLeft","AboveRight","AttachedAbove","AttachedAboveRight","AttachedBelow","AttachedBelowLeft","Below","BelowLeft","BelowRight","CCC10","CCC103","CCC107","CCC11","CCC118","CCC12","CCC122","CCC129","CCC13","CCC130","CCC132","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC26","CCC27","CCC28","CCC29","CCC30","CCC31","CCC32","CCC33","CCC34","CCC35","CCC36","CCC84","CCC91","CanonicalCombiningClass","DoubleAbove","DoubleBelow","HanReading","IotaSubscript","KanaVoicing","Left","NotReordered","Nukta","Overlay","Right","UNICODE_VERSION","Virama","borrow","borrow_mut","clone","eq","fmt","from","get_canonical_combining_class","into","try_from","try_into","type_id"],"q":[[0,"unicode_ccc"],[70,"core::fmt"],[71,"core::fmt"],[72,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Character Canonical Combining Class.","","","","","","","","","","","The Unicode version.","","","","","","","Returns the argument unchanged.","Returns a Canonical Combining Class of a character.","Calls <code>U::from(self)</code>.","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,1],2],[[1,3],4],[-1,-1,[]],[5,1],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]]],"c":[],"p":[[4,"CanonicalCombiningClass",0],[15,"bool"],[3,"Formatter",70],[6,"Result",70],[15,"char"],[4,"Result",71],[3,"TypeId",72]],"b":[]},\
"unicode_linebreak":{"doc":"Implementation of the Line Breaking Algorithm described in …","t":"NNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRNNNNLLLLFLLLLLLLLLLLFFLLLLLL","n":["After","Allowed","Alphabetic","Ambiguous","Before","BeforeAndAfter","BreakClass","BreakOpportunity","CarriageReturn","CloseParenthesis","ClosePunctuation","CombiningMark","ComplexContext","ConditionalJapaneseStarter","Contingent","EmojiBase","EmojiModifier","Exclamation","HangulLJamo","HangulLvSyllable","HangulLvtSyllable","HangulTJamo","HangulVJamo","HebrewLetter","Hyphen","Ideographic","InfixSeparator","Inseparable","LineFeed","Mandatory","Mandatory","NextLine","NonBreakingGlue","NonStarter","Numeric","OpenPunctuation","Postfix","Prefix","Quotation","RegionalIndicator","Space","Surrogate","Symbol","UNICODE_VERSION","Unknown","WordJoiner","ZeroWidthJoiner","ZeroWidthSpace","borrow","borrow","borrow_mut","borrow_mut","break_property","clone","clone","eq","eq","fmt","fmt","from","from","hash","into","into","linebreaks","split_at_safe","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"unicode_linebreak"],[72,"core::fmt"],[73,"core::fmt"],[74,"core::iter::traits::iterator"],[75,"core::clone"],[76,"core::result"],[77,"core::any"]],"d":["Generally provide a line break opportunity after the …","A line is allowed to end at this spot.","Are alphabetic characters or symbols that are used with …","Act like AL when the resolved EAW is N; otherwise, act as …","Generally provide a line break opportunity before the …","Provide a line break opportunity before and after the …","Unicode line breaking class.","Break opportunity type.","Cause a line break (after), except between CR and LF","Prohibit line breaks before","Prohibit line breaks before","Prohibit a line break between the character and the …","Provide a line break opportunity contingent on additional, …","Treat as NS or ID for strict or normal breaking.","Provide a line break opportunity contingent on additional …","Do not break from following Emoji Modifier","Do not break from preceding Emoji Base","Prohibit line breaks before","Form Korean syllable blocks","Form Korean syllable blocks","Form Korean syllable blocks","Form Korean syllable blocks","Form Korean syllable blocks","Do not break around a following hyphen; otherwise act as …","Provide a line break opportunity after the character, …","Break before or after, except in some numeric context","Prevent breaks after any and before numeric","Allow only indirect line breaks between pairs","Cause a line break (after)","Cause a line break (after)","A line must break at this spot.","Cause a line break (after)","Prohibit line breaks before and after","Allow only indirect line breaks before","Form numeric expressions for line breaking purposes","Prohibit line breaks after","Do not break following a numeric expression","Do not break in front of a numeric expression","Act like they are both opening and closing","Keep pairs together. For pairs, break before and after …","Enable indirect line breaks","Do not occur in well-formed text","Prevent a break before, and allow a break after","The Unicode version conformed to.","Have as yet unknown line breaking behavior or unassigned …","Prohibit line breaks before and after","Prohibit line breaks within joiner sequences","Provide a break opportunity","","","","","Returns the line break property of the specified code …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over line break opportunities in the …","Divides the string at the last index where further breaks …","","","","","",""],"i":[2,3,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,3,2,3,0,2,3,2,3,2,3,2,3,2,2,3,0,0,2,3,2,3,2,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[2,2],[3,3],[[2,2],4],[[3,3],4],[[2,5],6],[[3,5],6],[-1,-1,[]],[-1,-1,[]],[[2,-1],7,8],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[0,[10,11]]]],[9,[[7,[9,9]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[15,"u32"],[4,"BreakClass",0],[4,"BreakOpportunity",0],[15,"bool"],[3,"Formatter",72],[6,"Result",72],[15,"tuple"],[8,"Hasher",73],[15,"str"],[8,"Iterator",74],[8,"Clone",75],[4,"Result",76],[3,"TypeId",77]],"b":[]},\
"unicode_properties":{"doc":"Query character Unicode properties according to Unicode …","t":"NNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNRNINAKLLNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNINLLLLLLLLLLLLLLKLLLLLLLLLLLLLL","n":["ClosePunctuation","ConnectorPunctuation","Control","CurrencySymbol","DashPunctuation","DecimalNumber","EnclosingMark","FinalPunctuation","Format","GeneralCategory","GeneralCategoryGroup","InitialPunctuation","Letter","LetterNumber","LineSeparator","LowercaseLetter","Mark","MathSymbol","ModifierLetter","ModifierSymbol","NonspacingMark","Number","OpenPunctuation","Other","OtherLetter","OtherNumber","OtherPunctuation","OtherSymbol","ParagraphSeparator","PrivateUse","Punctuation","Separator","SpaceSeparator","SpacingMark","Surrogate","Symbol","TitlecaseLetter","UNICODE_VERSION","Unassigned","UnicodeGeneralCategory","UppercaseLetter","general_category","general_category","general_category_group","is_letter_cased","ClosePunctuation","ConnectorPunctuation","Control","CurrencySymbol","DashPunctuation","DecimalNumber","EnclosingMark","FinalPunctuation","Format","GeneralCategory","GeneralCategoryGroup","InitialPunctuation","Letter","LetterNumber","LineSeparator","LowercaseLetter","Mark","MathSymbol","ModifierLetter","ModifierSymbol","NonspacingMark","Number","OpenPunctuation","Other","OtherLetter","OtherNumber","OtherPunctuation","OtherSymbol","ParagraphSeparator","PrivateUse","Punctuation","Separator","SpaceSeparator","SpacingMark","Surrogate","Symbol","TitlecaseLetter","Unassigned","UnicodeGeneralCategory","UppercaseLetter","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","from","from","general_category","general_category_group","hash","hash","into","into","is_letter_cased","partial_cmp","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"unicode_properties"],[45,"unicode_properties::general_category"],[114,"core::cmp"],[115,"core::fmt"],[116,"core::fmt"],[117,"core::option"],[118,"core::result"],[119,"core::any"]],"d":["<code>Pe</code>, a closing punctuation mark (of a pair)","<code>Pc</code>, a connecting punctuation mark, like a tie","<code>Cc</code>, a C0 or C1 control code","<code>Sc</code>, a currency sign","<code>Pd</code>, a dash or hyphen punctuation mark","<code>Nd</code>, a decimal digit","<code>Me</code>, an enclosing combining mark","<code>Pf</code>, a final quotation mark","<code>Cf</code>, a format control character","The most general classification of a character.","Groupings of the most general classification of a …","<code>Pi</code>, an initial quotation mark","Lu | Ll | Lt | Lm | Lo","<code>Nl</code>, a letterlike numeric character","<code>Zl</code>, U+2028 LINE SEPARATOR only","<code>Ll</code>, a lowercase letter","Mn | Mc | Me","<code>Sm</code>, a symbol of mathematical use","<code>Lm</code>, a modifier letter","<code>Sk</code>, a non-letterlike modifier symbol","<code>Mn</code>, a nonspacing combining mark (zero advance width)","Nd | Nl | No","<code>Ps</code>, an opening punctuation mark (of a pair)","Cc | Cf | Cs | Co | Cn","<code>Lo</code>, other letters, including syllables and ideographs","<code>No</code>, a numeric character of other type","<code>Po</code>, a punctuation mark of other type","<code>So</code>, a symbol of other type","<code>Zp</code>, U+2029 PARAGRAPH SEPARATOR only","<code>Co</code>, a private-use character","Pc | Pd | Ps | Pe | Pi | Pf | Po","Zs | Zl | Zp","<code>Zs</code>, a space character (of various non-zero widths)","<code>Mc</code>, a spacing combining mark (positive advance width)","<code>Cs</code>, a surrogate code point","Sm | Sc | Sk | So","<code>Lt</code>, a digraphic character, with first part uppercase","The version of Unicode that this version of …","<code>Cn</code>, a reserved unassigned code point or a noncharacter","Query the general category property of a character.","<code>Lu</code>, an uppercase letter","Query the general category property of a character.","Queries the most general classification of a character.","Queries the grouping of the most general classification of …","Queries whether the most general classification of a …","<code>Pe</code>, a closing punctuation mark (of a pair)","<code>Pc</code>, a connecting punctuation mark, like a tie","<code>Cc</code>, a C0 or C1 control code","<code>Sc</code>, a currency sign","<code>Pd</code>, a dash or hyphen punctuation mark","<code>Nd</code>, a decimal digit","<code>Me</code>, an enclosing combining mark","<code>Pf</code>, a final quotation mark","<code>Cf</code>, a format control character","The most general classification of a character.","Groupings of the most general classification of a …","<code>Pi</code>, an initial quotation mark","Lu | Ll | Lt | Lm | Lo","<code>Nl</code>, a letterlike numeric character","<code>Zl</code>, U+2028 LINE SEPARATOR only","<code>Ll</code>, a lowercase letter","Mn | Mc | Me","<code>Sm</code>, a symbol of mathematical use","<code>Lm</code>, a modifier letter","<code>Sk</code>, a non-letterlike modifier symbol","<code>Mn</code>, a nonspacing combining mark (zero advance width)","Nd | Nl | No","<code>Ps</code>, an opening punctuation mark (of a pair)","Cc | Cf | Cs | Co | Cn","<code>Lo</code>, other letters, including syllables and ideographs","<code>No</code>, a numeric character of other type","<code>Po</code>, a punctuation mark of other type","<code>So</code>, a symbol of other type","<code>Zp</code>, U+2029 PARAGRAPH SEPARATOR only","<code>Co</code>, a private-use character","Pc | Pd | Ps | Pe | Pi | Pf | Po","Zs | Zl | Zp","<code>Zs</code>, a space character (of various non-zero widths)","<code>Mc</code>, a spacing combining mark (positive advance width)","<code>Cs</code>, a surrogate code point","Sm | Sc | Sk | So","<code>Lt</code>, a digraphic character, with first part uppercase","<code>Cn</code>, a reserved unassigned code point or a noncharacter","Query the general category property of a character.","<code>Lu</code>, an uppercase letter","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Queries the most general classification of a character.","Queries the grouping of the most general classification of …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Queries whether the most general classification of a …","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,0,0,1,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,1,1,1,2,2,1,1,1,2,1,0,1,0,1,0,12,12,12,1,1,1,1,1,1,1,1,1,0,0,1,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,1,1,1,2,2,1,1,1,2,1,1,0,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,12,12,1,2,1,2,12,1,2,1,2,1,2,1,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,2,[]],[-1,3,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,1],4],[[2,2],4],[[1,1],3],[[2,2],3],[[1,5],6],[[2,5],6],[-1,-1,[]],[-1,-1,[]],[-1,1,[]],[-1,2,[]],[[1,-1],7,8],[[2,-1],7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[[1,1],[[9,[4]]]],[[2,2],[[9,[4]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]]],"c":[],"p":[[4,"GeneralCategory",45],[4,"GeneralCategoryGroup",45],[15,"bool"],[4,"Ordering",114],[3,"Formatter",115],[6,"Result",115],[15,"tuple"],[8,"Hasher",116],[4,"Option",117],[4,"Result",118],[3,"TypeId",119],[8,"UnicodeGeneralCategory",0]],"b":[]},\
"unicode_script":{"doc":"This crate exposes the Unicode <code>Script</code> and <code>Script_Extension</code> …","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEDDNNNNNNNNNNNNNNNNNNNNNNNNNNNRNINNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKALLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["Adlam","Ahom","Anatolian_Hieroglyphs","Arabic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bhaiksuki","Bopomofo","Brahmi","Braille","Buginese","Buhid","Canadian_Aboriginal","Carian","Caucasian_Albanian","Chakma","Cham","Cherokee","Chorasmian","Common","Coptic","Cuneiform","Cypriot","Cypro_Minoan","Cyrillic","Deseret","Devanagari","Dives_Akuru","Dogra","Duployan","Egyptian_Hieroglyphs","Elbasan","Elymaic","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gunjala_Gondi","Gurmukhi","Han","Hangul","Hanifi_Rohingya","Hanunoo","Hatran","Hebrew","Hiragana","Imperial_Aramaic","Inherited","Inscriptional_Pahlavi","Inscriptional_Parthian","Javanese","Kaithi","Kannada","Katakana","Kawi","Kayah_Li","Kharoshthi","Khitan_Small_Script","Khmer","Khojki","Khudawadi","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Makasar","Malayalam","Mandaic","Manichaean","Marchen","Masaram_Gondi","Medefaidrin","Meetei_Mayek","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Miao","Modi","Mongolian","Mro","Multani","Myanmar","Nabataean","Nag_Mundari","Nandinagari","New_Tai_Lue","Newa","Nko","Nushu","Nyiakeng_Puachue_Hmong","Ogham","Ol_Chiki","Old_Hungarian","Old_Italic","Old_North_Arabian","Old_Permic","Old_Persian","Old_Sogdian","Old_South_Arabian","Old_Turkic","Old_Uyghur","Oriya","Osage","Osmanya","Pahawh_Hmong","Palmyrene","Pau_Cin_Hau","Phags_Pa","Phoenician","Psalter_Pahlavi","Rejang","Runic","Samaritan","Saurashtra","Script","ScriptExtension","ScriptIterator","Sharada","Shavian","Siddham","SignWriting","Sinhala","Sogdian","Sora_Sompeng","Soyombo","Sundanese","Syloti_Nagri","Syriac","Tagalog","Tagbanwa","Tai_Le","Tai_Tham","Tai_Viet","Takri","Tamil","Tangsa","Tangut","Telugu","Thaana","Thai","Tibetan","Tifinagh","Tirhuta","Toto","UNICODE_VERSION","Ugaritic","UnicodeScript","Unknown","Vai","Vithkuqi","Wancho","Warang_Citi","Yezidi","Yi","Zanabazar_Square","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","contains_script","default","default","eq","eq","fmt","fmt","fmt","fmt","for_str","from","from","from","from","from","from","from","from_full_name","from_short_name","full_name","hash","hash","intersect_with","intersection","into","into","into","into_iter","is_common","is_empty","is_inherited","is_recommended","iter","len","next","script","script_extension","script_extensions","short_name","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","ADLAM","ADLM","ADLM_ARAB_MAND_MANI_OUGR_PHLP_ROHG_SOGD_SYRC","ADLM_ARAB_NKOO_ROHG_SYRC_THAA_YEZI","AGHB","AHOM","ANATOLIAN_HIEROGLYPHS","ARAB","ARABIC","ARAB_COPT","ARAB_NKOO","ARAB_NKOO_ROHG_SYRC_THAA_YEZI","ARAB_ROHG","ARAB_SYRC","ARAB_SYRC_THAA","ARAB_THAA","ARAB_THAA_YEZI","ARMENIAN","ARMI","ARMN","AVESTAN","AVST","BALI","BALINESE","BAMU","BAMUM","BASS","BASSA_VAH","BATAK","BATK","BENG","BENGALI","BENG_CAKM_SYLO","BENG_DEVA","BENG_DEVA_DOGR_GONG_GONM_GRAN_GUJR_GURU_KNDA_LIMB_MAHJ_MLYM_NAND_ORYA_SIND_SINH_SYLO_TAKR_TAML_TELU_TIRH","BENG_DEVA_DOGR_GONG_GONM_GRAN_GUJR_GURU_KNDA_MAHJ_MLYM_NAND_ORYA_SIND_SINH_SYLO_TAKR_TAML_TELU_TIRH","BENG_DEVA_GRAN_GUJR_GURU_KNDA_LATN_MLYM_ORYA_SHRD_TAML_TELU_TIRH","BENG_DEVA_GRAN_GUJR_GURU_KNDA_LATN_MLYM_ORYA_TAML_TELU_TIRH","BENG_DEVA_GRAN_KNDA","BENG_DEVA_GRAN_KNDA_NAND_ORYA_TELU_TIRH","BHAIKSUKI","BHKS","BOPO","BOPOMOFO","BOPO_HANG_HANI_HIRA_KANA","BOPO_HANG_HANI_HIRA_KANA_YIII","BOPO_HANI","BRAH","BRAHMI","BRAI","BRAILLE","BUGI","BUGINESE","BUGI_JAVA","BUHD","BUHD_HANO_TAGB_TGLG","BUHID","CAKM","CAKM_MYMR_TALE","CANADIAN_ABORIGINAL","CANS","CARI","CARIAN","CAUCASIAN_ALBANIAN","CHAKMA","CHAM","CHER","CHEROKEE","CHORASMIAN","CHRS","COMMON","COPT","COPTIC","CPMN","CPMN_CPRT_LINB","CPRT","CPRT_LINA_LINB","CPRT_LINB","CUNEIFORM","CYPRIOT","CYPRO_MINOAN","CYRILLIC","CYRL","CYRL_GLAG","CYRL_LATN","CYRL_PERM","CYRL_SYRC","DESERET","DEVA","DEVANAGARI","DEVA_DOGR_GUJR_GURU_KHOJ_KNDA_KTHI_MAHJ_MLYM_MODI_NAND_SIND_TAKR_TIRH","DEVA_DOGR_GUJR_GURU_KHOJ_KNDA_KTHI_MAHJ_MODI_NAND_SIND_TAKR_TIRH","DEVA_DOGR_GUJR_GURU_KHOJ_KTHI_MAHJ_MODI_SIND_TAKR_TIRH","DEVA_DOGR_KTHI_MAHJ","DEVA_GRAN","DEVA_GRAN_KNDA","DEVA_GRAN_LATN","DEVA_KNDA_MLYM_ORYA_TAML_TELU","DEVA_NAND","DEVA_SHRD","DEVA_TAML","DIAK","DIVES_AKURU","DOGR","DOGRA","DSRT","DUPL","DUPLOYAN","EGYP","EGYPTIAN_HIEROGLYPHS","ELBA","ELBASAN","ELYM","ELYMAIC","ETHI","ETHIOPIC","GEOR","GEORGIAN","GEOR_LATN","GLAG","GLAGOLITIC","GONG","GONM","GOTH","GOTHIC","GRAN","GRANTHA","GRAN_TAML","GREEK","GREK","GUJARATI","GUJR","GUJR_KHOJ","GUNJALA_GONDI","GURMUKHI","GURU","GURU_MULT","HAN","HANG","HANGUL","HANI","HANIFI_ROHINGYA","HANI_HIRA_KANA","HANI_LATN","HANO","HANUNOO","HATR","HATRAN","HEBR","HEBREW","HIRA","HIRAGANA","HIRA_KANA","HLUW","HMNG","HMNP","HUNG","IMPERIAL_ARAMAIC","INHERITED","INSCRIPTIONAL_PAHLAVI","INSCRIPTIONAL_PARTHIAN","ITAL","JAVA","JAVANESE","KAITHI","KALI","KALI_LATN_MYMR","KANA","KANNADA","KATAKANA","KAWI","KAYAH_LI","KHAR","KHAROSHTHI","KHITAN_SMALL_SCRIPT","KHMER","KHMR","KHOJ","KHOJKI","KHUDAWADI","KITS","KNDA","KNDA_NAND","KTHI","LANA","LAO","LAOO","LATIN","LATN","LATN_MONG","LEPC","LEPCHA","LIMB","LIMBU","LINA","LINB","LINEAR_A","LINEAR_B","LISU","LYCI","LYCIAN","LYDI","LYDIAN","MAHAJANI","MAHJ","MAKA","MAKASAR","MALAYALAM","MAND","MANDAIC","MANI","MANICHAEAN","MANI_OUGR","MARC","MARCHEN","MASARAM_GONDI","MEDEFAIDRIN","MEDF","MEETEI_MAYEK","MEND","MENDE_KIKAKUI","MERC","MERO","MEROITIC_CURSIVE","MEROITIC_HIEROGLYPHS","MIAO","MLYM","MODI","MONG","MONGOLIAN","MONG_PHAG","MRO","MROO","MTEI","MULT","MULTANI","MYANMAR","MYMR","NABATAEAN","NAGM","NAG_MUNDARI","NAND","NANDINAGARI","NARB","NBAT","NEWA","NEW_TAI_LUE","NKO","NKOO","NSHU","NUSHU","NYIAKENG_PUACHUE_HMONG","OGAM","OGHAM","OLCK","OLD_HUNGARIAN","OLD_ITALIC","OLD_NORTH_ARABIAN","OLD_PERMIC","OLD_PERSIAN","OLD_SOGDIAN","OLD_SOUTH_ARABIAN","OLD_TURKIC","OLD_UYGHUR","OL_CHIKI","ORIYA","ORKH","ORYA","OSAGE","OSGE","OSMA","OSMANYA","OUGR","PAHAWH_HMONG","PALM","PALMYRENE","PAUC","PAU_CIN_HAU","PERM","PHAG","PHAGS_PA","PHLI","PHLP","PHNX","PHOENICIAN","PLRD","PRTI","PSALTER_PAHLAVI","REJANG","RJNG","ROHG","RUNIC","RUNR","SAMARITAN","SAMR","SARB","SAUR","SAURASHTRA","SGNW","SHARADA","SHAVIAN","SHAW","SHRD","SIDD","SIDDHAM","SIGNWRITING","SIND","SINH","SINHALA","SOGD","SOGDIAN","SOGO","SORA","SORA_SOMPENG","SOYO","SOYOMBO","SUND","SUNDANESE","SYLO","SYLOTI_NAGRI","SYRC","SYRIAC","TAGALOG","TAGB","TAGBANWA","TAI_LE","TAI_THAM","TAI_VIET","TAKR","TAKRI","TALE","TALU","TAMIL","TAML","TANG","TANGSA","TANGUT","TAVT","TELU","TELUGU","TFNG","TGLG","THAA","THAANA","THAI","TIBETAN","TIBT","TIFINAGH","TIRH","TIRHUTA","TNSA","TOTO","UGAR","UGARITIC","UNKNOWN","VAI","VAII","VITH","VITHKUQI","WANCHO","WARA","WARANG_CITI","WCHO","XPEO","XSUX","YEZI","YEZIDI","YI","YIII","ZANABAZAR_SQUARE","ZANB"],"q":[[0,"unicode_script"],[227,"unicode_script::script_extensions"],[598,"core::fmt"],[599,"core::fmt"],[600,"core::hash"],[601,"core::result"],[602,"core::any"]],"d":["Adlm","Ahom","Hluw","Arab","Armn","Avst","Bali","Bamu","Bass","Batk","Beng","Bhks","Bopo","Brah","Brai","Bugi","Buhd","Cans","Cari","Aghb","Cakm","Cham","Cher","Chrs","Zyyy","Copt","Xsux","Cprt","Cpmn","Cyrl","Dsrt","Deva","Diak","Dogr","Dupl","Egyp","Elba","Elym","Ethi","Geor","Glag","Goth","Gran","Grek","Gujr","Gong","Guru","Hani","Hang","Rohg","Hano","Hatr","Hebr","Hira","Armi","Zinh,","Phli","Prti","Java","Kthi","Knda","Kana","Kawi","Kali","Khar","Kits","Khmr","Khoj","Sind","Laoo","Latn","Lepc","Limb","Lina","Linb","Lisu","Lyci","Lydi","Mahj","Maka","Mlym","Mand","Mani","Marc","Gonm","Medf","Mtei","Mend","Merc","Mero","Plrd","Modi","Mong","Mroo","Mult","Mymr","Nbat","Nagm","Nand","Talu","Newa","Nkoo","Nshu","Hmnp","Ogam","Olck","Hung","Ital","Narb","Perm","Xpeo","Sogo","Sarb","Orkh","Ougr","Orya","Osge","Osma","Hmng","Palm","Pauc","Phag","Phnx","Phlp","Rjng","Runr","Samr","Saur","A value of the <code>Script</code> property","A value for the <code>Script_Extension</code> property","Iterator over scripts in a ScriptExtension.","Shrd","Shaw","Sidd","Sgnw","Sinh","Sogd","Sora","Soyo","Sund","Sylo","Syrc","Tglg","Tagb","Tale","Lana","Tavt","Takr","Taml","Tnsa","Tang","Telu","Thaa","Thai","Tibt","Tfng","Tirh","Toto","The version of Unicode that this version of unicode-script …","Ugar","Extension trait on <code>char</code> for calculating script properties","Unknown script","Vaii","Vith","Wcho","Wara","Yezi","Yiii","Zanb","","","","","","","","","Check if this ScriptExtension contains the given script","","","","","","","","","Get the intersection of script extensions of all characters","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Attempts to parse script name from the provided string. …","Attempts to parse script name from the provided string. …","Get the full name of a script.","","","Intersect this <code>ScriptExtension</code> with another <code>ScriptExtension</code>…","Find the intersection between two ScriptExtensions. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the script extension is Common","Checks if the script extension is empty (unknown)","Checks if the script extension is Inherited","Is this script “Recommended” according to UAX #31?","Iterate over the scripts in this script extension","Returns the number of scripts in the script extension","","Get the script for a given character","Get the Script_Extension for a given character","","Get the four-character short name of a script.","","","","","","","","","","","Find the union between two ScriptExtensions.","Adlam","Adlam","Adlam, Arabic, Mandaic, Manichaean, Old_Uyghur, …","Adlam, Arabic, Nko, Hanifi_Rohingya, Syriac, Thaana, Yezidi","Caucasian_Albanian","Ahom","Anatolian_Hieroglyphs","Arabic","Arabic","Arabic, Coptic","Arabic, Nko","Arabic, Nko, Hanifi_Rohingya, Syriac, Thaana, Yezidi","Arabic, Hanifi_Rohingya","Arabic, Syriac","Arabic, Syriac, Thaana","Arabic, Thaana","Arabic, Thaana, Yezidi","Armenian","Imperial_Aramaic","Armenian","Avestan","Avestan","Balinese","Balinese","Bamum","Bamum","Bassa_Vah","Bassa_Vah","Batak","Batak","Bengali","Bengali","Bengali, Chakma, Syloti_Nagri","Bengali, Devanagari","Bengali, Devanagari, Dogra, Gunjala_Gondi, Masaram_Gondi, …","Bengali, Devanagari, Dogra, Gunjala_Gondi, Masaram_Gondi, …","Bengali, Devanagari, Grantha, Gujarati, Gurmukhi, Kannada, …","Bengali, Devanagari, Grantha, Gujarati, Gurmukhi, Kannada, …","Bengali, Devanagari, Grantha, Kannada","Bengali, Devanagari, Grantha, Kannada, Nandinagari, Oriya, …","Bhaiksuki","Bhaiksuki","Bopomofo","Bopomofo","Bopomofo, Hangul, Han, Hiragana, Katakana","Bopomofo, Hangul, Han, Hiragana, Katakana, Yi","Bopomofo, Han","Brahmi","Brahmi","Braille","Braille","Buginese","Buginese","Buginese, Javanese","Buhid","Buhid, Hanunoo, Tagbanwa, Tagalog","Buhid","Chakma","Chakma, Myanmar, Tai_Le","Canadian_Aboriginal","Canadian_Aboriginal","Carian","Carian","Caucasian_Albanian","Chakma","Cham","Cherokee","Cherokee","Chorasmian","Chorasmian","","Coptic","Coptic","Cypro_Minoan","Cypro_Minoan, Cypriot, Linear_B","Cypriot","Cypriot, Linear_A, Linear_B","Cypriot, Linear_B","Cuneiform","Cypriot","Cypro_Minoan","Cyrillic","Cyrillic","Cyrillic, Glagolitic","Cyrillic, Latin","Cyrillic, Old_Permic","Cyrillic, Syriac","Deseret","Devanagari","Devanagari","Devanagari, Dogra, Gujarati, Gurmukhi, Khojki, Kannada, …","Devanagari, Dogra, Gujarati, Gurmukhi, Khojki, Kannada, …","Devanagari, Dogra, Gujarati, Gurmukhi, Khojki, Kaithi, …","Devanagari, Dogra, Kaithi, Mahajani","Devanagari, Grantha","Devanagari, Grantha, Kannada","Devanagari, Grantha, Latin","Devanagari, Kannada, Malayalam, Oriya, Tamil, Telugu","Devanagari, Nandinagari","Devanagari, Sharada","Devanagari, Tamil","Dives_Akuru","Dives_Akuru","Dogra","Dogra","Deseret","Duployan","Duployan","Egyptian_Hieroglyphs","Egyptian_Hieroglyphs","Elbasan","Elbasan","Elymaic","Elymaic","Ethiopic","Ethiopic","Georgian","Georgian","Georgian, Latin","Glagolitic","Glagolitic","Gunjala_Gondi","Masaram_Gondi","Gothic","Gothic","Grantha","Grantha","Grantha, Tamil","Greek","Greek","Gujarati","Gujarati","Gujarati, Khojki","Gunjala_Gondi","Gurmukhi","Gurmukhi","Gurmukhi, Multani","Han","Hangul","Hangul","Han","Hanifi_Rohingya","Han, Hiragana, Katakana","Han, Latin","Hanunoo","Hanunoo","Hatran","Hatran","Hebrew","Hebrew","Hiragana","Hiragana","Hiragana, Katakana","Anatolian_Hieroglyphs","Pahawh_Hmong","Nyiakeng_Puachue_Hmong","Old_Hungarian","Imperial_Aramaic","","Inscriptional_Pahlavi","Inscriptional_Parthian","Old_Italic","Javanese","Javanese","Kaithi","Kayah_Li","Kayah_Li, Latin, Myanmar","Katakana","Kannada","Katakana","Kawi","Kayah_Li","Kharoshthi","Kharoshthi","Khitan_Small_Script","Khmer","Khmer","Khojki","Khojki","Khudawadi","Khitan_Small_Script","Kannada","Kannada, Nandinagari","Kaithi","Tai_Tham","Lao","Lao","Latin","Latin","Latin, Mongolian","Lepcha","Lepcha","Limbu","Limbu","Linear_A","Linear_B","Linear_A","Linear_B","Lisu","Lycian","Lycian","Lydian","Lydian","Mahajani","Mahajani","Makasar","Makasar","Malayalam","Mandaic","Mandaic","Manichaean","Manichaean","Manichaean, Old_Uyghur","Marchen","Marchen","Masaram_Gondi","Medefaidrin","Medefaidrin","Meetei_Mayek","Mende_Kikakui","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Meroitic_Cursive","Meroitic_Hieroglyphs","Miao","Malayalam","Modi","Mongolian","Mongolian","Mongolian, Phags_Pa","Mro","Mro","Meetei_Mayek","Multani","Multani","Myanmar","Myanmar","Nabataean","Nag_Mundari","Nag_Mundari","Nandinagari","Nandinagari","Old_North_Arabian","Nabataean","Newa","New_Tai_Lue","Nko","Nko","Nushu","Nushu","Nyiakeng_Puachue_Hmong","Ogham","Ogham","Ol_Chiki","Old_Hungarian","Old_Italic","Old_North_Arabian","Old_Permic","Old_Persian","Old_Sogdian","Old_South_Arabian","Old_Turkic","Old_Uyghur","Ol_Chiki","Oriya","Old_Turkic","Oriya","Osage","Osage","Osmanya","Osmanya","Old_Uyghur","Pahawh_Hmong","Palmyrene","Palmyrene","Pau_Cin_Hau","Pau_Cin_Hau","Old_Permic","Phags_Pa","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Phoenician","Miao","Inscriptional_Parthian","Psalter_Pahlavi","Rejang","Rejang","Hanifi_Rohingya","Runic","Runic","Samaritan","Samaritan","Old_South_Arabian","Saurashtra","Saurashtra","SignWriting","Sharada","Shavian","Shavian","Sharada","Siddham","Siddham","SignWriting","Khudawadi","Sinhala","Sinhala","Sogdian","Sogdian","Old_Sogdian","Sora_Sompeng","Sora_Sompeng","Soyombo","Soyombo","Sundanese","Sundanese","Syloti_Nagri","Syloti_Nagri","Syriac","Syriac","Tagalog","Tagbanwa","Tagbanwa","Tai_Le","Tai_Tham","Tai_Viet","Takri","Takri","Tai_Le","New_Tai_Lue","Tamil","Tamil","Tangut","Tangsa","Tangut","Tai_Viet","Telugu","Telugu","Tifinagh","Tagalog","Thaana","Thaana","Thai","Tibetan","Tibetan","Tifinagh","Tirhuta","Tirhuta","Tangsa","Toto","Ugaritic","Ugaritic","","Vai","Vai","Vithkuqi","Vithkuqi","Wancho","Warang_Citi","Warang_Citi","Wancho","Old_Persian","Cuneiform","Yezidi","Yezidi","Yi","Yi","Zanabazar_Square","Zanabazar_Square"],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,11,1,2,11,1,2,1,2,2,1,2,1,2,1,1,2,2,2,11,1,1,2,2,2,2,1,1,1,1,2,2,2,11,1,2,11,2,2,2,1,2,2,11,15,15,0,1,11,1,1,2,11,1,2,11,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[2,1],3],[[],1],[[],2],[[1,1],3],[[2,2],3],[[1,4],5],[[1,4],5],[[2,4],5],[[2,4],5],[6,2],[-1,-1,[]],[-1,-1,[]],[7,1],[6,2],[1,2],[-1,-1,[]],[7,2],[6,[[8,[1]]]],[6,[[8,[1]]]],[1,6],[[1,-1],9,10],[[2,-1],9,10],[[2,2],9],[[2,2],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,3],[2,3],[2,3],[1,3],[2,11],[2,12],[11,[[8,[1]]]],[-1,1,[]],[-1,2,[]],0,[1,6],[-1,[[13,[-2]]],[],[]],[2,[[13,[1,9]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[2,2],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"Script",0],[3,"ScriptExtension",0],[15,"bool"],[3,"Formatter",598],[6,"Result",598],[15,"str"],[15,"char"],[4,"Option",599],[15,"tuple"],[8,"Hasher",600],[3,"ScriptIterator",0],[15,"usize"],[4,"Result",601],[3,"TypeId",602],[8,"UnicodeScript",0]],"b":[[182,"impl-Display-for-Script"],[183,"impl-Debug-for-Script"],[184,"impl-Debug-for-ScriptExtension"],[185,"impl-Display-for-ScriptExtension"],[190,"impl-From%3C%26str%3E-for-ScriptExtension"],[191,"impl-From%3CScript%3E-for-ScriptExtension"],[193,"impl-From%3Cchar%3E-for-ScriptExtension"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word or …","t":"DEDDNNNNRDDDDIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKK","n":["GraphemeCursor","GraphemeIncomplete","GraphemeIndices","Graphemes","InvalidOffset","NextChunk","PreContext","PrevChunk","UNICODE_VERSION","USentenceBoundIndices","USentenceBounds","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeSentences","UnicodeWordIndices","UnicodeWords","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","cur_cursor","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","grapheme_indices","graphemes","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_boundary","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_boundary","prev_boundary","provide_context","set_cursor","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_sentence_bound_indices","split_sentence_bounds","split_word_bound_indices","split_word_bounds","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_sentences","unicode_word_indices","unicode_words"],"q":[[0,"unicode_segmentation"],[156,"core::fmt"],[157,"core::fmt"],[158,"core::option"],[159,"core::any"]],"d":["Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","External iterator for grapheme clusters and byte offsets.","External iterator for a string’s grapheme clusters.","An error returned when the chunk given does not contain …","When requesting <code>next_boundary</code>, the cursor is moving past …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","The version of Unicode that this version of …","External iterator for sentence boundaries and byte offsets.","External iterator for a string’s sentence boundaries.","External iterator for word boundaries and byte offsets.","External iterator for a string’s word boundaries.","Methods for segmenting strings according to Unicode …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current offset of the cursor. Equal to the last value …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator over the grapheme clusters of <code>self</code> and …","Returns an iterator over the grapheme clusters of <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Determine whether the current cursor location is a …","Create a new cursor. The string and initial offset are …","","","","","","","","","","","","","","","","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","Provide additional pre-context when it is needed to decide …","Set the cursor to a new location in the same string.","","","","","","","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over the words of <code>self</code>, separated on …"],"i":[0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,1,3,4,5,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,1,3,6,7,8,9,4,5,6,11,3,6,11,16,18,1,3,6,11,7,8,9,4,5,21,21,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,7,8,9,4,5,6,6,16,18,1,3,7,8,9,4,5,16,18,1,3,4,5,6,6,6,6,1,3,8,9,4,5,21,21,21,21,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,21,21,21],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[5,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[3,3],[6,6],[7,7],[8,8],[9,9],[4,4],[5,5],[6,10],[[11,11],12],[[3,13],14],[[6,13],14],[[11,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,12],1,[]],[[-1,12],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,2,10],[[15,[12,11]]]],[[10,10,12],6],[16,[[17,[2]]]],[18,[[17,[[19,[10,2]]]]]],[1,[[17,[[19,[10,2]]]]]],[3,[[17,[2]]]],[7,[[17,[2]]]],[8,[[17,[2]]]],[9,[[17,[[19,[10,2]]]]]],[4,[[17,[2]]]],[5,[[17,[[19,[10,2]]]]]],[16,[[17,[2]]]],[18,[[17,[[19,[10,2]]]]]],[1,[[17,[[19,[10,2]]]]]],[3,[[17,[2]]]],[4,[[17,[2]]]],[5,[[17,[[19,[10,2]]]]]],[[6,2,10],[[15,[[17,[10]],11]]]],[[6,2,10],[[15,[[17,[10]],11]]]],[[6,2,10],19],[[6,10],19],[1,[[19,[10,[17,[10]]]]]],[3,[[19,[10,[17,[10]]]]]],[8,[[19,[10,[17,[10]]]]]],[9,[[19,[10,[17,[10]]]]]],[4,[[19,[10,[17,[10]]]]]],[5,[[19,[10,[17,[10]]]]]],[-1,9,[]],[-1,8,[]],[-1,5,[]],[-1,4,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,7,[]],[-1,18,[]],[-1,16,[]]],"c":[],"p":[[3,"GraphemeIndices",0],[15,"str"],[3,"Graphemes",0],[3,"UWordBounds",0],[3,"UWordBoundIndices",0],[3,"GraphemeCursor",0],[3,"UnicodeSentences",0],[3,"USentenceBounds",0],[3,"USentenceBoundIndices",0],[15,"usize"],[4,"GraphemeIncomplete",0],[15,"bool"],[3,"Formatter",156],[6,"Result",156],[4,"Result",157],[3,"UnicodeWords",0],[4,"Option",158],[3,"UnicodeWordIndices",0],[15,"tuple"],[3,"TypeId",159],[8,"UnicodeSegmentation",0]],"b":[]},\
"yazi":{"doc":"Yet another zlib implementation.","t":"DNNEEDDNNDDENNENNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Adler32","BestSize","BestSpeed","CompressionLevel","CompressionStrategy","Decoder","DecoderStream","Default","Default","Encoder","EncoderStream","Error","Filtered","Finished","Format","Huffman","InvalidBitstream","Io","None","Overflow","RLE","Raw","Specific","Static","Underflow","Zlib","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compress","compressed_size","decompress","decompressed_size","default","drop","drop","eq","eq","finish","finish","finish","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_buf","into","into","into","into","into","into","into","into","into","new","new","new","set_format","set_format","set_level","set_strategy","stream","stream","stream_into_buf","stream_into_buf","stream_into_vec","stream_into_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","write","write","write","write"],"q":[[0,"yazi"],[140,"alloc::boxed"],[141,"alloc::vec"],[142,"core::result"],[143,"core::option"],[144,"std::io::error"],[145,"core::fmt"],[146,"core::fmt"],[147,"core::any"]],"d":["Rolling Adler-32 checksum.","Slower compression for smaller size.","Fast compression.","The level of compression– a compromise between speed and …","Selects between various specialized compressor modes.","Stateful context for decompression.","Decompression stream combining a decoder context with an …","Compromise between speed and size.","Let it do its thing.","Stateful context for compression.","Compression stream combining an encoder context with an …","Errors that may occur during compression or decompression.","Ignore matches fewer than 5 bytes.","Attempt to write into a finished stream.","Defines the format for a compressed bitstream.","Huffman encoding only.","The bitstream was corrupt.","A system I/O error.","No compression. Outputs raw blocks.","Output buffer was too small.","Run-length encoding only.","Raw DEFLATE data.","A specific compression level from 1-10.","Static blocks only.","Not enough input was provided.","Zlib header with an Adler-32 footer.","","","","","","","","","","","","","","","","","","","Creates a new deflate decoder on the heap.","Creates a new deflate encoder on the heap.","","","","","","","","","Compresses a buffer into a vector with the specified …","Returns the number of compressed bytes that have been …","Decompresses a buffer of the specified format into a …","Returns the number of decompressed bytes that have been …","","","","","","Consumes the stream, flushing any input that may be …","Consumes the stream, flushing any input that may be …","Returns the checksum.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a checksum from a buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new deflate decoder.","Creates a new deflate encoder. Note that creating an …","Creates a new checksum initialized to the default value.","Sets the expected format of the input data for the next …","Sets the format of the output bitstream for the next usage …","Sets the compression level for the next usage of the …","Sets the compression strategy for the next usage of the …","Creates a decoder stream that will write into the …","Creates an encoder stream that will write into the …","Creates a decoder stream that will write into the …","Creates an encoder stream that will write into the …","Creates a decoder stream that will write into the …","Creates an encoder stream that will write into the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the checksum with bytes provided by the specified …","Writes the specified buffer to the stream, producing …","","","Writes the specified buffer to the stream, producing …"],"i":[0,4,4,0,0,0,0,4,5,0,0,0,5,12,0,5,12,12,4,12,5,6,4,5,12,6,1,18,3,14,4,5,6,12,7,1,18,3,14,4,5,6,12,7,1,3,4,5,6,7,4,5,6,7,0,14,0,18,7,18,14,4,6,18,14,7,18,14,4,6,12,1,18,3,14,4,5,6,12,12,7,7,1,18,3,14,4,5,6,12,7,1,3,7,1,3,3,3,1,3,1,3,1,3,4,5,6,7,1,18,3,14,4,5,6,12,7,1,18,3,14,4,5,6,12,7,1,18,3,14,4,5,6,12,7,7,18,18,14,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[2,[1]]]],[[],[[2,[3]]]],[4,4],[5,5],[6,6],[7,7],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[10,[9]],6,4],[[13,[[11,[9]],12]]]],[[[14,[-1]]],15,0],[[[10,[9]],6],[[13,[[8,[[11,[9]],[17,[16]]]],12]]]],[[[18,[-1]]],15,0],[[],7],[[[18,[-1]]],8,0],[[[14,[-1]]],8,0],[[4,4],19],[[6,6],19],[[[18,[-1]]],[[13,[[8,[15,[17,[16]]]],12]]],0],[[[14,[-1]]],[[13,[15,12]]],0],[7,16],[[[18,[-1]]],[[20,[8]]],0],[[[14,[-1]]],[[20,[8]]],0],[[4,21],22],[[6,21],22],[[12,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,12],[-1,-1,[]],[-1,-1,[]],[[[10,[9]]],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],3],[[],7],[[1,6],8],[[3,6],8],[[3,4],8],[[3,5],8],[[1,-1],[[18,[[0,[0]]]]],24],[[3,-1],[[14,[[0,[0]]]]],24],[[1,[10,[9]]],[[18,[[0,[0]]]]]],[[3,[10,[9]]],[[14,[[0,[0]]]]]],[[1,[11,[9]]],[[18,[[0,[0]]]]]],[[3,[11,[9]]],[[14,[[0,[0]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[7,[10,[9]]],8],[[[18,[-1]],[10,[9]]],[[13,[8,12]]],0],[[[18,[-1]],[10,[9]]],[[20,[26]]],0],[[[14,[-1]],[10,[9]]],[[20,[26]]],0],[[[14,[-1]],[10,[9]]],[[13,[8,12]]],0]],"c":[],"p":[[3,"Decoder",0],[3,"Box",140],[3,"Encoder",0],[4,"CompressionLevel",0],[4,"CompressionStrategy",0],[4,"Format",0],[3,"Adler32",0],[15,"tuple"],[15,"u8"],[15,"slice"],[3,"Vec",141],[4,"Error",0],[4,"Result",142],[3,"EncoderStream",0],[15,"u64"],[15,"u32"],[4,"Option",143],[3,"DecoderStream",0],[15,"bool"],[6,"Result",144],[3,"Formatter",145],[6,"Result",145],[3,"Error",144],[8,"Write",146],[3,"TypeId",147],[15,"usize"]],"b":[[136,"impl-DecoderStream%3C\'a,+S%3E"],[137,"impl-Write-for-DecoderStream%3C\'a,+S%3E"],[138,"impl-Write-for-EncoderStream%3C\'a,+S%3E"],[139,"impl-EncoderStream%3C\'a,+S%3E"]]},\
"zeno":{"doc":"This crate provides a high performance, low level 2D …","t":"NDEENNDNENNEQNNNNNENEDSENNNDNNNNNNEIIDGNNNNNDNNNDNENNDDEEDDSSLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLKKLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLKMMLMKLLLLLLLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLMMLLLLMMMMMMMMMM","n":["Alpha","Angle","ArcSize","ArcSweep","Bevel","BottomLeft","Bounds","Butt","Cap","Close","Close","Command","Commands","CurveTo","CurveTo","CustomSubpixel","End","EvenOdd","Fill","Fill","Format","HitTest","IDENTITY","Join","Large","LineTo","LineTo","Mask","Middle","Miter","MoveTo","MoveTo","Negative","NonZero","Origin","PathBuilder","PathData","Placement","Point","Positive","QuadTo","QuadTo","Round","Round","Scratch","Small","Square","Start","Stroke","Stroke","Style","Subpixel","TopLeft","Transform","Vector","Verb","Vertex","Vertices","Walk","ZERO","ZERO","add","add_circle","add_circle","add_ellipse","add_ellipse","add_rect","add_rect","add_round_rect","add_round_rect","angle_to","apply","apply","arc_to","arc_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","buffer_size","cap","caps","ceil","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","commands","compute","contains","copy_to","copy_to","cross","current_point","curve_to","dash","dashes","default","default","default","default","default","default","default","default","default","default","determinant","distance_to","div","div","dot","end_cap","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_degrees","from_gradians","from_points","from_radians","from_turns","height","height","inspect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invert","is_empty","is_stroke","join","join","left","length","length","length_squared","line_to","max","min","miter_limit","miter_limit","move_to","mul","mul","nearly_eq","nearly_eq_by","new","new","new","new","new","new","new","new","new","next","normalize","offset","offset","origin","pre_rotate","pre_scale","pre_translate","quad_to","rel_arc_to","rel_arc_to","rel_curve_to","rel_curve_to","rel_line_to","rel_line_to","rel_move_to","rel_move_to","rel_quad_to","rel_quad_to","remaining","render","render_into","render_offset","rotation","rotation_about","scale","scale","scale","size","skew","start_cap","step","style","style","sub","subpixel_bgra","test","then","then_rotate","then_scale","then_translate","threshold","to_degrees","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_radians","top","transform","transform","transform","transform_point","transform_vector","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_svg","verb","width","width","width","width","with_scratch","with_scratch","with_transform","with_transform","x","x","x","xx","xy","y","y","y","yx","yy"],"q":[[0,"zeno"],[465,"core::convert"],[466,"core::option"],[467,"core::clone"],[468,"core::fmt"],[469,"core::fmt"],[470,"core::ops::function"],[471,"core::iter::traits::iterator"],[472,"alloc::vec"],[473,"core::result"],[474,"core::any"]],"d":["8-bit alpha mask.","Represents an angle in degrees or radians.","Describes the size of an arc.","Describes the sweep direction for an arc.","A straight line connecting the segments.","Origin (0, 0) at the bottom left of the image.","Axis-aligned bounding box.","Flat cap.","Defines the shape to be drawn at the beginning or end of a …","Closes a subpath, connecting the final point to the …","","Path command.","Command iterator.","A cubic bezier curve from the previous point to the final …","","32-bit RGBA subpixel mask with custom offsets.","The incoming direction and location of the final vertex in …","The even-odd fill rule.","Describes the visual style of a fill.","","The desired output image format for rendering.","Builder for configuring and executing a hit test.","Identity matrix.","Defines the connection between two segments of a stroke.","An arc of &gt;= 180 degrees will be drawn.","A straight line from the previous point to the specified …","","Builder for configuring and rendering a mask.","The incoming direction, location, and outgoing direction …","The segments are extended to their natural intersection …","Begins a new subpath at the specified point.","","The arc is drawn in a negative angle direction.","The non-zero fill rule.","The origin of the coordinate system for rendering.","Trait for types that accept path commands.","Trait for types that represent path data.","Describes the offset and dimensions of a rendered mask.","Alias for vector to distinguish intended use.","The arc is drawn in a positive angle direction.","A quadratic curve from the previous point to the final …","","An arc between the segments.","Rounded cap with radius equal to half the stroke width.","Scratch memory for reusable heap allocations.","An arc of &lt;= 180 degrees will be drawn.","Square cap with dimensions equal to half the stroke width.","The start point and direction of a subpath.","Describes the visual style of a stroke.","","Represents the style of a path for rendering or hit …","32-bit RGBA subpixel mask with 1/3 pixel offsets for the …","Origin (0, 0) at the top left of the image.","Two dimensional transformation matrix.","Two dimensional vector.","Action of a path command.","A vertex of a path.","An iterator over the vertices of a path.","An iterator like type that walks along a path by arbitrary …","Angle of zero degrees.","Vector with both components set to zero.","","Adds a circle with the specified center and radius to the …","Adds a circle with the specified center and radius to the …","Adds an ellipse with the specified center and radii to the …","Adds an ellipse with the specified center and radii to the …","Adds a rectangle with the specified position and size to …","Adds a rectangle with the specified position and size to …","Adds a rounded rectangle with the specified position, size …","Adds a rounded rectangle with the specified position, size …","Returns the angle to the specified vector.","Applies the style and transform to the path and emits the …","Applies the style and transform to the path and emits the …","Adds an arc with the specified x- and y-radius, rotation …","Adds an arc with the specified x- and y-radius, rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the bounding box of the path.","Computes the bounding box of the path.","Returns the necessary buffer size to hold an image of the …","Sets the cap style that will be generated at the start and …","Sets both the start and end cap styles for the stroke.","Returns a new vector containing the smallest integer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the current subpath.","Returns an iterator over the commands described by the …","Given an origin, offset and bounding box, computes the …","Returns true if the box contains the specified point.","Copies the path data into the specified sink.","Copies the path data into the specified sink.","Computes the cross product of two vectors.","Returns the current point of the path.","Adds a cubic bezier curve from the current point through …","Sets the dash array and offset of the stroke. The default …","Lengths of dashes in alternating on/off order.","","","","","","","","","","","Returns the determinant of the transform.","Returns the distance between two points.","","","Computes the dot product of two vectors.","Style for capping the end of an open subpath.","","","","","","","","","","","","","Returns a new vector containing the largest integer values …","","","","","","","","","","","","","","","","Sets the desired format of the mask. The default value is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new angle from degrees.","Creates a new angle from gradians.","Creates a new bounding box from a sequence of points.","Creates a new angle from radians.","Creates a new angle from turns.","Returns the height of the bounding box.","Height in pixels.","Invokes a closure with the format, width and height of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the inverse of the transform, if any.","Returns true if the bounding box is empty.","Returns true if the style is a stroke.","Sets the join style that determines how individual …","Style for connecting segments of the stroke.","Horizontal offset with respect to the origin specified …","Computes the total length of the path.","Returns the length of the vector.","Returns the squared length of the vector.","Adds a line to the specified point. This will begin a new …","","","Sets the limit for miter joins beyond which a bevel will …","Limit for miter joins.","Moves to the specified point, beginning a new subpath.","","","Returns true if this vector is approximately equal to …","Returns true if this vector is approximately equal to …","Creates a new hit test builder for the specified path data.","Creates a new mask builder for the specified path data.","Creates a new iterator like type that steps along a path …","Creates a new vector with the specified coordinates.","Creates a new transform.","Creates a new bounding box from minimum and maximum points.","Creates a new scratch memory context.","Creates a new stroke style with the specified width.","Creates a new iterator over the vertices of a path.","","Returns a normalized copy of the vector.","Sets the offset for the path.","Offset of the first dash.","Sets the origin that defines the coordinate system for the …","Returns a new transform that represents a rotation …","Returns a new transform that represents a scale followed …","Returns a new transform that represents a translation …","Adds a quadratic bezier curve from the current point …","Adds an arc with the specified x- and y-radius, rotation …","Adds an arc with the specified x- and y-radius, rotation …","Adds a cubic bezier curve from the current point through …","Adds a cubic bezier curve from the current point through …","Adds a line to the specified point, relative to the …","Adds a line to the specified point, relative to the …","Moves to the specified point, relative to the current …","Moves to the specified point, relative to the current …","Adds a quadratic bezier curve from the current point …","Adds a quadratic bezier curve from the current point …","Returns the remaining distance available to walk on the …","Renders the mask to a newly allocated buffer.","Renders the mask into a byte buffer. If specified, the …","Sets an additional rendering offset for the mask. This …","Creates a rotation transform.","Creates a rotation transform around a point.","Creates a scale transform.","Sets whether or not scaling is applied to the stroke. The …","True if the stroke width should be affected by the scale …","Sets an explicit size for the mask. If left unspecified, …","Creates a skew transform.","Style for capping the beginning of an open subpath.","Steps by the specified distance and returns the point at …","Sets the style of the path.","Sets the style of the path. The default is a non-zero fill.","","Creates a format for BGRA subpixel rendering.","Returns true if the specified point is painted by the path.","Returns a new transform that represents the application of …","Returns a new transform that represents this transform …","Returns a new transform that represents this transform …","Returns a new transform that represents this transform …","Sets the threshold value for determining whether a hit …","Returns the angle in degrees.","","","","","","","","","","","","","","","","","","","Returns the angle in radians.","Vertical offset with respect to the origin specified when …","Sets the transformation matrix of the path.","Sets the transformation matrix of the path.","Returns the result of a transformation matrix applied to …","Returns the result of applying this transform to a point.","Returns the result of applying this transform to a vector.","Creates a translation transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an error indicating the first position of invalid …","Returns the associated verb for the command.","Returns the width of the bounding box.","Sets the width of the stroke. The default is 1.","Width in pixels.","Width of the stroke.","Creates a new hit test builder for the specified path data …","Creates a new mask builder for the specified path data and …","Creates a new iterator like type that steps along a …","Creates a new iterator over the vertices of a transformed …","","","","","","","","","",""],"i":[16,0,0,0,25,23,0,20,0,21,22,0,9,21,22,16,26,8,0,10,0,0,6,0,13,21,22,0,26,25,21,22,14,8,0,0,0,0,0,14,21,22,25,20,0,13,20,26,0,10,0,16,23,0,0,0,0,0,0,5,1,1,11,11,11,11,11,11,11,11,1,0,12,11,11,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,0,12,16,19,19,1,21,22,5,1,6,23,24,15,16,13,14,8,25,20,19,10,26,27,21,22,5,1,6,23,24,15,16,13,14,8,25,20,19,10,26,27,11,9,24,15,9,9,1,11,11,19,19,5,1,6,23,24,15,16,12,19,10,6,1,1,1,1,19,21,22,5,1,23,16,13,14,8,25,20,26,1,21,22,5,1,6,23,24,15,16,8,25,20,19,10,26,34,39,34,40,21,22,5,1,1,1,1,1,1,1,1,1,6,23,24,15,16,13,14,12,8,25,20,19,10,10,10,10,10,26,27,5,5,15,5,5,15,24,34,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,27,6,15,10,19,19,24,0,1,1,11,15,15,19,19,11,1,1,1,1,39,34,40,1,6,15,12,19,27,27,1,34,19,34,6,6,6,11,11,11,11,11,11,11,11,11,11,11,40,34,34,34,6,6,6,19,19,34,6,19,40,39,34,1,16,39,6,6,6,6,39,5,21,22,5,1,6,23,24,15,16,13,14,8,25,20,19,10,26,27,5,24,39,34,21,6,6,6,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,39,34,40,21,22,5,1,6,23,24,15,16,13,14,12,8,25,20,19,10,26,27,0,21,15,19,24,19,39,34,40,27,3,1,6,6,6,3,1,6,6,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[-1,-2,2],-1,[],[[4,[3]]]],[[-1,-2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2,2,2],-1,[],[[4,[3]]]],[[-1,-2,2,2,2,2],-1,[],[[4,[3]]]],[[1,1],5],[[-1,-2,[7,[6]],-3],8,9,[[4,[10]]],11],[[12,-1,-2,[7,[6]],-3],8,9,[[4,[10]]],11],[[-1,2,2,5,13,14,-2],-1,[],[[4,[3]]]],[[-1,2,2,5,13,14,-2],-1,[],[[4,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,[7,[6]]],15,9,[[4,[10]]]],[[12,-1,-2,[7,[6]]],15,9,[[4,[10]]]],[[16,17,17],18],[[19,20],19],[[19,20,20],19],[1,1],[21,21],[22,22],[5,5],[1,1],[6,6],[23,23],[24,24],[15,15],[16,16],[13,13],[14,14],[8,8],[25,25],[20,20],[19,19],[10,10],[26,26],[[[27,[-1]]],[[27,[-1]]],28],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[-1,-1,[]],[-1,[],[]],[[23,-1,15],[[29,[1,24]]],[[4,[1]]]],[[15,-1],30,[[4,[3]]]],[[-1,-2],29,[],11],[[-1,-2],29,[],11],[[1,1],2],[-1,3,[]],[[-1,-2,-3,-4],-1,[],[[4,[3]]],[[4,[3]]],[[4,[3]]]],[[19,[31,[2]],2],19],0,[[],5],[[],1],[[],6],[[],23],[[],24],[[],15],[[],16],[[],12],[[],19],[[],10],[6,2],[[1,1],2],[[1,1],1],[[1,2],1],[[1,1],2],0,[[21,21],30],[[22,22],30],[[5,5],30],[[1,1],30],[[23,23],30],[[16,16],30],[[13,13],30],[[14,14],30],[[8,8],30],[[25,25],30],[[20,20],30],[[26,26],30],[1,1],[[21,32],33],[[22,32],33],[[5,32],33],[[1,32],33],[[6,32],33],[[23,32],33],[[24,32],33],[[15,32],33],[[16,32],33],[[8,32],33],[[25,32],33],[[20,32],33],[[19,32],33],[[10,32],33],[[26,32],33],[[[34,[-1]],16],[[34,[-1]]],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[35]]],1],[[[29,[35,35]]],1],[[[36,[2]]],1],[[[29,[35,2]]],1],[2,1],[[[29,[2,35]]],1],[35,1],[[[29,[2,2]]],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,10],[19,10],[19,10],[-1,-1,[]],[19,10],[-1,-1,[]],[-1,-1,[]],[2,5],[2,5],[-1,15,37],[2,5],[2,5],[15,2],0,[[[34,[-1]],-2],[[34,[-1]]],9,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[7,[6]]]],[15,30],[10,30],[[19,25],19],0,0,[[-1,[7,[6]]],2,9],[1,2],[1,2],[[-1,-2],-1,[],[[4,[3]]]],0,0,[[19,2],19],0,[[-1,-2],-1,[],[[4,[3]]]],[[1,2],1],[[1,1],1],[[1,1],30],[[1,1,2],30],[-1,[[39,[-1]]],9],[-1,[[34,[-1]]],9],[-1,[[40,[-2]]],9,[41,28]],[[2,2],1],[[2,2,2,2,2,2],6],[[3,3],15],[[],12],[2,19],[-1,[[27,[-2]]],9,[41,28]],[[[27,[-1]]],7,[41,28]],[1,1],[[[34,[-1]],-2],[[34,[-1]]],9,[[4,[1]]]],0,[[[34,[-1]],23],[[34,[-1]]],9],[[6,5],6],[[6,2,2],6],[[6,2,2],6],[[-1,-2,-3],-1,[],[[4,[3]]],[[4,[3]]]],[[-1,2,2,5,13,14,-2],-1,[],[[4,[3]]]],[[-1,2,2,5,13,14,-2],-1,[],[[4,[3]]]],[[-1,-2,-3,-4],-1,[],[[4,[3]]],[[4,[3]]],[[4,[3]]]],[[-1,-2,-3,-4],-1,[],[[4,[3]]],[[4,[3]]],[[4,[3]]]],[[-1,-2],-1,[],[[4,[3]]]],[[-1,-2],-1,[],[[4,[3]]]],[[-1,-2],-1,[],[[4,[3]]]],[[-1,-2],-1,[],[[4,[3]]]],[[-1,-2,-3],-1,[],[[4,[3]]],[[4,[3]]]],[[-1,-2,-3],-1,[],[[4,[3]]],[[4,[3]]]],[[[40,[-1]]],2,[41,28]],[[[34,[-1]]],[[29,[[43,[42]],24]]],9],[[[34,[-1]],[31,[42]],[7,[18]]],24,9],[[[34,[-1]],-2],[[34,[-1]]],9,[[4,[1]]]],[5,6],[[-1,5],6,[[4,[3]]]],[[2,2],6],[[19,30],19],0,[[[34,[-1]],17,17],[[34,[-1]]],9],[[5,5],6],0,[[[40,[-1]],2],[[7,[[29,[3,1]]]]],[41,28]],[[[39,[-1]],-2],[[39,[-1]]],9,[[4,[10]]]],[[[34,[-1]],-2],[[34,[-1]]],9,[[4,[10]]]],[[1,1],1],[[],16],[[[39,[-1]],-2],30,9,[[4,[3]]]],[[6,6],6],[[6,5],6],[[6,2,2],6],[[6,2,2],6],[[[39,[-1]],42],[[39,[-1]]],9],[5,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,2],0,[[[39,[-1]],[7,[6]]],[[39,[-1]]],9],[[[34,[-1]],[7,[6]]],[[34,[-1]]],9],[[21,6],21],[[6,3],3],[[6,1],1],[[2,2],6],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[46,[[44,[29,18]]]],[21,22],[15,2],[[19,2],19],0,0,[[-1,12],[[39,[-1]]],9],[[-1,12],[[34,[-1]]],9],[[-1,6],[[40,[[0,[-2]]]]],9,[41,28]],[[-1,6],[[27,[[0,[-2]]]]],9,[41,28]],0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Vector",0],[15,"f32"],[6,"Point",0],[8,"Into",465],[3,"Angle",0],[3,"Transform",0],[4,"Option",466],[4,"Fill",0],[8,"PathData",0],[4,"Style",0],[8,"PathBuilder",0],[3,"Scratch",0],[4,"ArcSize",0],[4,"ArcSweep",0],[3,"Bounds",0],[4,"Format",0],[15,"u32"],[15,"usize"],[3,"Stroke",0],[4,"Cap",0],[4,"Command",0],[4,"Verb",0],[4,"Origin",0],[3,"Placement",0],[4,"Join",0],[4,"Vertex",0],[3,"Vertices",0],[8,"Clone",467],[15,"tuple"],[15,"bool"],[15,"slice"],[3,"Formatter",468],[6,"Result",468],[3,"Mask",0],[15,"i32"],[15,"array"],[8,"IntoIterator",469],[8,"FnMut",470],[3,"HitTest",0],[3,"Walk",0],[8,"Iterator",471],[15,"u8"],[3,"Vec",472],[4,"Result",473],[3,"TypeId",474],[15,"str"]],"b":[[184,"impl-Div-for-Vector"],[185,"impl-Div%3Cf32%3E-for-Vector"],[224,"impl-From%3C%5Bi32;+2%5D%3E-for-Vector"],[225,"impl-From%3C(i32,+i32)%3E-for-Vector"],[226,"impl-From%3C%5Bf32;+2%5D%3E-for-Vector"],[227,"impl-From%3C(i32,+f32)%3E-for-Vector"],[228,"impl-From%3Cf32%3E-for-Vector"],[229,"impl-From%3C(f32,+i32)%3E-for-Vector"],[230,"impl-From%3Ci32%3E-for-Vector"],[231,"impl-From%3C(f32,+f32)%3E-for-Vector"],[244,"impl-From%3CFill%3E-for-Style%3C\'_%3E"],[245,"impl-From%3C%26Stroke%3C\'a%3E%3E-for-Style%3C\'a%3E"],[246,"impl-From%3C%26mut+Stroke%3C\'a%3E%3E-for-Style%3C\'a%3E"],[248,"impl-From%3CStroke%3C\'a%3E%3E-for-Style%3C\'a%3E"],[297,"impl-Mul%3Cf32%3E-for-Vector"],[298,"impl-Mul-for-Vector"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
